sciencegadgets.onScriptDownloaded("var __gwtModuleFunction = $wnd.sciencegadgets;\nvar $sendStats = __gwtModuleFunction.__sendStats;\n$sendStats('moduleStartup', 'moduleEvalStart');\nvar $gwt_version = \"2.4.0\";\nvar $strongName = '4BE64BFF3B6347E0965AC976BFF49234';\nvar $doc = $wnd.document;var $stats = $wnd.__gwtStatsEvent ? function(a) {return $wnd.__gwtStatsEvent(a);} : null;\nvar $sessionId = $wnd.__gwtStatsSessionId ? $wnd.__gwtStatsSessionId : null;\nvar _, P0_longLit = {l:0, m:0, h:0}, P64_longLit = {l:100, m:0, h:0}, Q$Object = 0, Q$String = 1, Q$DropControllerCollection$Candidate = 2, Q$DropControllerCollection$Candidate_$1 = 3, Q$MouseDragHandler$RegisteredDraggable = 4, Q$PickupDragController$SavedWidgetInfo = 5, Q$VetoDragException = 6, Q$AbsolutePositionDropController$Draggable = 7, Q$DropController = 8, Q$Location = 9, Q$AnimationScheduler$AnimationHandle = 10, Q$AnimationSchedulerImplTimer$AnimationHandleImpl = 11, Q$AnimationSchedulerImplTimer$AnimationHandleImpl_$1 = 12, Q$Style$BorderStyle = 13, Q$Style$Display = 14, Q$Style$HasCssName = 15, Q$Style$Overflow = 16, Q$Style$Position = 17, Q$Style$Unit = 18, Q$ClickHandler = 19, Q$DomEvent$Type = 20, Q$MouseDownHandler = 21, Q$MouseMoveHandler = 22, Q$MouseOutHandler = 23, Q$MouseOverHandler = 24, Q$MouseUpHandler = 25, Q$TouchCancelHandler = 26, Q$TouchEndHandler = 27, Q$TouchMoveHandler = 28, Q$TouchStartHandler = 29, Q$AttachEvent$Handler = 30, Q$CloseHandler = 31, Q$HasAttachHandlers = 32, Q$ResizeHandler = 33, Q$ValueChangeHandler = 34, Q$EventHandler = 35, Q$HandlerRegistration = 36, Q$HasHandlers = 37, Q$HasDirection$Direction = 38, Q$LongLibBase$LongEmul = 39, Q$HtmlLogFormatter = 40, Q$Point = 41, Q$TouchScroller$TemporalPoint = 42, Q$Command = 43, Q$Event$NativePreviewHandler = 44, Q$EventListener = 45, Q$Timer = 46, Q$AbsolutePanel = 47, Q$HasVisibility = 48, Q$InsertPanel = 49, Q$IsWidget = 50, Q$RootPanel = 51, Q$SimplePanel = 52, Q$UIObject = 53, Q$Widget = 54, Q$SimpleEventBus$Command = 55, Q$UmbrellaException = 56, Q$TopNodesNotFoundException = 57, Q$MLElementWrapper = 58, Q$MLElementWrapper$ElementOutHandler = 59, Q$MLElementWrapper$ElementOverHandler = 60, Q$ElementNotFoundExeption = 61, Q$EquationDatabase$V = 62, Q$DropControllAssigner$DropType = 63, Q$JohnTree$JohnNode = 64, Q$JohnTree$Type = 65, Q$Serializable = 66, Q$Serializable_$1 = 67, Q$Boolean = 68, Q$Byte = 69, Q$CharSequence = 70, Q$CharSequence_$1 = 71, Q$Comparable = 72, Q$Comparable_$1 = 73, Q$Enum = 74, Q$Exception = 75, Q$IndexOutOfBoundsException = 76, Q$NullPointerException = 77, Q$Number = 78, Q$NumberFormatException = 79, Q$Object_$1 = 80, Q$RuntimeException = 81, Q$Short = 82, Q$StackTraceElement = 83, Q$String_$1 = 84, Q$Throwable = 85, Q$Throwable_$1 = 86, Q$Date = 87, Q$List = 88, Q$Map = 89, Q$Map$Entry = 90, Q$NoSuchElementException = 91, Q$Set = 92, Q$Handler = 93, Q$Logger = 94, Q$VectorObject = 95, Q$short_$1 = 96;\nfunction makeCastMap(a){\n  var result = {};\n  for (var i = 0, c = a.length; i < c; ++i) {\n    result[a[i]] = 1;\n  }\n  return result;\n}\n\nfunction nullMethod(){\n}\n\nfunction Object_0(){\n}\n\n_ = Object_0.prototype = {};\n_.equals$ = function equals(other){\n  return this === other;\n}\n;\n_.getClass$ = function getClass_0(){\n  return Ljava_lang_Object_2_classLit;\n}\n;\n_.hashCode$ = function hashCode_0(){\n  return getHashCode(this);\n}\n;\n_.toString$ = function toString_0(){\n  return this.getClass$().typeName + '@' + toPowerOfTwoString(this.hashCode$());\n}\n;\n_.toString = function(){\n  return this.toString$();\n}\n;\n_.typeMarker$ = nullMethod;\n_.castableTypeMap$ = {};\nfunction $clinit_AbstractDragController(){\n  $clinit_AbstractDragController = nullMethod;\n  dragHandles = new HashMap_0;\n}\n\nfunction $clearSelection(this$static){\n  var iterator, widget;\n  for (iterator = new AbstractList$IteratorImpl_0(this$static.context.selectedWidgets); iterator.i < iterator.this$0_0.size_0();) {\n    widget = dynamicCast($next_4(iterator), Q$Widget);\n    $setStyleName(widget, 'dragdrop-selected', false);\n    $remove_10(iterator);\n  }\n}\n\nfunction $makeDraggable(this$static, draggable){\n  $makeDraggable_0(this$static.mouseDragHandler, draggable, draggable);\n  setStyleName(draggable.element_0, 'dragdrop-draggable', true);\n  setStyleName(draggable.element_0, 'dragdrop-handle', true);\n  $put_0(dragHandles, draggable, draggable);\n}\n\nfunction $toggleSelection(this$static, draggable){\n  if ($remove_13(this$static.context.selectedWidgets, draggable)) {\n    $setStyleName(draggable, 'dragdrop-selected', false);\n  }\n   else {\n    $clear_1(this$static.context.selectedWidgets);\n    $add_10(this$static.context.selectedWidgets, draggable);\n  }\n}\n\nfunction AbstractDragController(){\n}\n\n_ = AbstractDragController.prototype = new Object_0;\n_.dragEnd = function dragEnd(){\n  $setStyleName(this.context.draggable, 'dragdrop-dragging', false);\n}\n;\n_.dragStart = function dragStart(){\n  this.resetCache();\n  $setStyleName(this.context.draggable, 'dragdrop-dragging', true);\n}\n;\n_.getClass$ = function getClass_1(){\n  return Lcom_allen_1sauer_gwt_dnd_client_AbstractDragController_2_classLit;\n}\n;\n_.previewDragEnd = function previewDragEnd(){\n}\n;\n_.resetCache = function resetCache(){\n}\n;\n_.boundaryPanel = null;\n_.constrainedToBoundaryPanel = false;\n_.context = null;\n_.dragStartSensitivityPixels = 0;\n_.mouseDragHandler = null;\nvar dragHandles;\nfunction $dragEndCleanup(this$static){\n  this$static.dropController = null;\n  this$static.draggable = null;\n}\n\nfunction DragContext_0(dragController){\n  this.selectedWidgets = new ArrayList_0;\n  this.dragController = dragController;\n  this.boundaryPanel = dragController.boundaryPanel;\n}\n\nfunction DragContext(){\n}\n\n_ = DragContext_0.prototype = DragContext.prototype = new Object_0;\n_.getClass$ = function getClass_2(){\n  return Lcom_allen_1sauer_gwt_dnd_client_DragContext_2_classLit;\n}\n;\n_.boundaryPanel = null;\n_.desiredDraggableX = 0;\n_.desiredDraggableY = 0;\n_.dragController = null;\n_.draggable = null;\n_.dropController = null;\n_.mouseX = 0;\n_.mouseY = 0;\n_.vetoException = null;\nfunction $getIntersectDropController(this$static, x, y){\n  var candidate, i, location_0, targetArea;\n  location_0 = new CoordinateLocation_0(x, y);\n  for (i = this$static.sortedCandidates.length - 1; i >= 0; --i) {\n  }\n  for (i = this$static.sortedCandidates.length - 1; i >= 0; --i) {\n    candidate = this$static.sortedCandidates[i];\n    targetArea = candidate.targetArea;\n    if (targetArea.left <= location_0.left && location_0.left <= targetArea.right && targetArea.top_0 <= location_0.top_0 && location_0.top_0 <= targetArea.bottom) {\n      return candidate.dropController;\n    }\n  }\n  return null;\n}\n\nfunction $resetCache(this$static, boundaryPanel, context){\n  var boundaryArea, candidate, dropController, dropController$iterator, dropTarget, list;\n  list = new ArrayList_0;\n  if (context.draggable) {\n    boundaryArea = new WidgetArea_0(boundaryPanel);\n    for (dropController$iterator = new AbstractList$IteratorImpl_0(this$static.dropControllerList); dropController$iterator.i < dropController$iterator.this$0_0.size_0();) {\n      dropController = dynamicCast($next_4(dropController$iterator), Q$DropController);\n      candidate = new DropControllerCollection$Candidate_0(dropController);\n      dropTarget = candidate.dropController.getDropTarget();\n      if ($isOrHasChild(context.draggable.element_0, dropTarget.element_0)) {\n        continue;\n      }\n      $intersects(candidate.targetArea, boundaryArea) && (setCheck(list.array, list.size++, candidate) , true);\n    }\n  }\n  this$static.sortedCandidates = dynamicCast($toArray_0(list, initDim(_3Lcom_allen_1sauer_gwt_dnd_client_DropControllerCollection$Candidate_2_classLit, makeCastMap([Q$DropControllerCollection$Candidate_$1, Q$Serializable, Q$Comparable_$1, Q$Object_$1]), Q$DropControllerCollection$Candidate, list.size, 0)), Q$DropControllerCollection$Candidate_$1);\n  sort(this$static.sortedCandidates);\n}\n\nfunction DropControllerCollection_0(dropControllerList){\n  this.dropControllerList = dropControllerList;\n}\n\nfunction DropControllerCollection(){\n}\n\n_ = DropControllerCollection_0.prototype = DropControllerCollection.prototype = new Object_0;\n_.getClass$ = function getClass_3(){\n  return Lcom_allen_1sauer_gwt_dnd_client_DropControllerCollection_2_classLit;\n}\n;\n_.dropControllerList = null;\n_.sortedCandidates = null;\nfunction $compareElement(this$static, myElement, otherElement){\n  var myParentElement, otherParentElement;\n  if (myElement == otherElement) {\n    return 0;\n  }\n   else {\n    if (myElement.contains(otherElement)) {\n      return -1;\n    }\n     else {\n      if (otherElement.contains(myElement)) {\n        return 1;\n      }\n       else {\n        myParentElement = $getParentElement(myElement);\n        otherParentElement = $getParentElement(otherElement);\n        if (!!myParentElement && !!otherParentElement) {\n          return $compareElement(this$static, myParentElement, otherParentElement);\n        }\n        return 0;\n      }\n    }\n  }\n}\n\nfunction $compareTo(this$static, other){\n  var myElement, otherElement;\n  myElement = this$static.dropController.getDropTarget().element_0;\n  otherElement = other.dropController.getDropTarget().element_0;\n  return $compareElement(this$static, myElement, otherElement);\n}\n\nfunction DropControllerCollection$Candidate_0(dropController){\n  var target;\n  this.dropController = dropController;\n  target = dropController.getDropTarget();\n  if (!target.attached) {\n    throw new IllegalStateException_1('Unattached drop target. You must call DragController#unregisterDropController for all drop targets not attached to the DOM.');\n  }\n  this.targetArea = new WidgetArea_0(target);\n}\n\nfunction DropControllerCollection$Candidate(){\n}\n\n_ = DropControllerCollection$Candidate_0.prototype = DropControllerCollection$Candidate.prototype = new Object_0;\n_.compareTo$ = function compareTo(other){\n  return $compareTo(this, dynamicCast(other, Q$DropControllerCollection$Candidate));\n}\n;\n_.equals$ = function equals_0(other){\n  throw new RuntimeException_0('hash code not implemented');\n}\n;\n_.getClass$ = function getClass_4(){\n  return Lcom_allen_1sauer_gwt_dnd_client_DropControllerCollection$Candidate_2_classLit;\n}\n;\n_.hashCode$ = function hashCode_1(){\n  throw new RuntimeException_0('hash code not implemented');\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$DropControllerCollection$Candidate, Q$Comparable]);\n_.dropController = null;\n_.targetArea = null;\nfunction $actualMove(this$static, x, y){\n  this$static.context.mouseX = x;\n  this$static.context.mouseY = y;\n  this$static.context.desiredDraggableX = x - this$static.mouseDownOffsetX;\n  this$static.context.desiredDraggableY = y - this$static.mouseDownOffsetY;\n  this$static.context.dragController.dragMove();\n}\n\nfunction $doSelectionToggle(this$static, event_0){\n  var widget;\n  widget = dynamicCast($get_0(this$static.dragHandleMap, mouseDownWidget), Q$MouseDragHandler$RegisteredDraggable).dragable;\n  !!event_0.nativeEvent.ctrlKey || !!event_0.nativeEvent.metaKey || $clearSelection(this$static.context.dragController);\n  $toggleSelection(this$static.context.dragController, widget);\n}\n\nfunction $dragEndCleanup_0(this$static){\n  releaseCapture(this$static.capturingWidget.element_0);\n  $removeFromParent(this$static.capturingWidget);\n  this$static.dragging = 1;\n  $dragEndCleanup(this$static.context);\n}\n\nfunction $drop(this$static, x, y){\n  var $e0, ex;\n  $actualMove(this$static, x, y);\n  try {\n    this$static.context.dragController.previewDragEnd();\n  }\n   catch ($e0) {\n    $e0 = caught_0($e0);\n    if (instanceOf($e0, Q$VetoDragException)) {\n      ex = $e0;\n      this$static.context.vetoException = ex;\n    }\n     else \n      throw $e0;\n  }\n  this$static.context.dragController.dragEnd();\n}\n\nfunction $makeDraggable_0(this$static, draggable, dragHandle){\n  var $e0, ex, registeredDraggable;\n  try {\n    registeredDraggable = new MouseDragHandler$RegisteredDraggable_0(this$static, draggable, dragHandle);\n    $put_0(this$static.dragHandleMap, dragHandle, registeredDraggable);\n  }\n   catch ($e0) {\n    $e0 = caught_0($e0);\n    if (instanceOf($e0, Q$Exception)) {\n      ex = $e0;\n      throw new RuntimeException_1('dragHandle must implement HasMouseDownHandlers to be draggable', ex);\n    }\n     else \n      throw $e0;\n  }\n}\n\nfunction $onTouchEndorCancel(this$static, event_0){\n  if (event_0.nativeEvent.touches.length != 0) {\n    return;\n  }\n  if (!mouseDownWidget) {\n    return;\n  }\n  try {\n    if (this$static.dragging == 1) {\n      $doSelectionToggle(this$static, event_0);\n      return;\n    }\n    try {\n      $drop(this$static, this$static.context.mouseX, this$static.context.mouseY);\n      this$static.dragging != 3 && $doSelectionToggle(this$static, event_0);\n    }\n     finally {\n      $dragEndCleanup_0(this$static);\n    }\n  }\n   finally {\n    mouseDownWidget = null;\n    $dragEndCleanup_0(this$static);\n  }\n}\n\nfunction $startCapturing(this$static){\n  $setPixelSize(this$static.capturingWidget, 0, 0);\n  $add_2(($clinit_RootPanel() , get()), this$static.capturingWidget, 0, 0);\n  setCapture(this$static.capturingWidget.element_0);\n}\n\nfunction $startDragging(this$static){\n  this$static.context.vetoException = null;\n  this$static.context.dragController.dragStart();\n  $startCapturing(this$static);\n  $setPixelSize(this$static.capturingWidget, ($clinit_RootPanel() , $getPropertyInt(get().element_0, 'offsetWidth')), $getPropertyInt(get().element_0, 'offsetHeight'));\n  this$static.dragging = 2;\n}\n\nfunction MouseDragHandler_0(context){\n  var style;\n  this.dragHandleMap = new HashMap_0;\n  this.context = context;\n  this.capturingWidget = new FocusPanel_0;\n  $addDomHandler(this.capturingWidget, this, ($clinit_MouseMoveEvent() , $clinit_MouseMoveEvent() , TYPE_1));\n  $addDomHandler(this.capturingWidget, this, ($clinit_MouseUpEvent() , $clinit_MouseUpEvent() , TYPE_4));\n  $addDomHandler(this.capturingWidget, this, ($clinit_TouchMoveEvent() , $clinit_TouchMoveEvent() , TYPE_7));\n  $addDomHandler(this.capturingWidget, this, ($clinit_TouchEndEvent() , $clinit_TouchEndEvent() , TYPE_6));\n  $addDomHandler(this.capturingWidget, this, ($clinit_TouchCancelEvent() , $clinit_TouchCancelEvent() , TYPE_5));\n  style = this.capturingWidget.element_0.style;\n  style['filter'] = 'alpha(opacity=0)';\n  style.opacity = 0;\n  style['zIndex'] = '1000';\n  style['margin'] = 0 + ($clinit_Style$Unit() , 'px');\n  style['borderStyle'] = ($clinit_Style$BorderStyle() , 'none');\n  style['backgroundColor'] = 'blue';\n}\n\nfunction MouseDragHandler(){\n}\n\n_ = MouseDragHandler_0.prototype = MouseDragHandler.prototype = new Object_0;\n_.getClass$ = function getClass_5(){\n  return Lcom_allen_1sauer_gwt_dnd_client_MouseDragHandler_2_classLit;\n}\n;\n_.onMouseDown = function onMouseDown(event_0){\n  var button, loc1, loc2, sender, x, y;\n  if (supportsTouchEvents) {\n    return;\n  }\n  if (this.dragging == 3 || this.dragging == 2) {\n    return;\n  }\n  sender = dynamicCast(event_0.source, Q$Widget);\n  x = $getX(event_0);\n  y = $getY(event_0);\n  button = $eventGetButton(event_0.nativeEvent);\n  if (button != 1) {\n    return;\n  }\n  if (mouseDownWidget) {\n    return;\n  }\n  mouseDownWidget = sender;\n  this.context.draggable = dynamicCast($get_0(this.dragHandleMap, mouseDownWidget), Q$MouseDragHandler$RegisteredDraggable).dragable;\n  if (!(!!event_0.nativeEvent.ctrlKey || !!event_0.nativeEvent.metaKey) && $indexOf_1(this.context.selectedWidgets, this.context.draggable, 0) == -1) {\n    $clearSelection(this.context.dragController);\n    $toggleSelection(this.context.dragController, this.context.draggable);\n  }\n  $scheduleDeferred(($clinit_SchedulerImpl() , INSTANCE_0), new MouseDragHandler$1_0);\n  event_0.nativeEvent.preventDefault();\n  this.mouseDownOffsetX = x;\n  this.mouseDownOffsetY = y;\n  loc1 = new WidgetLocation_0(mouseDownWidget, null);\n  if (mouseDownWidget != this.context.draggable) {\n    loc2 = new WidgetLocation_0(this.context.draggable, null);\n    this.mouseDownOffsetX += loc1.left - loc2.left;\n    this.mouseDownOffsetY += loc1.top_0 - loc2.top_0;\n  }\n  if (this.context.dragController.dragStartSensitivityPixels == 0 && !(!!event_0.nativeEvent.ctrlKey || !!event_0.nativeEvent.metaKey)) {\n    this.context.mouseX = x + loc1.left;\n    this.context.mouseY = y + loc1.top_0;\n    $startDragging(this);\n    if (this.dragging == 1) {\n      return;\n    }\n    $actualMove(this, this.context.mouseX, this.context.mouseY);\n  }\n   else {\n    this.mouseDownPageOffsetX = this.mouseDownOffsetX + loc1.left;\n    this.mouseDownPageOffsetY = this.mouseDownOffsetY + loc1.top_0;\n    $startCapturing(this);\n  }\n}\n;\n_.onMouseMove = function onMouseMove(event_0){\n  var elem, location_0, sender, x, y;\n  if (supportsTouchEvents) {\n    return;\n  }\n  sender = dynamicCast(event_0.source, Q$Widget);\n  elem = sender.element_0;\n  x = $getRelativeX_0(event_0, elem);\n  y = $getRelativeY_0(event_0, elem);\n  if (this.dragging == 3 || this.dragging == 2) {\n    if (sender != this.capturingWidget) {\n      return;\n    }\n    this.dragging = 3;\n  }\n   else {\n    if (mouseDownWidget) {\n      if (max(abs_0(x - this.mouseDownPageOffsetX), abs_0(y - this.mouseDownPageOffsetY)) >= this.context.dragController.dragStartSensitivityPixels) {\n        $clinit_DOMUtil();\n        $cancelAllDocumentSelections();\n        $indexOf_1(this.context.selectedWidgets, this.context.draggable, 0) != -1 || $toggleSelection(this.context.dragController, this.context.draggable);\n        location_0 = new WidgetLocation_0(mouseDownWidget, null);\n        this.context.mouseX = this.mouseDownOffsetX + location_0.left;\n        this.context.mouseY = this.mouseDownOffsetY + location_0.top_0;\n        $startDragging(this);\n      }\n       else {\n        event_0.nativeEvent.preventDefault();\n      }\n    }\n    if (this.dragging == 1) {\n      return;\n    }\n  }\n  event_0.nativeEvent.preventDefault();\n  $actualMove(this, x, y);\n}\n;\n_.onMouseUp = function onMouseUp(event_0){\n  var button, elem, location_0, sender, x, y;\n  if (supportsTouchEvents) {\n    return;\n  }\n  sender = dynamicCast(event_0.source, Q$Widget);\n  elem = sender.element_0;\n  x = $getRelativeX_0(event_0, elem);\n  y = $getRelativeY_0(event_0, elem);\n  button = $eventGetButton(event_0.nativeEvent);\n  if (button != 1) {\n    return;\n  }\n  if (!mouseDownWidget) {\n    return;\n  }\n  try {\n    $clinit_DOMUtil();\n    $cancelAllDocumentSelections();\n    if (this.dragging == 1) {\n      $doSelectionToggle(this, event_0);\n      return;\n    }\n    if (sender != this.capturingWidget) {\n      location_0 = new WidgetLocation_0(sender, null);\n      x += location_0.left;\n      y += location_0.top_0;\n    }\n    try {\n      $drop(this, x, y);\n      this.dragging != 3 && $doSelectionToggle(this, event_0);\n    }\n     finally {\n      $dragEndCleanup_0(this);\n    }\n  }\n   finally {\n    mouseDownWidget = null;\n    $dragEndCleanup_0(this);\n  }\n}\n;\n_.onTouchCancel = function onTouchCancel(event_0){\n  $onTouchEndorCancel(this, event_0);\n}\n;\n_.onTouchEnd = function onTouchEnd(event_0){\n  $onTouchEndorCancel(this, event_0);\n}\n;\n_.onTouchMove = function onTouchMove(event_0){\n  var elem, location_0, sender, x, y;\n  if (event_0.nativeEvent.touches.length != 1) {\n    return;\n  }\n  event_0.nativeEvent.preventDefault();\n  sender = dynamicCast(event_0.source, Q$Widget);\n  elem = sender.element_0;\n  x = $getRelativeX(event_0.nativeEvent.touches[0], elem);\n  y = $getRelativeY(event_0.nativeEvent.touches[0], elem);\n  if (this.dragging == 3 || this.dragging == 2) {\n    this.dragging = 3;\n  }\n   else {\n    if (mouseDownWidget) {\n      if (max(abs_0(x - this.mouseDownOffsetX), abs_0(y - this.mouseDownOffsetY)) >= this.context.dragController.dragStartSensitivityPixels) {\n        $indexOf_1(this.context.selectedWidgets, this.context.draggable, 0) != -1 || $toggleSelection(this.context.dragController, this.context.draggable);\n        location_0 = new WidgetLocation_0(mouseDownWidget, null);\n        this.context.mouseX = this.mouseDownOffsetX + location_0.left;\n        this.context.mouseY = this.mouseDownOffsetY + location_0.top_0;\n        x += location_0.left;\n        y += location_0.top_0;\n        $startDragging(this);\n      }\n       else {\n        event_0.nativeEvent.preventDefault();\n      }\n    }\n    if (this.dragging == 1) {\n      return;\n    }\n  }\n  event_0.nativeEvent.preventDefault();\n  $actualMove(this, x, y);\n}\n;\n_.onTouchStart = function onTouchStart(event_0){\n  var loc1, loc2, sender, x, y;\n  supportsTouchEvents = true;\n  if (event_0.nativeEvent.touches.length != 1) {\n    return;\n  }\n  if (mouseDownWidget) {\n    return;\n  }\n  event_0.nativeEvent.preventDefault();\n  sender = dynamicCast(event_0.source, Q$Widget);\n  x = $getRelativeX(event_0.nativeEvent.touches[0], event_0.relativeElem);\n  y = $getRelativeY(event_0.nativeEvent.touches[0], event_0.relativeElem);\n  mouseDownWidget = sender;\n  this.context.draggable = dynamicCast($get_0(this.dragHandleMap, mouseDownWidget), Q$MouseDragHandler$RegisteredDraggable).dragable;\n  $clearSelection(this.context.dragController);\n  $toggleSelection(this.context.dragController, this.context.draggable);\n  event_0.nativeEvent.preventDefault();\n  this.mouseDownOffsetX = x;\n  this.mouseDownOffsetY = y;\n  loc1 = new WidgetLocation_0(mouseDownWidget, null);\n  if (mouseDownWidget != this.context.draggable) {\n    loc2 = new WidgetLocation_0(this.context.draggable, null);\n    this.mouseDownOffsetX += loc1.left - loc2.left;\n    this.mouseDownOffsetY += loc1.top_0 - loc2.top_0;\n  }\n  if (this.context.dragController.dragStartSensitivityPixels == 0 && !(!!event_0.nativeEvent.ctrlKey || !!event_0.nativeEvent.metaKey)) {\n    this.context.mouseX = x + loc1.left;\n    this.context.mouseY = y + loc1.top_0;\n    $startDragging(this);\n    if (this.dragging == 1) {\n      return;\n    }\n    $actualMove(this, this.context.mouseX, this.context.mouseY);\n  }\n   else {\n    $startCapturing(this);\n  }\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$MouseDownHandler, Q$MouseMoveHandler, Q$MouseUpHandler, Q$TouchCancelHandler, Q$TouchEndHandler, Q$TouchMoveHandler, Q$TouchStartHandler, Q$EventHandler]);\n_.capturingWidget = null;\n_.context = null;\n_.dragging = 1;\n_.mouseDownOffsetX = 0;\n_.mouseDownOffsetY = 0;\n_.mouseDownPageOffsetX = 0;\n_.mouseDownPageOffsetY = 0;\nvar mouseDownWidget = null, supportsTouchEvents = false;\nfunction MouseDragHandler$1_0(){\n}\n\nfunction MouseDragHandler$1(){\n}\n\n_ = MouseDragHandler$1_0.prototype = MouseDragHandler$1.prototype = new Object_0;\n_.execute = function execute(){\n  $clinit_DOMUtil();\n  $cancelAllDocumentSelections();\n}\n;\n_.getClass$ = function getClass_6(){\n  return Lcom_allen_1sauer_gwt_dnd_client_MouseDragHandler$1_2_classLit;\n}\n;\nfunction MouseDragHandler$RegisteredDraggable_0(this$0, dragable, dragHandle){\n  this.dragable = dragable;\n  !!dragHandle && $addDomHandler(dragHandle, this$0, ($clinit_TouchStartEvent() , $clinit_TouchStartEvent() , TYPE_8));\n  !!dragHandle && $addDomHandler(dragHandle, this$0, ($clinit_MouseDownEvent() , $clinit_MouseDownEvent() , TYPE_0));\n}\n\nfunction MouseDragHandler$RegisteredDraggable(){\n}\n\n_ = MouseDragHandler$RegisteredDraggable_0.prototype = MouseDragHandler$RegisteredDraggable.prototype = new Object_0;\n_.getClass$ = function getClass_7(){\n  return Lcom_allen_1sauer_gwt_dnd_client_MouseDragHandler$RegisteredDraggable_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$MouseDragHandler$RegisteredDraggable]);\n_.dragable = null;\nfunction $calcBoundaryOffset(this$static){\n  var widgetLocation;\n  widgetLocation = new WidgetLocation_0(this$static.context.boundaryPanel, null);\n  this$static.boundaryOffsetX = widgetLocation.left + ($clinit_DOMUtil() , $getBorderLeft(this$static.context.boundaryPanel.element_0));\n  this$static.boundaryOffsetY = widgetLocation.top_0 + $getBorderTop(this$static.context.boundaryPanel.element_0);\n}\n\nfunction $dragEnd(this$static){\n  if (this$static.context.vetoException) {\n    this$static.context.dropController.onLeave(this$static.context);\n    this$static.context.dropController = null;\n    $restoreSelectedWidgetsLocation(this$static);\n  }\n   else {\n    this$static.context.dropController.onDrop(this$static.context);\n    this$static.context.dropController.onLeave(this$static.context);\n    this$static.context.dropController = null;\n  }\n  $restoreSelectedWidgetsStyle(this$static);\n  $removeFromParent(this$static.movablePanel);\n  this$static.movablePanel = null;\n  $setStyleName(this$static.context.draggable, 'dragdrop-dragging', false);\n}\n\nfunction $dragStart(this$static){\n  var container, currentDraggableLocation, draggableAbsoluteLeft, draggableAbsoluteTop, location_0, relativeX, relativeY, widget, widget$iterator, widgetLocation;\n  $resetCache(this$static.dropControllerCollection, this$static.boundaryPanel, this$static.context);\n  $setStyleName(this$static.context.draggable, 'dragdrop-dragging', true);\n  this$static.lastResetCacheTimeMillis = fromDouble(currentTimeMillis0());\n  currentDraggableLocation = new WidgetLocation_0(this$static.context.draggable, this$static.context.boundaryPanel);\n  $saveSelectedWidgetsLocationAndStyle(this$static);\n  container = new AbsolutePanel_0;\n  container.element_0.style['overflow'] = 'visible';\n  $setPixelSize(container, $getPropertyInt(this$static.context.draggable.element_0, 'offsetWidth'), $getPropertyInt(this$static.context.draggable.element_0, 'offsetHeight'));\n  $add_2(this$static.context.boundaryPanel, container, currentDraggableLocation.left, currentDraggableLocation.top_0);\n  draggableAbsoluteLeft = $getAbsoluteLeft(this$static.context.draggable.element_0);\n  draggableAbsoluteTop = $getAbsoluteTop(this$static.context.draggable.element_0);\n  widgetLocation = new HashMap_0;\n  for (widget$iterator = new AbstractList$IteratorImpl_0(this$static.context.selectedWidgets); widget$iterator.i < widget$iterator.this$0_0.size_0();) {\n    widget = dynamicCast($next_4(widget$iterator), Q$Widget);\n    $put_0(widgetLocation, widget, new CoordinateLocation_0($getAbsoluteLeft(widget.element_0), $getAbsoluteTop(widget.element_0)));\n  }\n  this$static.context.dropController = $getIntersectDropController_0(this$static, this$static.context.mouseX, this$static.context.mouseY);\n  !!this$static.context.dropController && this$static.context.dropController.onEnter(this$static.context);\n  for (widget$iterator = new AbstractList$IteratorImpl_0(this$static.context.selectedWidgets); widget$iterator.i < widget$iterator.this$0_0.size_0();) {\n    widget = dynamicCast($next_4(widget$iterator), Q$Widget);\n    location_0 = dynamicCast(!widget?widgetLocation.nullSlot:$getHashValue(widgetLocation, widget, ~~getHashCode(widget)), Q$Location);\n    relativeX = location_0.getLeft() - draggableAbsoluteLeft;\n    relativeY = location_0.getTop() - draggableAbsoluteTop;\n    $add_2(container, widget, relativeX, relativeY);\n  }\n  this$static.movablePanel = container;\n  $setStyleName(this$static.movablePanel, 'dragdrop-movable-panel', true);\n  $calcBoundaryOffset(this$static);\n  this$static.dropTargetClientWidth = ($clinit_DOMUtil() , $getClientWidth(this$static.boundaryPanel.element_0));\n  this$static.dropTargetClientHeight = $getClientHeight(this$static.boundaryPanel.element_0);\n}\n\nfunction $getIntersectDropController_0(this$static, x, y){\n  var dropController;\n  dropController = $getIntersectDropController(this$static.dropControllerCollection, x, y);\n  return dropController?dropController:this$static.boundaryDropController;\n}\n\nfunction $restoreSelectedWidgetsLocation(this$static){\n  var info, widget, widget$iterator;\n  for (widget$iterator = new AbstractList$IteratorImpl_0(this$static.context.selectedWidgets); widget$iterator.i < widget$iterator.this$0_0.size_0();) {\n    widget = dynamicCast($next_4(widget$iterator), Q$Widget);\n    info = dynamicCast($get_0(this$static.savedWidgetInfoMap, widget), Q$PickupDragController$SavedWidgetInfo);\n    if (instanceOf(info.initialDraggableParent, Q$AbsolutePanel)) {\n      $add_2(dynamicCast(info.initialDraggableParent, Q$AbsolutePanel), widget, info.initialDraggableParentLocation.left, info.initialDraggableParentLocation.top_0);\n    }\n     else if (instanceOf(info.initialDraggableParent, Q$InsertPanel)) {\n      dynamicCast(info.initialDraggableParent, Q$InsertPanel).insert(widget, info.initialDraggableIndex);\n    }\n     else if (instanceOf(info.initialDraggableParent, Q$SimplePanel)) {\n      dynamicCast(info.initialDraggableParent, Q$SimplePanel).setWidget(widget);\n    }\n     else {\n      throw new RuntimeException_0('Unable to handle initialDraggableParent ' + info.initialDraggableParent.getClass$().typeName);\n    }\n  }\n}\n\nfunction $restoreSelectedWidgetsStyle(this$static){\n  var info, widget, widget$iterator;\n  for (widget$iterator = new AbstractList$IteratorImpl_0(this$static.context.selectedWidgets); widget$iterator.i < widget$iterator.this$0_0.size_0();) {\n    widget = dynamicCast($next_4(widget$iterator), Q$Widget);\n    info = dynamicCast($get_0(this$static.savedWidgetInfoMap, widget), Q$PickupDragController$SavedWidgetInfo);\n    widget.element_0.style['margin'] = info.initialDraggableMargin;\n  }\n}\n\nfunction $saveSelectedWidgetsLocationAndStyle(this$static){\n  var info, widget, widget$iterator;\n  this$static.savedWidgetInfoMap = new HashMap_0;\n  for (widget$iterator = new AbstractList$IteratorImpl_0(this$static.context.selectedWidgets); widget$iterator.i < widget$iterator.this$0_0.size_0();) {\n    widget = dynamicCast($next_4(widget$iterator), Q$Widget);\n    info = new PickupDragController$SavedWidgetInfo_0;\n    info.initialDraggableParent = widget.getParent();\n    if (instanceOf(info.initialDraggableParent, Q$AbsolutePanel)) {\n      info.initialDraggableParentLocation = new WidgetLocation_0(widget, info.initialDraggableParent);\n    }\n     else if (instanceOf(info.initialDraggableParent, Q$InsertPanel)) {\n      info.initialDraggableIndex = dynamicCast(info.initialDraggableParent, Q$InsertPanel).getWidgetIndex(widget);\n    }\n     else if (instanceOf(info.initialDraggableParent, Q$SimplePanel))\n    ;\n    else {\n      throw new RuntimeException_0(\"Unable to handle 'initialDraggableParent instanceof \" + info.initialDraggableParent.getClass$().typeName + \"'; Please create your own \" + Lcom_allen_1sauer_gwt_dnd_client_PickupDragController_2_classLit.typeName + ' and override saveSelectedWidgetsLocationAndStyle(), restoreSelectedWidgetsLocation() and restoreSelectedWidgetsStyle()');\n    }\n    info.initialDraggableMargin = widget.element_0.style['margin'];\n    widget.element_0.style['margin'] = '0px';\n    $put_0(this$static.savedWidgetInfoMap, widget, info);\n  }\n}\n\nfunction PickupDragController(){\n}\n\n_ = PickupDragController.prototype = new AbstractDragController;\n_.dragEnd = function dragEnd_0(){\n  $dragEnd(this);\n}\n;\n_.dragMove = function dragMove(){\n  var desiredLeft, desiredTop, newDropController, timeMillis;\n  timeMillis = fromDouble(currentTimeMillis0());\n  if (gte(sub(timeMillis, this.lastResetCacheTimeMillis), P64_longLit)) {\n    this.lastResetCacheTimeMillis = timeMillis;\n    $resetCache(this.dropControllerCollection, this.boundaryPanel, this.context);\n    $calcBoundaryOffset(this);\n  }\n  desiredLeft = this.context.desiredDraggableX - this.boundaryOffsetX;\n  desiredTop = this.context.desiredDraggableY - this.boundaryOffsetY;\n  if (this.constrainedToBoundaryPanel) {\n    desiredLeft = max(0, min(desiredLeft, this.dropTargetClientWidth - $getPropertyInt(this.context.draggable.element_0, 'offsetWidth')));\n    desiredTop = max(0, min(desiredTop, this.dropTargetClientHeight - $getPropertyInt(this.context.draggable.element_0, 'offsetHeight')));\n  }\n  fastSetElementPosition(this.movablePanel.element_0, desiredLeft, desiredTop);\n  newDropController = $getIntersectDropController_0(this, this.context.mouseX, this.context.mouseY);\n  if (this.context.dropController != newDropController) {\n    !!this.context.dropController && this.context.dropController.onLeave(this.context);\n    this.context.dropController = newDropController;\n    !!this.context.dropController && this.context.dropController.onEnter(this.context);\n  }\n  !!this.context.dropController && this.context.dropController.onMove(this.context);\n}\n;\n_.dragStart = function dragStart_0(){\n  $dragStart(this);\n}\n;\n_.getClass$ = function getClass_8(){\n  return Lcom_allen_1sauer_gwt_dnd_client_PickupDragController_2_classLit;\n}\n;\n_.previewDragEnd = function previewDragEnd_0(){\n  var $e0, ex;\n  try {\n    this.context.dropController.onPreviewDrop(this.context);\n  }\n   catch ($e0) {\n    $e0 = caught_0($e0);\n    if (instanceOf($e0, Q$VetoDragException)) {\n      ex = $e0;\n      throw ex;\n    }\n     else \n      throw $e0;\n  }\n}\n;\n_.registerDropController = function registerDropController(dropController){\n  $add_10(this.dropControllerList, dropController);\n}\n;\n_.resetCache = function resetCache_0(){\n  $resetCache(this.dropControllerCollection, this.boundaryPanel, this.context);\n}\n;\n_.boundaryDropController = null;\n_.boundaryOffsetX = 0;\n_.boundaryOffsetY = 0;\n_.dropControllerCollection = null;\n_.dropTargetClientHeight = 0;\n_.dropTargetClientWidth = 0;\n_.lastResetCacheTimeMillis = P0_longLit;\n_.movablePanel = null;\n_.savedWidgetInfoMap = null;\nfunction PickupDragController$SavedWidgetInfo_0(){\n}\n\nfunction PickupDragController$SavedWidgetInfo(){\n}\n\n_ = PickupDragController$SavedWidgetInfo_0.prototype = PickupDragController$SavedWidgetInfo.prototype = new Object_0;\n_.getClass$ = function getClass_9(){\n  return Lcom_allen_1sauer_gwt_dnd_client_PickupDragController$SavedWidgetInfo_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$PickupDragController$SavedWidgetInfo]);\n_.initialDraggableIndex = 0;\n_.initialDraggableMargin = null;\n_.initialDraggableParent = null;\n_.initialDraggableParentLocation = null;\nfunction $getStackTrace(this$static){\n  if (this$static.stackTrace == null) {\n    return initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Object_$1]), Q$StackTraceElement, 0, 0);\n  }\n  return this$static.stackTrace;\n}\n\nfunction $printStackTrace(this$static){\n  var causeMessage, currentCause, msg;\n  msg = new StringBuffer_0;\n  currentCause = this$static;\n  while (currentCause) {\n    causeMessage = currentCause.getMessage();\n    currentCause != this$static && (msg.impl.string += 'Caused by: ' , msg);\n    $append_0(msg, currentCause.getClass$().typeName);\n    msg.impl.string += ': ';\n    $append(msg.impl, causeMessage == null?'(No exception detail)':causeMessage);\n    msg.impl.string += '\\n';\n    currentCause = currentCause.cause;\n  }\n}\n\nfunction $setStackTrace(this$static, stackTrace){\n  var c, copy, i;\n  copy = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Object_$1]), Q$StackTraceElement, stackTrace.length, 0);\n  for (i = 0 , c = stackTrace.length; i < c; ++i) {\n    if (!stackTrace[i]) {\n      throw new NullPointerException_0;\n    }\n    copy[i] = stackTrace[i];\n  }\n  this$static.stackTrace = copy;\n}\n\nfunction Throwable(){\n}\n\n_ = Throwable.prototype = new Object_0;\n_.getClass$ = function getClass_10(){\n  return Ljava_lang_Throwable_2_classLit;\n}\n;\n_.getMessage = function getMessage(){\n  return this.detailMessage;\n}\n;\n_.toString$ = function toString_1(){\n  var className, msg;\n  className = this.getClass$().typeName;\n  msg = this.getMessage();\n  return msg != null?className + ': ' + msg:className;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable, Q$Throwable]);\n_.cause = null;\n_.detailMessage = null;\n_.stackTrace = null;\nfunction Exception_0(message){\n  $fillInStackTrace(this);\n  this.detailMessage = message;\n}\n\nfunction Exception(){\n}\n\n_ = Exception.prototype = new Throwable;\n_.getClass$ = function getClass_11(){\n  return Ljava_lang_Exception_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]);\nfunction VetoDragException_0(){\n  $fillInStackTrace(this);\n}\n\nfunction VetoDragException(){\n}\n\n_ = VetoDragException_0.prototype = VetoDragException.prototype = new Exception;\n_.getClass$ = function getClass_12(){\n  return Lcom_allen_1sauer_gwt_dnd_client_VetoDragException_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$VetoDragException, Q$Serializable, Q$Exception, Q$Throwable]);\nfunction AbstractDropController_0(dropTarget){\n  this.dropTarget_0 = dropTarget;\n  $setStyleName(dropTarget, 'dragdrop-dropTarget', true);\n}\n\nfunction AbstractDropController(){\n}\n\n_ = AbstractDropController.prototype = new Object_0;\n_.getClass$ = function getClass_13(){\n  return Lcom_allen_1sauer_gwt_dnd_client_drop_AbstractDropController_2_classLit;\n}\n;\n_.getDropTarget = function getDropTarget(){\n  return this.dropTarget_0;\n}\n;\n_.onDrop = function onDrop(context){\n}\n;\n_.onEnter = function onEnter(context){\n  $setStyleName(this.dropTarget_0, 'dragdrop-dropTarget-engage', true);\n}\n;\n_.onLeave = function onLeave(context){\n  $setStyleName(this.dropTarget_0, 'dragdrop-dropTarget-engage', false);\n}\n;\n_.onMove = function onMove(context){\n}\n;\n_.onPreviewDrop = function onPreviewDrop(context){\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$DropController]);\n_.dropTarget_0 = null;\nfunction AbstractPositioningDropController(){\n}\n\n_ = AbstractPositioningDropController.prototype = new AbstractDropController;\n_.getClass$ = function getClass_14(){\n  return Lcom_allen_1sauer_gwt_dnd_client_drop_AbstractPositioningDropController_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$DropController]);\nfunction $clinit_AbsolutePositionDropController(){\n  $clinit_AbsolutePositionDropController = nullMethod;\n  DUMMY_LABEL_IE_QUIRKS_MODE_OFFSET_HEIGHT = new Label_0('x');\n}\n\nfunction $calcDropTargetOffset(this$static){\n  var dropTargetLocation;\n  dropTargetLocation = new WidgetLocation_0(this$static.dropTarget, null);\n  this$static.dropTargetOffsetX = dropTargetLocation.left + ($clinit_DOMUtil() , $getBorderLeft(this$static.dropTarget.element_0));\n  this$static.dropTargetOffsetY = dropTargetLocation.top_0 + $getBorderTop(this$static.dropTarget.element_0);\n}\n\nfunction $makePositioner(reference){\n  var inner, offsetHeight, offsetWidth, outer;\n  outer = new SimplePanel_0;\n  setStyleName(outer.getStyleElement(), 'dragdrop-positioner', true);\n  outer.element_0.style['margin'] = '0px';\n  $add_2(($clinit_RootPanel() , get()), outer, -500, -500);\n  outer.setWidget(DUMMY_LABEL_IE_QUIRKS_MODE_OFFSET_HEIGHT);\n  inner = new SimplePanel_0;\n  inner.element_0.style['margin'] = '0px';\n  inner.element_0.style['border'] = 'none';\n  offsetWidth = reference.getOffsetWidth() - ($clinit_DOMUtil() , outer.getOffsetWidth() - $getClientWidth(outer.element_0));\n  offsetHeight = reference.getOffsetHeight() - (outer.getOffsetHeight() - $getClientHeight(outer.element_0));\n  inner.setPixelSize(offsetWidth, offsetHeight);\n  outer.setWidget(inner);\n  return outer;\n}\n\nfunction AbsolutePositionDropController(){\n}\n\n_ = AbsolutePositionDropController.prototype = new AbstractPositioningDropController;\n_.getClass$ = function getClass_15(){\n  return Lcom_allen_1sauer_gwt_dnd_client_drop_AbsolutePositionDropController_2_classLit;\n}\n;\n_.makePositioner = function makePositioner(reference){\n  return $makePositioner(reference);\n}\n;\n_.onDrop = function onDrop_0(context){\n  var draggable, draggable$iterator;\n  for (draggable$iterator = new AbstractList$IteratorImpl_0(this.draggableList); draggable$iterator.i < draggable$iterator.this$0_0.size_0();) {\n    draggable = dynamicCast($next_4(draggable$iterator), Q$AbsolutePositionDropController$Draggable);\n    $removeFromParent(draggable.positioner);\n    $add_2(this.dropTarget, draggable.widget, draggable.desiredX, draggable.desiredY);\n  }\n}\n;\n_.onEnter = function onEnter_0(context){\n  var draggable, draggableAbsoluteLeft, draggableAbsoluteTop, widget, widget$iterator;\n  $addStyleName(this.dropTarget_0, 'dragdrop-dropTarget-engage');\n  this.dropTargetClientWidth = ($clinit_DOMUtil() , $getClientWidth(this.dropTarget.element_0));\n  this.dropTargetClientHeight = $getClientHeight(this.dropTarget.element_0);\n  $calcDropTargetOffset(this);\n  draggableAbsoluteLeft = $getAbsoluteLeft(context.draggable.element_0);\n  draggableAbsoluteTop = $getAbsoluteTop(context.draggable.element_0);\n  for (widget$iterator = new AbstractList$IteratorImpl_0(context.selectedWidgets); widget$iterator.i < widget$iterator.this$0_0.size_0();) {\n    widget = dynamicCast($next_4(widget$iterator), Q$Widget);\n    draggable = new AbsolutePositionDropController$Draggable_0(widget);\n    draggable.positioner = this.makePositioner(widget);\n    draggable.relativeX = $getAbsoluteLeft(widget.element_0) - draggableAbsoluteLeft;\n    draggable.relativeY = $getAbsoluteTop(widget.element_0) - draggableAbsoluteTop;\n    $add_10(this.draggableList, draggable);\n  }\n}\n;\n_.onLeave = function onLeave_0(context){\n  var draggable, draggable$iterator;\n  for (draggable$iterator = new AbstractList$IteratorImpl_0(this.draggableList); draggable$iterator.i < draggable$iterator.this$0_0.size_0();) {\n    draggable = dynamicCast($next_4(draggable$iterator), Q$AbsolutePositionDropController$Draggable);\n    $removeFromParent(draggable.positioner);\n  }\n  $clear_1(this.draggableList);\n  $removeStyleName(this.dropTarget_0, 'dragdrop-dropTarget-engage');\n}\n;\n_.onMove = function onMove_0(context){\n  var draggable, draggable$iterator;\n  for (draggable$iterator = new AbstractList$IteratorImpl_0(this.draggableList); draggable$iterator.i < draggable$iterator.this$0_0.size_0();) {\n    draggable = dynamicCast($next_4(draggable$iterator), Q$AbsolutePositionDropController$Draggable);\n    draggable.desiredX = context.desiredDraggableX - this.dropTargetOffsetX + draggable.relativeX;\n    draggable.desiredY = context.desiredDraggableY - this.dropTargetOffsetY + draggable.relativeY;\n    draggable.desiredX = max(0, min(draggable.desiredX, this.dropTargetClientWidth - draggable.offsetWidth_0));\n    draggable.desiredY = max(0, min(draggable.desiredY, this.dropTargetClientHeight - draggable.offsetHeight_0));\n    $add_2(this.dropTarget, draggable.positioner, draggable.desiredX, draggable.desiredY);\n  }\n  dynamicCast($get_2(this.draggableList, this.draggableList.size - 1), Q$AbsolutePositionDropController$Draggable).positioner.element_0.scrollIntoView();\n  $calcDropTargetOffset(this);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$DropController]);\n_.dropTarget = null;\n_.dropTargetClientHeight = 0;\n_.dropTargetClientWidth = 0;\n_.dropTargetOffsetX = 0;\n_.dropTargetOffsetY = 0;\nvar DUMMY_LABEL_IE_QUIRKS_MODE_OFFSET_HEIGHT;\nfunction AbsolutePositionDropController$Draggable_0(widget){\n  this.widget = widget;\n  this.offsetWidth_0 = widget.getOffsetWidth();\n  this.offsetHeight_0 = widget.getOffsetHeight();\n}\n\nfunction AbsolutePositionDropController$Draggable(){\n}\n\n_ = AbsolutePositionDropController$Draggable_0.prototype = AbsolutePositionDropController$Draggable.prototype = new Object_0;\n_.getClass$ = function getClass_16(){\n  return Lcom_allen_1sauer_gwt_dnd_client_drop_AbsolutePositionDropController$Draggable_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$AbsolutePositionDropController$Draggable]);\n_.desiredX = 0;\n_.desiredY = 0;\n_.offsetHeight_0 = 0;\n_.offsetWidth_0 = 0;\n_.positioner = null;\n_.relativeX = 0;\n_.relativeY = 0;\n_.widget = null;\nfunction BoundaryDropController_0(dropTarget){\n  $clinit_AbsolutePositionDropController();\n  AbstractDropController_0.call(this, dropTarget);\n  this.draggableList = new ArrayList_0;\n  this.dropTarget = dropTarget;\n  $setStyleName(dropTarget, 'dragdrop-boundary', true);\n  this.allowDroppingOnBoundaryPanel = false;\n}\n\nfunction BoundaryDropController(){\n}\n\n_ = BoundaryDropController_0.prototype = BoundaryDropController.prototype = new AbsolutePositionDropController;\n_.getClass$ = function getClass_17(){\n  return Lcom_allen_1sauer_gwt_dnd_client_drop_BoundaryDropController_2_classLit;\n}\n;\n_.makePositioner = function makePositioner_0(reference){\n  return this.allowDroppingOnBoundaryPanel?$makePositioner(reference):new SimplePanel_0;\n}\n;\n_.onPreviewDrop = function onPreviewDrop_0(context){\n  if (!this.allowDroppingOnBoundaryPanel) {\n    throw new VetoDragException_0;\n  }\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$DropController]);\n_.allowDroppingOnBoundaryPanel = true;\nfunction $intersects(this$static, targetArea){\n  if (this$static.right < targetArea.left || this$static.left > targetArea.right || this$static.bottom < targetArea.top_0 || this$static.top_0 > targetArea.bottom) {\n    return false;\n  }\n  return true;\n}\n\nfunction $setBottom(this$static, bottom){\n  this$static.bottom = bottom;\n}\n\nfunction $setLeft(this$static, left){\n  this$static.left = left;\n}\n\nfunction $setRight(this$static, right){\n  this$static.right = right;\n}\n\nfunction $setTop(this$static, top_0){\n  this$static.top_0 = top_0;\n}\n\nfunction AbstractArea(){\n}\n\n_ = AbstractArea.prototype = new Object_0;\n_.getClass$ = function getClass_18(){\n  return Lcom_allen_1sauer_gwt_dnd_client_util_AbstractArea_2_classLit;\n}\n;\n_.toString$ = function toString_2(){\n  return '[ (' + this.left + ', ' + this.top_0 + ') - (' + this.right + ', ' + this.bottom + ') ]';\n}\n;\n_.bottom = 0;\n_.left = 0;\n_.right = 0;\n_.top_0 = 0;\nfunction AbstractLocation(){\n}\n\n_ = AbstractLocation.prototype = new Object_0;\n_.getClass$ = function getClass_19(){\n  return Lcom_allen_1sauer_gwt_dnd_client_util_AbstractLocation_2_classLit;\n}\n;\n_.toString$ = function toString_3(){\n  return '(' + this.getLeft() + ', ' + this.getTop() + ')';\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Location]);\nfunction CoordinateLocation_0(left, top_0){\n  this.left = left;\n  this.top_0 = top_0;\n}\n\nfunction CoordinateLocation(){\n}\n\n_ = CoordinateLocation_0.prototype = CoordinateLocation.prototype = new AbstractLocation;\n_.getClass$ = function getClass_20(){\n  return Lcom_allen_1sauer_gwt_dnd_client_util_CoordinateLocation_2_classLit;\n}\n;\n_.getLeft = function getLeft(){\n  return this.left;\n}\n;\n_.getTop = function getTop(){\n  return this.top_0;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Location]);\n_.left = 0;\n_.top_0 = 0;\nfunction $clinit_DOMUtil(){\n  $clinit_DOMUtil = nullMethod;\n  impl_0 = new DOMUtilImplOpera_0;\n}\n\nfunction fastSetElementPosition(elem, left, top_0){\n  $clinit_DOMUtil();\n  elem.style['left'] = left + ($clinit_Style$Unit() , 'px');\n  elem.style['top'] = top_0 + 'px';\n}\n\nvar impl_0 = null;\nfunction WidgetArea_0(widget){\n  var bottom, elem, left, p, right, top_0;\n  $setLeft(this, $getAbsoluteLeft(widget.element_0));\n  $setTop(this, $getAbsoluteTop(widget.element_0));\n  $setRight(this, this.left + widget.getOffsetWidth());\n  $setBottom(this, this.top_0 + widget.getOffsetHeight());\n  elem = widget.element_0.offsetParent;\n  while (!!elem && !!(p = elem.offsetParent)) {\n    if (!$equals('visible', ($clinit_DOMUtil() , $getEffectiveStyle(impl_0, elem, 'overflow')))) {\n      left = $getAbsoluteLeft(elem);\n      this.left < left && (this.left = left);\n      top_0 = $getAbsoluteTop(elem);\n      this.top_0 < top_0 && (this.top_0 = top_0);\n      bottom = top_0 + (elem.offsetHeight || 0);\n      this.bottom > bottom && $setBottom(this, max(this.top_0, bottom));\n      right = left + (elem.offsetWidth || 0);\n      this.right > right && $setRight(this, max(this.left, right));\n    }\n    elem = p;\n  }\n}\n\nfunction WidgetArea(){\n}\n\n_ = WidgetArea_0.prototype = WidgetArea.prototype = new AbstractArea;\n_.getClass$ = function getClass_21(){\n  return Lcom_allen_1sauer_gwt_dnd_client_util_WidgetArea_2_classLit;\n}\n;\nfunction $internalSetReference(this$static, reference){\n  if (!reference || reference == ($clinit_RootPanel() , get())) {\n    this$static.referenceAdjustLeft = 0;\n    this$static.referenceAdjustTop = 0;\n  }\n   else {\n    this$static.referenceAdjustLeft = $getAbsoluteLeft(reference.element_0) + ($clinit_DOMUtil() , $getBorderLeft(reference.element_0));\n    this$static.referenceAdjustTop = $getAbsoluteTop(reference.element_0) + $getBorderTop(reference.element_0);\n  }\n}\n\nfunction $internalSetWidget(this$static, widget){\n  if (!widget || widget == ($clinit_RootPanel() , get())) {\n    this$static.widgetLeft = 0;\n    this$static.widgetTop = 0;\n  }\n   else {\n    this$static.widgetLeft = $getAbsoluteLeft(widget.element_0) - (widget.element_0.scrollLeft || 0);\n    this$static.widgetTop = $getAbsoluteTop(widget.element_0) - (widget.element_0.scrollTop || 0);\n  }\n}\n\nfunction WidgetLocation_0(widget, reference){\n  $internalSetWidget(this, widget);\n  $internalSetReference(this, reference);\n  this.left = this.widgetLeft - this.referenceAdjustLeft;\n  this.top_0 = this.widgetTop - this.referenceAdjustTop;\n}\n\nfunction WidgetLocation(){\n}\n\n_ = WidgetLocation_0.prototype = WidgetLocation.prototype = new AbstractLocation;\n_.getClass$ = function getClass_22(){\n  return Lcom_allen_1sauer_gwt_dnd_client_util_WidgetLocation_2_classLit;\n}\n;\n_.getLeft = function getLeft_0(){\n  return this.left;\n}\n;\n_.getTop = function getTop_0(){\n  return this.top_0;\n}\n;\n_.toString$ = function toString_4(){\n  return '(' + this.left + ', ' + this.top_0 + ')';\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Location]);\n_.left = 0;\n_.referenceAdjustLeft = 0;\n_.referenceAdjustTop = 0;\n_.top_0 = 0;\n_.widgetLeft = 0;\n_.widgetTop = 0;\nfunction $getEffectiveStyle(this$static, elem, style){\n  return this$static.getComputedStyle_0(elem, style) || (elem.currentStyle?elem.currentStyle[style]:null) || elem.style[style];\n}\n\nfunction DOMUtilImpl(){\n}\n\n_ = DOMUtilImpl.prototype = new Object_0;\n_.getClass$ = function getClass_23(){\n  return Lcom_allen_1sauer_gwt_dnd_client_util_impl_DOMUtilImpl_2_classLit;\n}\n;\n_.getComputedStyle_0 = function getComputedStyle_0(elem, style){\n  if ($doc.defaultView && $doc.defaultView.getComputedStyle) {\n    var styles = $doc.defaultView.getComputedStyle(elem, '');\n    if (styles) {\n      return styles[style];\n    }\n  }\n  return null;\n}\n;\nfunction $cancelAllDocumentSelections(){\n  try {\n    $wnd.getSelection().removeAllRanges();\n  }\n   catch (e) {\n    throw new Error('unselect exception:\\n' + e);\n  }\n}\n\nfunction $getBorderLeft(elem){\n  try {\n    var computedStyle = $doc.defaultView.getComputedStyle(elem, null);\n    var borderLeftWidth = computedStyle.getPropertyValue('border-left-width');\n    return borderLeftWidth.indexOf('px') == -1?0:parseInt(borderLeftWidth.substr(0, borderLeftWidth.length - 2));\n  }\n   catch (e) {\n    throw new Error('getBorderLeft exception:\\n' + e);\n  }\n}\n\nfunction $getBorderTop(elem){\n  try {\n    var computedStyle = $doc.defaultView.getComputedStyle(elem, null);\n    var borderTopWidth = computedStyle.getPropertyValue('border-top-width');\n    return borderTopWidth.indexOf('px') == -1?0:parseInt(borderTopWidth.substr(0, borderTopWidth.length - 2));\n  }\n   catch (e) {\n    throw new Error('getBorderTop: ' + e);\n  }\n}\n\nfunction $getClientHeight(elem){\n  try {\n    return elem.clientHeight;\n  }\n   catch (e) {\n    throw new Error('getClientHeight exception:\\n' + e);\n  }\n}\n\nfunction $getClientWidth(elem){\n  try {\n    return elem.clientWidth;\n  }\n   catch (e) {\n    throw new Error('getClientWidth exception:\\n' + e);\n  }\n}\n\nfunction DOMUtilImplStandard(){\n}\n\n_ = DOMUtilImplStandard.prototype = new DOMUtilImpl;\n_.getClass$ = function getClass_24(){\n  return Lcom_allen_1sauer_gwt_dnd_client_util_impl_DOMUtilImplStandard_2_classLit;\n}\n;\nfunction DOMUtilImplOpera_0(){\n}\n\nfunction DOMUtilImplOpera(){\n}\n\n_ = DOMUtilImplOpera_0.prototype = DOMUtilImplOpera.prototype = new DOMUtilImplStandard;\n_.getClass$ = function getClass_25(){\n  return Lcom_allen_1sauer_gwt_dnd_client_util_impl_DOMUtilImplOpera_2_classLit;\n}\n;\nfunction $cancel(this$static){\n  if (!this$static.isRunning) {\n    return;\n  }\n  this$static.wasStarted = this$static.isStarted;\n  this$static.isRunning = false;\n  this$static.isStarted = false;\n  if (this$static.requestHandle) {\n    $cancel_1(this$static.requestHandle);\n    this$static.requestHandle = null;\n  }\n  this$static.wasStarted && $onComplete(this$static);\n}\n\nfunction $update(this$static, curTime){\n  var finished, progress;\n  finished = curTime >= -2;\n  if (this$static.isStarted && !finished) {\n    progress = -(curTime - -1);\n    $onUpdate(this$static, (1 + Math.cos(3.141592653589793 + progress * 3.141592653589793)) / 2);\n    return this$static.isRunning;\n  }\n  if (!this$static.isStarted && curTime >= -1) {\n    this$static.isStarted = true;\n    this$static.offsetHeight_0 = $getPropertyInt(this$static.curPanel.element_0, 'offsetHeight');\n    this$static.offsetWidth_0 = $getPropertyInt(this$static.curPanel.element_0, 'offsetWidth');\n    this$static.curPanel.element_0.style['overflow'] = 'hidden';\n    $onUpdate(this$static, (1 + Math.cos(3.141592653589793)) / 2);\n    if (!this$static.isRunning) {\n      return false;\n    }\n  }\n  if (finished) {\n    this$static.isRunning = false;\n    this$static.isStarted = false;\n    $onComplete(this$static);\n    return false;\n  }\n  return true;\n}\n\nfunction Animation_0(scheduler){\n  this.callback = new Animation$1_0(this);\n  this.scheduler = scheduler;\n}\n\nfunction Animation(){\n}\n\n_ = Animation.prototype = new Object_0;\n_.getClass$ = function getClass_26(){\n  return Lcom_google_gwt_animation_client_Animation_2_classLit;\n}\n;\n_.isRunning = false;\n_.isStarted = false;\n_.requestHandle = null;\n_.scheduler = null;\n_.wasStarted = false;\nfunction $execute(this$static, timestamp){\n  $update(this$static.this$0, timestamp)?(this$static.this$0.requestHandle = $requestAnimationFrame(this$static.this$0.scheduler, this$static.this$0.callback)):(this$static.this$0.requestHandle = null);\n}\n\nfunction Animation$1_0(this$0){\n  this.this$0 = this$0;\n}\n\nfunction Animation$1(){\n}\n\n_ = Animation$1_0.prototype = Animation$1.prototype = new Object_0;\n_.getClass$ = function getClass_27(){\n  return Lcom_google_gwt_animation_client_Animation$1_2_classLit;\n}\n;\n_.this$0 = null;\nfunction AnimationScheduler(){\n}\n\n_ = AnimationScheduler.prototype = new Object_0;\n_.getClass$ = function getClass_28(){\n  return Lcom_google_gwt_animation_client_AnimationScheduler_2_classLit;\n}\n;\nfunction AnimationScheduler$AnimationHandle(){\n}\n\n_ = AnimationScheduler$AnimationHandle.prototype = new Object_0;\n_.getClass$ = function getClass_29(){\n  return Lcom_google_gwt_animation_client_AnimationScheduler$AnimationHandle_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$AnimationScheduler$AnimationHandle]);\nfunction $clinit_AnimationSchedulerImpl(){\n  $clinit_AnimationSchedulerImpl = nullMethod;\n  var impl;\n  impl = new AnimationSchedulerImplTimer_0;\n  INSTANCE = impl;\n}\n\nfunction AnimationSchedulerImpl(){\n}\n\n_ = AnimationSchedulerImpl.prototype = new AnimationScheduler;\n_.getClass$ = function getClass_30(){\n  return Lcom_google_gwt_animation_client_AnimationSchedulerImpl_2_classLit;\n}\n;\nvar INSTANCE = null;\nfunction $cancelAnimationFrame(this$static, requestId){\n  $remove_13(this$static.animationRequests, requestId);\n  this$static.animationRequests.size == 0 && $cancel_0(this$static.timer);\n}\n\nfunction $requestAnimationFrame(this$static, callback){\n  var requestId;\n  requestId = new AnimationSchedulerImplTimer$AnimationHandleImpl_0(this$static, callback);\n  $add_10(this$static.animationRequests, requestId);\n  this$static.animationRequests.size == 1 && $schedule(this$static.timer, 16);\n  return requestId;\n}\n\nfunction $updateAnimations(this$static){\n  var curAnimations, duration, requestId, requestId$index, requestId$max;\n  curAnimations = initDim(_3Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$AnimationHandleImpl_2_classLit, makeCastMap([Q$AnimationSchedulerImplTimer$AnimationHandleImpl_$1, Q$Serializable, Q$Object_$1]), Q$AnimationSchedulerImplTimer$AnimationHandleImpl, this$static.animationRequests.size, 0);\n  curAnimations = dynamicCast($toArray_0(this$static.animationRequests, curAnimations), Q$AnimationSchedulerImplTimer$AnimationHandleImpl_$1);\n  duration = new Duration_0;\n  for (requestId$index = 0 , requestId$max = curAnimations.length; requestId$index < requestId$max; ++requestId$index) {\n    requestId = curAnimations[requestId$index];\n    $remove_13(this$static.animationRequests, requestId);\n    $execute(requestId.callback, duration.start);\n  }\n  this$static.animationRequests.size > 0 && $schedule(this$static.timer, max(5, 16 - (currentTimeMillis() - duration.start)));\n}\n\nfunction AnimationSchedulerImplTimer_0(){\n  this.animationRequests = new ArrayList_0;\n  this.timer = new AnimationSchedulerImplTimer$1_0(this);\n}\n\nfunction AnimationSchedulerImplTimer(){\n}\n\n_ = AnimationSchedulerImplTimer_0.prototype = AnimationSchedulerImplTimer.prototype = new AnimationSchedulerImpl;\n_.getClass$ = function getClass_31(){\n  return Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer_2_classLit;\n}\n;\nfunction $clinit_Timer(){\n  $clinit_Timer = nullMethod;\n  timers = new ArrayList_0;\n  addCloseHandler(new Timer$1_0);\n}\n\nfunction $cancel_0(this$static){\n  this$static.isRepeating?clearInterval_0(this$static.timerId):clearTimeout_0(this$static.timerId);\n  $remove_13(timers, this$static);\n}\n\nfunction $schedule(this$static, delayMillis){\n  if (delayMillis <= 0) {\n    throw new IllegalArgumentException_0('must be positive');\n  }\n  this$static.isRepeating?clearInterval_0(this$static.timerId):clearTimeout_0(this$static.timerId);\n  $remove_13(timers, this$static);\n  this$static.isRepeating = false;\n  this$static.timerId = createTimeout(this$static, delayMillis);\n  $add_10(timers, this$static);\n}\n\nfunction clearInterval_0(id){\n  $wnd.clearInterval(id);\n}\n\nfunction clearTimeout_0(id){\n  $wnd.clearTimeout(id);\n}\n\nfunction createTimeout(timer, delay){\n  return $wnd.setTimeout($entry(function(){\n    timer.fire();\n  }\n  ), delay);\n}\n\nfunction Timer(){\n}\n\n_ = Timer.prototype = new Object_0;\n_.fire = function fire(){\n  this.isRepeating || $remove_13(timers, this);\n  this.run();\n}\n;\n_.getClass$ = function getClass_32(){\n  return Lcom_google_gwt_user_client_Timer_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Timer]);\n_.isRepeating = false;\n_.timerId = 0;\nvar timers;\nfunction AnimationSchedulerImplTimer$1_0(this$0){\n  $clinit_Timer();\n  this.this$0 = this$0;\n}\n\nfunction AnimationSchedulerImplTimer$1(){\n}\n\n_ = AnimationSchedulerImplTimer$1_0.prototype = AnimationSchedulerImplTimer$1.prototype = new Timer;\n_.getClass$ = function getClass_33(){\n  return Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$1_2_classLit;\n}\n;\n_.run = function run(){\n  $updateAnimations(this.this$0);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Timer]);\n_.this$0 = null;\nfunction $cancel_1(this$static){\n  $cancelAnimationFrame(this$static.this$0, this$static);\n}\n\nfunction AnimationSchedulerImplTimer$AnimationHandleImpl_0(this$0, callback){\n  this.this$0 = this$0;\n  this.callback = callback;\n}\n\nfunction AnimationSchedulerImplTimer$AnimationHandleImpl(){\n}\n\n_ = AnimationSchedulerImplTimer$AnimationHandleImpl_0.prototype = AnimationSchedulerImplTimer$AnimationHandleImpl.prototype = new AnimationScheduler$AnimationHandle;\n_.getClass$ = function getClass_34(){\n  return Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$AnimationHandleImpl_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$AnimationScheduler$AnimationHandle, Q$AnimationSchedulerImplTimer$AnimationHandleImpl]);\n_.callback = null;\n_.this$0 = null;\nfunction $elapsedMillis(this$static){\n  return currentTimeMillis() - this$static.start;\n}\n\nfunction Duration_0(){\n  this.start = currentTimeMillis();\n}\n\nfunction currentTimeMillis(){\n  return (new Date).getTime();\n}\n\nfunction Duration(){\n}\n\n_ = Duration_0.prototype = Duration.prototype = new Object_0;\n_.getClass$ = function getClass_35(){\n  return Lcom_google_gwt_core_client_Duration_2_classLit;\n}\n;\nfunction setUncaughtExceptionHandler(handler){\n  sUncaughtExceptionHandler = handler;\n}\n\nvar sUncaughtExceptionHandler = null;\nfunction RuntimeException_0(message){\n  Exception_0.call(this, message);\n}\n\nfunction RuntimeException_1(message, cause){\n  $fillInStackTrace(this);\n  this.cause = cause;\n  this.detailMessage = message;\n}\n\nfunction RuntimeException(){\n}\n\n_ = RuntimeException_1.prototype = RuntimeException_0.prototype = RuntimeException.prototype = new Exception;\n_.getClass$ = function getClass_36(){\n  return Ljava_lang_RuntimeException_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable]);\nfunction JavaScriptException_0(e){\n  $fillInStackTrace(this);\n  this.e = e;\n  $createStackTrace(this);\n}\n\nfunction getDescription(e){\n  return instanceOfJso(e)?getDescription0(dynamicCastJso(e)):e + '';\n}\n\nfunction getDescription0(e){\n  return e == null?null:e.message;\n}\n\nfunction getName(e){\n  var maybeJsoInvocation;\n  return e == null?'null':instanceOfJso(e)?getName0(dynamicCastJso(e)):instanceOf(e, Q$String)?'String':(maybeJsoInvocation = e , isJavaObject(maybeJsoInvocation)?maybeJsoInvocation.getClass$():Lcom_google_gwt_core_client_JavaScriptObject_2_classLit).typeName;\n}\n\nfunction getName0(e){\n  return e == null?null:e.name;\n}\n\nfunction getProperties(e){\n  return instanceOfJso(e)?$getProperties(dynamicCastJso(e)):'';\n}\n\nfunction JavaScriptException(){\n}\n\n_ = JavaScriptException_0.prototype = JavaScriptException.prototype = new RuntimeException;\n_.getClass$ = function getClass_37(){\n  return Lcom_google_gwt_core_client_JavaScriptException_2_classLit;\n}\n;\n_.getMessage = function getMessage_0(){\n  this.message_0 == null && (this.name_0 = getName(this.e) , this.description = getDescription(this.e) , this.message_0 = '(' + this.name_0 + '): ' + this.description + getProperties(this.e) , undefined);\n  return this.message_0;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable]);\n_.description = null;\n_.e = null;\n_.message_0 = null;\n_.name_0 = null;\nfunction equals__devirtual$(this$static, other){\n  var maybeJsoInvocation;\n  return maybeJsoInvocation = this$static , isJavaObject(maybeJsoInvocation)?maybeJsoInvocation.equals$(other):maybeJsoInvocation === other;\n}\n\nfunction hashCode__devirtual$(this$static){\n  var maybeJsoInvocation;\n  return maybeJsoInvocation = this$static , isJavaObject(maybeJsoInvocation)?maybeJsoInvocation.hashCode$():getHashCode(maybeJsoInvocation);\n}\n\nfunction create(milliseconds){\n  return new Date(milliseconds);\n}\n\nfunction Scheduler(){\n}\n\n_ = Scheduler.prototype = new Object_0;\n_.getClass$ = function getClass_38(){\n  return Lcom_google_gwt_core_client_Scheduler_2_classLit;\n}\n;\nfunction apply(jsFunction, thisObj, arguments_0){\n  return jsFunction.apply(thisObj, arguments_0);\n  var __0;\n}\n\nfunction enter(){\n  if (entryDepth++ == 0) {\n    $flushEntryCommands(($clinit_SchedulerImpl() , INSTANCE_0));\n    return true;\n  }\n  return false;\n}\n\nfunction entry_0(jsFunction){\n  return function(){\n    try {\n      return entry0(jsFunction, this, arguments);\n    }\n     catch (e) {\n      throw e;\n    }\n  }\n  ;\n}\n\nfunction entry0(jsFunction, thisObj, arguments_0){\n  var $e0, initialEntry, t;\n  initialEntry = enter();\n  try {\n    if (sUncaughtExceptionHandler) {\n      try {\n        return apply(jsFunction, thisObj, arguments_0);\n      }\n       catch ($e0) {\n        $e0 = caught_0($e0);\n        if (instanceOf($e0, Q$Throwable)) {\n          t = $e0;\n          $onUncaughtException(sUncaughtExceptionHandler, t);\n          return undefined;\n        }\n         else \n          throw $e0;\n      }\n    }\n     else {\n      return apply(jsFunction, thisObj, arguments_0);\n    }\n  }\n   finally {\n    initialEntry && $flushFinallyCommands(($clinit_SchedulerImpl() , INSTANCE_0));\n    --entryDepth;\n  }\n}\n\nfunction getHashCode(o){\n  return o.$H || (o.$H = ++sNextHashId);\n}\n\nvar entryDepth = 0, sNextHashId = 0;\nfunction $clinit_SchedulerImpl(){\n  $clinit_SchedulerImpl = nullMethod;\n  INSTANCE_0 = new SchedulerImpl_0;\n}\n\nfunction $flushEntryCommands(this$static){\n  var oldQueue, rescheduled;\n  if (this$static.entryCommands) {\n    rescheduled = null;\n    do {\n      oldQueue = this$static.entryCommands;\n      this$static.entryCommands = null;\n      rescheduled = runScheduledTasks(oldQueue, rescheduled);\n    }\n     while (this$static.entryCommands);\n    this$static.entryCommands = rescheduled;\n  }\n}\n\nfunction $flushFinallyCommands(this$static){\n  var oldQueue, rescheduled;\n  if (this$static.finallyCommands) {\n    rescheduled = null;\n    do {\n      oldQueue = this$static.finallyCommands;\n      this$static.finallyCommands = null;\n      rescheduled = runScheduledTasks(oldQueue, rescheduled);\n    }\n     while (this$static.finallyCommands);\n    this$static.finallyCommands = rescheduled;\n  }\n}\n\nfunction $flushPostEventPumpCommands(this$static){\n  var oldDeferred;\n  if (this$static.deferredCommands) {\n    oldDeferred = this$static.deferredCommands;\n    this$static.deferredCommands = null;\n    !this$static.incrementalCommands && (this$static.incrementalCommands = []);\n    runScheduledTasks(oldDeferred, this$static.incrementalCommands);\n  }\n  !!this$static.incrementalCommands && (this$static.incrementalCommands = runRepeatingTasks(this$static.incrementalCommands));\n}\n\nfunction $isWorkQueued(this$static){\n  return !!this$static.deferredCommands || !!this$static.incrementalCommands;\n}\n\nfunction $maybeSchedulePostEventPumpCommands(this$static){\n  if (!this$static.shouldBeRunning) {\n    this$static.shouldBeRunning = true;\n    !this$static.flusher && (this$static.flusher = new SchedulerImpl$Flusher_0(this$static));\n    scheduleFixedDelayImpl(this$static.flusher, 1);\n    !this$static.rescue && (this$static.rescue = new SchedulerImpl$Rescuer_0(this$static));\n    scheduleFixedDelayImpl(this$static.rescue, 50);\n  }\n}\n\nfunction $scheduleDeferred(this$static, cmd){\n  this$static.deferredCommands = push(this$static.deferredCommands, [cmd, false]);\n  $maybeSchedulePostEventPumpCommands(this$static);\n}\n\nfunction $scheduleFinally(this$static, cmd){\n  this$static.finallyCommands = push(this$static.finallyCommands, [cmd, false]);\n}\n\nfunction SchedulerImpl_0(){\n}\n\nfunction execute_0(cmd){\n  return cmd.execute_0();\n}\n\nfunction push(queue, task){\n  !queue && (queue = []);\n  queue[queue.length] = task;\n  return queue;\n}\n\nfunction runRepeatingTasks(tasks){\n  var canceledSomeTasks, i, length_0, newTasks, start, t;\n  length_0 = tasks.length;\n  if (length_0 == 0) {\n    return null;\n  }\n  canceledSomeTasks = false;\n  start = currentTimeMillis();\n  while (currentTimeMillis() - start < 100) {\n    for (i = 0; i < length_0; ++i) {\n      t = tasks[i];\n      if (!t) {\n        continue;\n      }\n      if (!t[0].execute_0()) {\n        tasks[i] = null;\n        canceledSomeTasks = true;\n      }\n    }\n  }\n  if (canceledSomeTasks) {\n    newTasks = [];\n    for (i = 0; i < length_0; ++i) {\n      !!tasks[i] && (newTasks[newTasks.length] = tasks[i] , undefined);\n    }\n    return newTasks.length == 0?null:newTasks;\n  }\n   else {\n    return tasks;\n  }\n}\n\nfunction runScheduledTasks(tasks, rescheduled){\n  var $e0, e, i, j, t;\n  for (i = 0 , j = tasks.length; i < j; ++i) {\n    t = tasks[i];\n    try {\n      t[1]?t[0].execute_0() && (rescheduled = push(rescheduled, t)):t[0].execute();\n    }\n     catch ($e0) {\n      $e0 = caught_0($e0);\n      if (instanceOf($e0, Q$RuntimeException)) {\n        e = $e0;\n        !!sUncaughtExceptionHandler && $onUncaughtException(sUncaughtExceptionHandler, e);\n      }\n       else \n        throw $e0;\n    }\n  }\n  return rescheduled;\n}\n\nfunction scheduleFixedDelayImpl(cmd, delayMs){\n  $clinit_SchedulerImpl();\n  $wnd.setTimeout(function(){\n    var ret = $entry(execute_0)(cmd);\n    ret && $wnd.setTimeout(arguments.callee, delayMs);\n  }\n  , delayMs);\n}\n\nfunction SchedulerImpl(){\n}\n\n_ = SchedulerImpl_0.prototype = SchedulerImpl.prototype = new Scheduler;\n_.getClass$ = function getClass_39(){\n  return Lcom_google_gwt_core_client_impl_SchedulerImpl_2_classLit;\n}\n;\n_.deferredCommands = null;\n_.entryCommands = null;\n_.finallyCommands = null;\n_.flushRunning = false;\n_.flusher = null;\n_.incrementalCommands = null;\n_.rescue = null;\n_.shouldBeRunning = false;\nvar INSTANCE_0;\nfunction SchedulerImpl$Flusher_0(this$0){\n  this.this$0 = this$0;\n}\n\nfunction SchedulerImpl$Flusher(){\n}\n\n_ = SchedulerImpl$Flusher_0.prototype = SchedulerImpl$Flusher.prototype = new Object_0;\n_.execute_0 = function execute_1(){\n  this.this$0.flushRunning = true;\n  $flushPostEventPumpCommands(this.this$0);\n  this.this$0.flushRunning = false;\n  return this.this$0.shouldBeRunning = $isWorkQueued(this.this$0);\n}\n;\n_.getClass$ = function getClass_40(){\n  return Lcom_google_gwt_core_client_impl_SchedulerImpl$Flusher_2_classLit;\n}\n;\n_.this$0 = null;\nfunction SchedulerImpl$Rescuer_0(this$0){\n  this.this$0 = this$0;\n}\n\nfunction SchedulerImpl$Rescuer(){\n}\n\n_ = SchedulerImpl$Rescuer_0.prototype = SchedulerImpl$Rescuer.prototype = new Object_0;\n_.execute_0 = function execute_2(){\n  this.this$0.flushRunning && scheduleFixedDelayImpl(this.this$0.flusher, 1);\n  return this.this$0.shouldBeRunning;\n}\n;\n_.getClass$ = function getClass_41(){\n  return Lcom_google_gwt_core_client_impl_SchedulerImpl$Rescuer_2_classLit;\n}\n;\n_.this$0 = null;\nfunction splice(arr, length_0){\n  arr.length >= length_0 && arr.splice(0, length_0);\n  return arr;\n}\n\nfunction $createStackTrace(e){\n  var i, j, stack, stackTrace;\n  stack = $inferFrom(instanceOfJso(e.e)?dynamicCastJso(e.e):null);\n  stackTrace = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Object_$1]), Q$StackTraceElement, stack.length, 0);\n  for (i = 0 , j = stackTrace.length; i < j; ++i) {\n    stackTrace[i] = new StackTraceElement_0(stack[i]);\n  }\n  $setStackTrace(e, stackTrace);\n}\n\nfunction $fillInStackTrace(t){\n  var i, j, stack, stackTrace;\n  stack = splice($inferFrom($makeException()), 3);\n  stackTrace = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Object_$1]), Q$StackTraceElement, stack.length, 0);\n  for (i = 0 , j = stackTrace.length; i < j; ++i) {\n    stackTrace[i] = new StackTraceElement_0(stack[i]);\n  }\n  $setStackTrace(t, stackTrace);\n}\n\nfunction $getProperties(e){\n  var result = '';\n  try {\n    for (var prop in e) {\n      if (prop != 'name' && prop != 'message' && prop != 'toString') {\n        try {\n          result += '\\n ' + prop + ': ' + e[prop];\n        }\n         catch (ignored) {\n        }\n      }\n    }\n  }\n   catch (ignored) {\n  }\n  return result;\n}\n\nfunction $makeException(){\n  try {\n    null.a();\n  }\n   catch (e) {\n    return e;\n  }\n}\n\nfunction $inferFrom(e){\n  var i, j, stack;\n  stack = $getStack(e);\n  for (i = 0 , j = stack.length; i < j; ++i) {\n    stack[i] = stack[i].length == 0?'anonymous':stack[i];\n  }\n  return stack;\n}\n\nfunction $getStack(e){\n  var i, i2, idx, j, toReturn;\n  toReturn = e && e.message?e.message.split('\\n'):[];\n  for (i = 0 , i2 = 0 , j = toReturn.length; i2 < j; ++i , i2 += 2) {\n    idx = toReturn[i2].lastIndexOf('function ');\n    idx == -1?(toReturn[i] = '' , undefined):(toReturn[i] = $trim($substring(toReturn[i2], idx + 9)) , undefined);\n  }\n  toReturn.length = i;\n  return toReturn;\n}\n\nfunction StringBufferImpl(){\n}\n\n_ = StringBufferImpl.prototype = new Object_0;\n_.getClass$ = function getClass_42(){\n  return Lcom_google_gwt_core_client_impl_StringBufferImpl_2_classLit;\n}\n;\nfunction $append(this$static, x){\n  this$static.string += x;\n}\n\nfunction StringBufferImplAppend_0(){\n}\n\nfunction StringBufferImplAppend(){\n}\n\n_ = StringBufferImplAppend_0.prototype = StringBufferImplAppend.prototype = new StringBufferImpl;\n_.getClass$ = function getClass_43(){\n  return Lcom_google_gwt_core_client_impl_StringBufferImplAppend_2_classLit;\n}\n;\n_.string = '';\nfunction $appendChild(this$static, newChild){\n  return this$static.appendChild(newChild);\n}\n\nfunction $insertAfter(this$static, newChild, refChild){\n  var next;\n  next = !refChild?null:refChild.nextSibling;\n  return !next?this$static.appendChild(newChild):this$static.insertBefore(newChild, next);\n}\n\nfunction $insertBefore(this$static, newChild, refChild){\n  return this$static.insertBefore(newChild, refChild);\n}\n\nfunction $removeChild(this$static, oldChild){\n  return this$static.removeChild(oldChild);\n}\n\nfunction is(o){\n  try {\n    return !!o && !!o.nodeType;\n  }\n   catch (e) {\n    return false;\n  }\n}\n\nfunction $addClassName(this$static, className){\n  var idx, last, lastPos, oldClassName;\n  className = $trim(className);\n  oldClassName = this$static.className;\n  idx = oldClassName.indexOf(className);\n  while (idx != -1) {\n    if (idx == 0 || oldClassName.charCodeAt(idx - 1) == 32) {\n      last = idx + className.length;\n      lastPos = oldClassName.length;\n      if (last == lastPos || last < lastPos && oldClassName.charCodeAt(last) == 32) {\n        break;\n      }\n    }\n    idx = oldClassName.indexOf(className, idx + 1);\n  }\n  if (idx == -1) {\n    oldClassName.length > 0 && (oldClassName += ' ');\n    this$static.className = oldClassName + className;\n  }\n}\n\nfunction $getPropertyInt(this$static, name_0){\n  return parseInt(this$static[name_0]) || 0;\n}\n\nfunction $getPropertyString(this$static, name_0){\n  return this$static[name_0] == null?null:String(this$static[name_0]);\n}\n\nfunction $removeClassName(this$static, className){\n  var begin, end, idx, last, lastPos, newClassName, oldStyle;\n  className = $trim(className);\n  oldStyle = this$static.className;\n  idx = oldStyle.indexOf(className);\n  while (idx != -1) {\n    if (idx == 0 || oldStyle.charCodeAt(idx - 1) == 32) {\n      last = idx + className.length;\n      lastPos = oldStyle.length;\n      if (last == lastPos || last < lastPos && oldStyle.charCodeAt(last) == 32) {\n        break;\n      }\n    }\n    idx = oldStyle.indexOf(className, idx + 1);\n  }\n  if (idx != -1) {\n    begin = $trim(oldStyle.substr(0, idx - 0));\n    end = $trim($substring(oldStyle, idx + className.length));\n    begin.length == 0?(newClassName = end):end.length == 0?(newClassName = begin):(newClassName = begin + ' ' + end);\n    this$static.className = newClassName;\n  }\n}\n\nfunction $setClassName(this$static, className){\n  this$static.className = className;\n}\n\nfunction $setInnerHTML(this$static, html){\n  this$static.innerHTML = html || '';\n}\n\nfunction $setScrollTop(this$static, scrollTop){\n  this$static.scrollTop = scrollTop;\n}\n\nfunction $setTabIndex(this$static, tabIndex){\n  this$static.tabIndex = tabIndex;\n}\n\nfunction is_0(o){\n  if (is(o)) {\n    return !!o && o.nodeType == 1;\n  }\n  return false;\n}\n\nfunction $getFirstChildElement(elem){\n  var child = elem.firstChild;\n  while (child && child.nodeType != 1)\n    child = child.nextSibling;\n  return child;\n}\n\nfunction $getParentElement(node){\n  var parent_0 = node.parentNode;\n  (!parent_0 || parent_0.nodeType != 1) && (parent_0 = null);\n  return parent_0;\n}\n\nfunction $setScrollLeft(elem, left){\n  elem.scrollLeft = left;\n}\n\nfunction $eventGetButton(evt){\n  var button = evt.button;\n  if (button == 1) {\n    return 4;\n  }\n   else if (button == 2) {\n    return 2;\n  }\n  return 1;\n}\n\nfunction $isOrHasChild(parent_0, child){\n  return parent_0.contains(child);\n}\n\nfunction $setInnerText(elem, text){\n  elem.textContent = text || '';\n}\n\nfunction $getAbsoluteLeft(elem){\n  var left = 0;\n  var curr = elem.parentNode;\n  while (curr && curr.offsetParent) {\n    curr.tagName != 'TR' && curr.tagName != 'TBODY' && (left -= curr.scrollLeft);\n    curr = curr.parentNode;\n  }\n  while (elem) {\n    left += elem.offsetLeft;\n    elem = elem.offsetParent;\n  }\n  return left;\n}\n\nfunction $getAbsoluteTop(elem){\n  var top_0 = 0;\n  var curr = elem.parentNode;\n  while (curr && curr.offsetParent) {\n    curr.tagName != 'TR' && curr.tagName != 'TBODY' && (top_0 -= curr.scrollTop);\n    curr = curr.parentNode;\n  }\n  while (elem) {\n    top_0 += elem.offsetTop;\n    elem = elem.offsetParent;\n  }\n  return top_0;\n}\n\nfunction $createUniqueId(this$static){\n  !this$static.gwt_uid && (this$static.gwt_uid = 1);\n  return 'gwt-uid-' + this$static.gwt_uid++;\n}\n\nfunction $getClientHeight_0(this$static){\n  return ($equals(this$static.compatMode, 'CSS1Compat')?this$static.documentElement:this$static.body).clientHeight;\n}\n\nfunction $getClientWidth_0(this$static){\n  return ($equals(this$static.compatMode, 'CSS1Compat')?this$static.documentElement:this$static.body).clientWidth;\n}\n\nfunction $getScrollHeight(this$static){\n  return ($equals(this$static.compatMode, 'CSS1Compat')?this$static.documentElement:this$static.body).scrollHeight || 0;\n}\n\nfunction $getScrollLeft(this$static){\n  return ($equals(this$static.compatMode, 'CSS1Compat')?this$static.documentElement:this$static.body).scrollLeft || 0;\n}\n\nfunction $getScrollTop(this$static){\n  return ($equals(this$static.compatMode, 'CSS1Compat')?this$static.documentElement:this$static.body).scrollTop || 0;\n}\n\nfunction $getScrollWidth(this$static){\n  return ($equals(this$static.compatMode, 'CSS1Compat')?this$static.documentElement:this$static.body).scrollWidth || 0;\n}\n\nfunction $setChecked(this$static, checked){\n  this$static.checked = checked;\n}\n\nfunction $setDefaultChecked(this$static, defaultChecked){\n  this$static.defaultChecked = defaultChecked;\n}\n\nfunction $setHtmlFor(this$static, htmlFor){\n  this$static.htmlFor = htmlFor;\n}\n\nfunction $compareTo_0(this$static, other){\n  return this$static.ordinal - other.ordinal;\n}\n\nfunction Enum_0(name_0, ordinal){\n  this.name_0 = name_0;\n  this.ordinal = ordinal;\n}\n\nfunction Enum(){\n}\n\n_ = Enum.prototype = new Object_0;\n_.compareTo$ = function compareTo_0(other){\n  return $compareTo_0(this, dynamicCast(other, Q$Enum));\n}\n;\n_.equals$ = function equals_1(other){\n  return this === other;\n}\n;\n_.getClass$ = function getClass_44(){\n  return Ljava_lang_Enum_2_classLit;\n}\n;\n_.hashCode$ = function hashCode_2(){\n  return getHashCode(this);\n}\n;\n_.toString$ = function toString_5(){\n  return this.name_0;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable, Q$Comparable, Q$Enum]);\n_.name_0 = null;\n_.ordinal = 0;\nfunction $clinit_Style$BorderStyle(){\n  $clinit_Style$BorderStyle = nullMethod;\n  NONE = new Style$BorderStyle$1_0;\n  DOTTED = new Style$BorderStyle$2_0;\n  DASHED = new Style$BorderStyle$3_0;\n  HIDDEN = new Style$BorderStyle$4_0;\n  SOLID = new Style$BorderStyle$5_0;\n  $VALUES = initValues(_3Lcom_google_gwt_dom_client_Style$BorderStyle_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$Style$BorderStyle, [NONE, DOTTED, DASHED, HIDDEN, SOLID]);\n}\n\nfunction values(){\n  $clinit_Style$BorderStyle();\n  return $VALUES;\n}\n\nfunction Style$BorderStyle(){\n}\n\n_ = Style$BorderStyle.prototype = new Enum;\n_.getClass$ = function getClass_45(){\n  return Lcom_google_gwt_dom_client_Style$BorderStyle_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$BorderStyle, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]);\nvar $VALUES, DASHED, DOTTED, HIDDEN, NONE, SOLID;\nfunction Style$BorderStyle$1_0(){\n  Enum_0.call(this, 'NONE', 0);\n}\n\nfunction Style$BorderStyle$1(){\n}\n\n_ = Style$BorderStyle$1_0.prototype = Style$BorderStyle$1.prototype = new Style$BorderStyle;\n_.getClass$ = function getClass_46(){\n  return Lcom_google_gwt_dom_client_Style$BorderStyle$1_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$BorderStyle, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]);\nfunction Style$BorderStyle$2_0(){\n  Enum_0.call(this, 'DOTTED', 1);\n}\n\nfunction Style$BorderStyle$2(){\n}\n\n_ = Style$BorderStyle$2_0.prototype = Style$BorderStyle$2.prototype = new Style$BorderStyle;\n_.getClass$ = function getClass_47(){\n  return Lcom_google_gwt_dom_client_Style$BorderStyle$2_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$BorderStyle, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]);\nfunction Style$BorderStyle$3_0(){\n  Enum_0.call(this, 'DASHED', 2);\n}\n\nfunction Style$BorderStyle$3(){\n}\n\n_ = Style$BorderStyle$3_0.prototype = Style$BorderStyle$3.prototype = new Style$BorderStyle;\n_.getClass$ = function getClass_48(){\n  return Lcom_google_gwt_dom_client_Style$BorderStyle$3_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$BorderStyle, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]);\nfunction Style$BorderStyle$4_0(){\n  Enum_0.call(this, 'HIDDEN', 3);\n}\n\nfunction Style$BorderStyle$4(){\n}\n\n_ = Style$BorderStyle$4_0.prototype = Style$BorderStyle$4.prototype = new Style$BorderStyle;\n_.getClass$ = function getClass_49(){\n  return Lcom_google_gwt_dom_client_Style$BorderStyle$4_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$BorderStyle, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]);\nfunction Style$BorderStyle$5_0(){\n  Enum_0.call(this, 'SOLID', 4);\n}\n\nfunction Style$BorderStyle$5(){\n}\n\n_ = Style$BorderStyle$5_0.prototype = Style$BorderStyle$5.prototype = new Style$BorderStyle;\n_.getClass$ = function getClass_50(){\n  return Lcom_google_gwt_dom_client_Style$BorderStyle$5_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$BorderStyle, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]);\nfunction $clinit_Style$Display(){\n  $clinit_Style$Display = nullMethod;\n  NONE_0 = new Style$Display$1_0;\n  BLOCK = new Style$Display$2_0;\n  INLINE = new Style$Display$3_0;\n  INLINE_BLOCK = new Style$Display$4_0;\n  $VALUES_0 = initValues(_3Lcom_google_gwt_dom_client_Style$Display_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$Style$Display, [NONE_0, BLOCK, INLINE, INLINE_BLOCK]);\n}\n\nfunction values_0(){\n  $clinit_Style$Display();\n  return $VALUES_0;\n}\n\nfunction Style$Display(){\n}\n\n_ = Style$Display.prototype = new Enum;\n_.getClass$ = function getClass_51(){\n  return Lcom_google_gwt_dom_client_Style$Display_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]);\nvar $VALUES_0, BLOCK, INLINE, INLINE_BLOCK, NONE_0;\nfunction Style$Display$1_0(){\n  Enum_0.call(this, 'NONE', 0);\n}\n\nfunction Style$Display$1(){\n}\n\n_ = Style$Display$1_0.prototype = Style$Display$1.prototype = new Style$Display;\n_.getClass$ = function getClass_52(){\n  return Lcom_google_gwt_dom_client_Style$Display$1_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]);\nfunction Style$Display$2_0(){\n  Enum_0.call(this, 'BLOCK', 1);\n}\n\nfunction Style$Display$2(){\n}\n\n_ = Style$Display$2_0.prototype = Style$Display$2.prototype = new Style$Display;\n_.getClass$ = function getClass_53(){\n  return Lcom_google_gwt_dom_client_Style$Display$2_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]);\nfunction Style$Display$3_0(){\n  Enum_0.call(this, 'INLINE', 2);\n}\n\nfunction Style$Display$3(){\n}\n\n_ = Style$Display$3_0.prototype = Style$Display$3.prototype = new Style$Display;\n_.getClass$ = function getClass_54(){\n  return Lcom_google_gwt_dom_client_Style$Display$3_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]);\nfunction Style$Display$4_0(){\n  Enum_0.call(this, 'INLINE_BLOCK', 3);\n}\n\nfunction Style$Display$4(){\n}\n\n_ = Style$Display$4_0.prototype = Style$Display$4.prototype = new Style$Display;\n_.getClass$ = function getClass_55(){\n  return Lcom_google_gwt_dom_client_Style$Display$4_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]);\nfunction $clinit_Style$Overflow(){\n  $clinit_Style$Overflow = nullMethod;\n  VISIBLE = new Style$Overflow$1_0;\n  HIDDEN_0 = new Style$Overflow$2_0;\n  SCROLL = new Style$Overflow$3_0;\n  AUTO = new Style$Overflow$4_0;\n  $VALUES_1 = initValues(_3Lcom_google_gwt_dom_client_Style$Overflow_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$Style$Overflow, [VISIBLE, HIDDEN_0, SCROLL, AUTO]);\n}\n\nfunction values_1(){\n  $clinit_Style$Overflow();\n  return $VALUES_1;\n}\n\nfunction Style$Overflow(){\n}\n\n_ = Style$Overflow.prototype = new Enum;\n_.getClass$ = function getClass_56(){\n  return Lcom_google_gwt_dom_client_Style$Overflow_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]);\nvar $VALUES_1, AUTO, HIDDEN_0, SCROLL, VISIBLE;\nfunction Style$Overflow$1_0(){\n  Enum_0.call(this, 'VISIBLE', 0);\n}\n\nfunction Style$Overflow$1(){\n}\n\n_ = Style$Overflow$1_0.prototype = Style$Overflow$1.prototype = new Style$Overflow;\n_.getClass$ = function getClass_57(){\n  return Lcom_google_gwt_dom_client_Style$Overflow$1_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]);\nfunction Style$Overflow$2_0(){\n  Enum_0.call(this, 'HIDDEN', 1);\n}\n\nfunction Style$Overflow$2(){\n}\n\n_ = Style$Overflow$2_0.prototype = Style$Overflow$2.prototype = new Style$Overflow;\n_.getClass$ = function getClass_58(){\n  return Lcom_google_gwt_dom_client_Style$Overflow$2_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]);\nfunction Style$Overflow$3_0(){\n  Enum_0.call(this, 'SCROLL', 2);\n}\n\nfunction Style$Overflow$3(){\n}\n\n_ = Style$Overflow$3_0.prototype = Style$Overflow$3.prototype = new Style$Overflow;\n_.getClass$ = function getClass_59(){\n  return Lcom_google_gwt_dom_client_Style$Overflow$3_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]);\nfunction Style$Overflow$4_0(){\n  Enum_0.call(this, 'AUTO', 3);\n}\n\nfunction Style$Overflow$4(){\n}\n\n_ = Style$Overflow$4_0.prototype = Style$Overflow$4.prototype = new Style$Overflow;\n_.getClass$ = function getClass_60(){\n  return Lcom_google_gwt_dom_client_Style$Overflow$4_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]);\nfunction $clinit_Style$Position(){\n  $clinit_Style$Position = nullMethod;\n  STATIC = new Style$Position$1_0;\n  RELATIVE = new Style$Position$2_0;\n  ABSOLUTE = new Style$Position$3_0;\n  FIXED = new Style$Position$4_0;\n  $VALUES_2 = initValues(_3Lcom_google_gwt_dom_client_Style$Position_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$Style$Position, [STATIC, RELATIVE, ABSOLUTE, FIXED]);\n}\n\nfunction values_2(){\n  $clinit_Style$Position();\n  return $VALUES_2;\n}\n\nfunction Style$Position(){\n}\n\n_ = Style$Position.prototype = new Enum;\n_.getClass$ = function getClass_61(){\n  return Lcom_google_gwt_dom_client_Style$Position_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]);\nvar $VALUES_2, ABSOLUTE, FIXED, RELATIVE, STATIC;\nfunction Style$Position$1_0(){\n  Enum_0.call(this, 'STATIC', 0);\n}\n\nfunction Style$Position$1(){\n}\n\n_ = Style$Position$1_0.prototype = Style$Position$1.prototype = new Style$Position;\n_.getClass$ = function getClass_62(){\n  return Lcom_google_gwt_dom_client_Style$Position$1_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]);\nfunction Style$Position$2_0(){\n  Enum_0.call(this, 'RELATIVE', 1);\n}\n\nfunction Style$Position$2(){\n}\n\n_ = Style$Position$2_0.prototype = Style$Position$2.prototype = new Style$Position;\n_.getClass$ = function getClass_63(){\n  return Lcom_google_gwt_dom_client_Style$Position$2_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]);\nfunction Style$Position$3_0(){\n  Enum_0.call(this, 'ABSOLUTE', 2);\n}\n\nfunction Style$Position$3(){\n}\n\n_ = Style$Position$3_0.prototype = Style$Position$3.prototype = new Style$Position;\n_.getClass$ = function getClass_64(){\n  return Lcom_google_gwt_dom_client_Style$Position$3_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]);\nfunction Style$Position$4_0(){\n  Enum_0.call(this, 'FIXED', 3);\n}\n\nfunction Style$Position$4(){\n}\n\n_ = Style$Position$4_0.prototype = Style$Position$4.prototype = new Style$Position;\n_.getClass$ = function getClass_65(){\n  return Lcom_google_gwt_dom_client_Style$Position$4_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]);\nfunction $clinit_Style$Unit(){\n  $clinit_Style$Unit = nullMethod;\n  PX = new Style$Unit$1_0;\n  PCT = new Style$Unit$2_0;\n  EM = new Style$Unit$3_0;\n  EX = new Style$Unit$4_0;\n  PT = new Style$Unit$5_0;\n  PC = new Style$Unit$6_0;\n  IN = new Style$Unit$7_0;\n  CM = new Style$Unit$8_0;\n  MM = new Style$Unit$9_0;\n  $VALUES_3 = initValues(_3Lcom_google_gwt_dom_client_Style$Unit_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$Style$Unit, [PX, PCT, EM, EX, PT, PC, IN, CM, MM]);\n}\n\nfunction values_3(){\n  $clinit_Style$Unit();\n  return $VALUES_3;\n}\n\nfunction Style$Unit(){\n}\n\n_ = Style$Unit.prototype = new Enum;\n_.getClass$ = function getClass_66(){\n  return Lcom_google_gwt_dom_client_Style$Unit_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]);\nvar $VALUES_3, CM, EM, EX, IN, MM, PC, PCT, PT, PX;\nfunction Style$Unit$1_0(){\n  Enum_0.call(this, 'PX', 0);\n}\n\nfunction Style$Unit$1(){\n}\n\n_ = Style$Unit$1_0.prototype = Style$Unit$1.prototype = new Style$Unit;\n_.getClass$ = function getClass_67(){\n  return Lcom_google_gwt_dom_client_Style$Unit$1_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]);\nfunction Style$Unit$2_0(){\n  Enum_0.call(this, 'PCT', 1);\n}\n\nfunction Style$Unit$2(){\n}\n\n_ = Style$Unit$2_0.prototype = Style$Unit$2.prototype = new Style$Unit;\n_.getClass$ = function getClass_68(){\n  return Lcom_google_gwt_dom_client_Style$Unit$2_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]);\nfunction Style$Unit$3_0(){\n  Enum_0.call(this, 'EM', 2);\n}\n\nfunction Style$Unit$3(){\n}\n\n_ = Style$Unit$3_0.prototype = Style$Unit$3.prototype = new Style$Unit;\n_.getClass$ = function getClass_69(){\n  return Lcom_google_gwt_dom_client_Style$Unit$3_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]);\nfunction Style$Unit$4_0(){\n  Enum_0.call(this, 'EX', 3);\n}\n\nfunction Style$Unit$4(){\n}\n\n_ = Style$Unit$4_0.prototype = Style$Unit$4.prototype = new Style$Unit;\n_.getClass$ = function getClass_70(){\n  return Lcom_google_gwt_dom_client_Style$Unit$4_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]);\nfunction Style$Unit$5_0(){\n  Enum_0.call(this, 'PT', 4);\n}\n\nfunction Style$Unit$5(){\n}\n\n_ = Style$Unit$5_0.prototype = Style$Unit$5.prototype = new Style$Unit;\n_.getClass$ = function getClass_71(){\n  return Lcom_google_gwt_dom_client_Style$Unit$5_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]);\nfunction Style$Unit$6_0(){\n  Enum_0.call(this, 'PC', 5);\n}\n\nfunction Style$Unit$6(){\n}\n\n_ = Style$Unit$6_0.prototype = Style$Unit$6.prototype = new Style$Unit;\n_.getClass$ = function getClass_72(){\n  return Lcom_google_gwt_dom_client_Style$Unit$6_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]);\nfunction Style$Unit$7_0(){\n  Enum_0.call(this, 'IN', 6);\n}\n\nfunction Style$Unit$7(){\n}\n\n_ = Style$Unit$7_0.prototype = Style$Unit$7.prototype = new Style$Unit;\n_.getClass$ = function getClass_73(){\n  return Lcom_google_gwt_dom_client_Style$Unit$7_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]);\nfunction Style$Unit$8_0(){\n  Enum_0.call(this, 'CM', 7);\n}\n\nfunction Style$Unit$8(){\n}\n\n_ = Style$Unit$8_0.prototype = Style$Unit$8.prototype = new Style$Unit;\n_.getClass$ = function getClass_74(){\n  return Lcom_google_gwt_dom_client_Style$Unit$8_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]);\nfunction Style$Unit$9_0(){\n  Enum_0.call(this, 'MM', 8);\n}\n\nfunction Style$Unit$9(){\n}\n\n_ = Style$Unit$9_0.prototype = Style$Unit$9.prototype = new Style$Unit;\n_.getClass$ = function getClass_75(){\n  return Lcom_google_gwt_dom_client_Style$Unit$9_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]);\nfunction $clinit_StyleInjector(){\n  $clinit_StyleInjector = nullMethod;\n  toInject = [];\n  toInjectAtEnd = [];\n  toInjectAtStart = [];\n  flusher = new StyleInjector$1_0;\n}\n\nfunction flush(){\n  $clinit_StyleInjector();\n  var css, maybeReturn, toReturn;\n  toReturn = null;\n  if (toInjectAtStart.length != 0) {\n    css = toInjectAtStart.join('');\n    maybeReturn = $injectStyleSheetAtStart(($clinit_StyleInjector$StyleInjectorImpl() , IMPL), css);\n    !toInjectAtStart && (toReturn = maybeReturn);\n    toInjectAtStart.length = 0;\n  }\n  if (toInject.length != 0) {\n    css = toInject.join('');\n    maybeReturn = $injectStyleSheet(($clinit_StyleInjector$StyleInjectorImpl() , IMPL), css);\n    !toInject && (toReturn = maybeReturn);\n    toInject.length = 0;\n  }\n  if (toInjectAtEnd.length != 0) {\n    css = toInjectAtEnd.join('');\n    maybeReturn = $injectStyleSheet(($clinit_StyleInjector$StyleInjectorImpl() , IMPL), css);\n    !toInjectAtEnd && (toReturn = maybeReturn);\n    toInjectAtEnd.length = 0;\n  }\n  needsInjection = false;\n  return toReturn;\n}\n\nfunction schedule(){\n  $clinit_StyleInjector();\n  if (!needsInjection) {\n    needsInjection = true;\n    $scheduleFinally(($clinit_SchedulerImpl() , INSTANCE_0), flusher);\n  }\n}\n\nvar flusher, needsInjection = false, toInject, toInjectAtEnd, toInjectAtStart;\nfunction StyleInjector$1_0(){\n}\n\nfunction StyleInjector$1(){\n}\n\n_ = StyleInjector$1_0.prototype = StyleInjector$1.prototype = new Object_0;\n_.execute = function execute_3(){\n  ($clinit_StyleInjector() , needsInjection) && flush();\n}\n;\n_.getClass$ = function getClass_76(){\n  return Lcom_google_gwt_dom_client_StyleInjector$1_2_classLit;\n}\n;\nfunction $clinit_StyleInjector$StyleInjectorImpl(){\n  $clinit_StyleInjector$StyleInjectorImpl = nullMethod;\n  IMPL = new StyleInjector$StyleInjectorImpl_0;\n}\n\nfunction $createElement(contents){\n  var style;\n  style = $doc.createElement('style');\n  style['language'] = 'text/css';\n  $setInnerText(style, contents);\n  return style;\n}\n\nfunction $getHead(this$static){\n  var elt;\n  if (!this$static.head) {\n    elt = $doc.getElementsByTagName('head')[0];\n    this$static.head = elt;\n  }\n  return this$static.head;\n}\n\nfunction $injectStyleSheet(this$static, contents){\n  var style;\n  style = $createElement(contents);\n  $appendChild($getHead(this$static), style);\n  return style;\n}\n\nfunction $injectStyleSheetAtStart(this$static, contents){\n  var style;\n  style = $createElement(contents);\n  $insertBefore($getHead(this$static), style, this$static.head.firstChild);\n  return style;\n}\n\nfunction StyleInjector$StyleInjectorImpl_0(){\n}\n\nfunction StyleInjector$StyleInjectorImpl(){\n}\n\n_ = StyleInjector$StyleInjectorImpl_0.prototype = StyleInjector$StyleInjectorImpl.prototype = new Object_0;\n_.getClass$ = function getClass_77(){\n  return Lcom_google_gwt_dom_client_StyleInjector$StyleInjectorImpl_2_classLit;\n}\n;\n_.head = null;\nvar IMPL;\nfunction $getRelativeX(this$static, target){\n  return this$static.clientX - $getAbsoluteLeft(target) + (target.scrollLeft || 0) + $getScrollLeft(target.ownerDocument);\n}\n\nfunction $getRelativeY(this$static, target){\n  return this$static.clientY - $getAbsoluteTop(target) + (target.scrollTop || 0) + $getScrollTop(target.ownerDocument);\n}\n\nfunction Event_0(){\n}\n\n_ = Event_0.prototype = new Object_0;\n_.getClass$ = function getClass_78(){\n  return Lcom_google_web_bindery_event_shared_Event_2_classLit;\n}\n;\n_.toString$ = function toString_6(){\n  return 'An event type';\n}\n;\n_.source = null;\nfunction $overrideSource(this$static, source){\n  this$static.source = source;\n}\n\nfunction GwtEvent(){\n}\n\n_ = GwtEvent.prototype = new Event_0;\n_.getClass$ = function getClass_79(){\n  return Lcom_google_gwt_event_shared_GwtEvent_2_classLit;\n}\n;\n_.revive = function revive(){\n  this.dead = false;\n  this.source = null;\n}\n;\n_.dead = false;\nfunction $setNativeEvent(this$static, nativeEvent){\n  this$static.nativeEvent = nativeEvent;\n}\n\nfunction $setRelativeElement(this$static, relativeElem){\n  this$static.relativeElem = relativeElem;\n}\n\nfunction fireNativeEvent(nativeEvent, handlerSource, relativeElem){\n  var currentNative, currentRelativeElem, typeKey;\n  if (registered) {\n    typeKey = dynamicCast($unsafeGet(registered, nativeEvent.type), Q$DomEvent$Type);\n    if (typeKey) {\n      currentNative = typeKey.flyweight.nativeEvent;\n      currentRelativeElem = typeKey.flyweight.relativeElem;\n      $setNativeEvent(typeKey.flyweight, nativeEvent);\n      $setRelativeElement(typeKey.flyweight, relativeElem);\n      $fireEvent_0(handlerSource, typeKey.flyweight);\n      $setNativeEvent(typeKey.flyweight, currentNative);\n      $setRelativeElement(typeKey.flyweight, currentRelativeElem);\n    }\n  }\n}\n\nfunction DomEvent(){\n}\n\n_ = DomEvent.prototype = new GwtEvent;\n_.getAssociatedType = function getAssociatedType(){\n  return this.getAssociatedType_0();\n}\n;\n_.getClass$ = function getClass_80(){\n  return Lcom_google_gwt_event_dom_client_DomEvent_2_classLit;\n}\n;\n_.nativeEvent = null;\n_.relativeElem = null;\nvar registered = null;\nfunction HumanInputEvent(){\n}\n\n_ = HumanInputEvent.prototype = new DomEvent;\n_.getClass$ = function getClass_81(){\n  return Lcom_google_gwt_event_dom_client_HumanInputEvent_2_classLit;\n}\n;\nfunction $getRelativeX_0(this$static, target){\n  var e;\n  e = this$static.nativeEvent;\n  return (e.clientX || 0) - $getAbsoluteLeft(target) + (target.scrollLeft || 0) + $getScrollLeft(target.ownerDocument);\n}\n\nfunction $getRelativeY_0(this$static, target){\n  var e;\n  e = this$static.nativeEvent;\n  return (e.clientY || 0) - $getAbsoluteTop(target) + (target.scrollTop || 0) + $getScrollTop(target.ownerDocument);\n}\n\nfunction $getX(this$static){\n  var relativeElem;\n  relativeElem = this$static.relativeElem;\n  if (relativeElem) {\n    return $getRelativeX_0(this$static, relativeElem);\n  }\n  return this$static.nativeEvent.clientX || 0;\n}\n\nfunction $getY(this$static){\n  var relativeElem;\n  relativeElem = this$static.relativeElem;\n  if (relativeElem) {\n    return $getRelativeY_0(this$static, relativeElem);\n  }\n  return this$static.nativeEvent.clientY || 0;\n}\n\nfunction MouseEvent_0(){\n}\n\n_ = MouseEvent_0.prototype = new HumanInputEvent;\n_.getClass$ = function getClass_82(){\n  return Lcom_google_gwt_event_dom_client_MouseEvent_2_classLit;\n}\n;\nfunction $clinit_ClickEvent(){\n  $clinit_ClickEvent = nullMethod;\n  TYPE = new DomEvent$Type_0('click', new ClickEvent_0);\n}\n\nfunction ClickEvent_0(){\n}\n\nfunction ClickEvent(){\n}\n\n_ = ClickEvent_0.prototype = ClickEvent.prototype = new MouseEvent_0;\n_.dispatch = function dispatch(handler){\n  dynamicCast(handler, Q$ClickHandler).onClick(this);\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_0(){\n  return TYPE;\n}\n;\n_.getClass$ = function getClass_83(){\n  return Lcom_google_gwt_event_dom_client_ClickEvent_2_classLit;\n}\n;\nvar TYPE;\nfunction Event$Type(){\n}\n\n_ = Event$Type.prototype = new Object_0;\n_.getClass$ = function getClass_84(){\n  return Lcom_google_web_bindery_event_shared_Event$Type_2_classLit;\n}\n;\n_.hashCode$ = function hashCode_3(){\n  return this.index_0;\n}\n;\n_.toString$ = function toString_7(){\n  return 'Event type';\n}\n;\n_.index_0 = 0;\nvar nextHashCode = 0;\nfunction GwtEvent$Type_0(){\n  this.index_0 = ++nextHashCode;\n}\n\nfunction GwtEvent$Type(){\n}\n\n_ = GwtEvent$Type_0.prototype = GwtEvent$Type.prototype = new Event$Type;\n_.getClass$ = function getClass_85(){\n  return Lcom_google_gwt_event_shared_GwtEvent$Type_2_classLit;\n}\n;\nfunction DomEvent$Type_0(eventName, flyweight){\n  GwtEvent$Type_0.call(this);\n  this.flyweight = flyweight;\n  !registered && (registered = new PrivateMap_0);\n  $unsafePut(registered, eventName, this);\n  this.name_0 = eventName;\n}\n\nfunction DomEvent$Type(){\n}\n\n_ = DomEvent$Type_0.prototype = DomEvent$Type.prototype = new GwtEvent$Type;\n_.getClass$ = function getClass_86(){\n  return Lcom_google_gwt_event_dom_client_DomEvent$Type_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$DomEvent$Type]);\n_.flyweight = null;\n_.name_0 = null;\nfunction $clinit_MouseDownEvent(){\n  $clinit_MouseDownEvent = nullMethod;\n  TYPE_0 = new DomEvent$Type_0('mousedown', new MouseDownEvent_0);\n}\n\nfunction MouseDownEvent_0(){\n}\n\nfunction MouseDownEvent(){\n}\n\n_ = MouseDownEvent_0.prototype = MouseDownEvent.prototype = new MouseEvent_0;\n_.dispatch = function dispatch_0(handler){\n  dynamicCast(handler, Q$MouseDownHandler).onMouseDown(this);\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_1(){\n  return TYPE_0;\n}\n;\n_.getClass$ = function getClass_87(){\n  return Lcom_google_gwt_event_dom_client_MouseDownEvent_2_classLit;\n}\n;\nvar TYPE_0;\nfunction $clinit_MouseMoveEvent(){\n  $clinit_MouseMoveEvent = nullMethod;\n  TYPE_1 = new DomEvent$Type_0('mousemove', new MouseMoveEvent_0);\n}\n\nfunction MouseMoveEvent_0(){\n}\n\nfunction MouseMoveEvent(){\n}\n\n_ = MouseMoveEvent_0.prototype = MouseMoveEvent.prototype = new MouseEvent_0;\n_.dispatch = function dispatch_1(handler){\n  dynamicCast(handler, Q$MouseMoveHandler).onMouseMove(this);\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_2(){\n  return TYPE_1;\n}\n;\n_.getClass$ = function getClass_88(){\n  return Lcom_google_gwt_event_dom_client_MouseMoveEvent_2_classLit;\n}\n;\nvar TYPE_1;\nfunction $clinit_MouseOutEvent(){\n  $clinit_MouseOutEvent = nullMethod;\n  TYPE_2 = new DomEvent$Type_0('mouseout', new MouseOutEvent_0);\n}\n\nfunction MouseOutEvent_0(){\n}\n\nfunction MouseOutEvent(){\n}\n\n_ = MouseOutEvent_0.prototype = MouseOutEvent.prototype = new MouseEvent_0;\n_.dispatch = function dispatch_2(handler){\n  $select(dynamicCast(dynamicCast(handler, Q$MouseOutHandler), Q$MLElementWrapper$ElementOutHandler).this$0, ($clinit_Boolean() , $clinit_Boolean() , FALSE));\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_3(){\n  return TYPE_2;\n}\n;\n_.getClass$ = function getClass_89(){\n  return Lcom_google_gwt_event_dom_client_MouseOutEvent_2_classLit;\n}\n;\nvar TYPE_2;\nfunction $clinit_MouseOverEvent(){\n  $clinit_MouseOverEvent = nullMethod;\n  TYPE_3 = new DomEvent$Type_0('mouseover', new MouseOverEvent_0);\n}\n\nfunction MouseOverEvent_0(){\n}\n\nfunction MouseOverEvent(){\n}\n\n_ = MouseOverEvent_0.prototype = MouseOverEvent.prototype = new MouseEvent_0;\n_.dispatch = function dispatch_3(handler){\n  $select(dynamicCast(dynamicCast(handler, Q$MouseOverHandler), Q$MLElementWrapper$ElementOverHandler).this$0, ($clinit_Boolean() , $clinit_Boolean() , TRUE));\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_4(){\n  return TYPE_3;\n}\n;\n_.getClass$ = function getClass_90(){\n  return Lcom_google_gwt_event_dom_client_MouseOverEvent_2_classLit;\n}\n;\nvar TYPE_3;\nfunction $clinit_MouseUpEvent(){\n  $clinit_MouseUpEvent = nullMethod;\n  TYPE_4 = new DomEvent$Type_0('mouseup', new MouseUpEvent_0);\n}\n\nfunction MouseUpEvent_0(){\n}\n\nfunction MouseUpEvent(){\n}\n\n_ = MouseUpEvent_0.prototype = MouseUpEvent.prototype = new MouseEvent_0;\n_.dispatch = function dispatch_4(handler){\n  dynamicCast(handler, Q$MouseUpHandler).onMouseUp(this);\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_5(){\n  return TYPE_4;\n}\n;\n_.getClass$ = function getClass_91(){\n  return Lcom_google_gwt_event_dom_client_MouseUpEvent_2_classLit;\n}\n;\nvar TYPE_4;\nfunction $unsafeGet(this$static, key){\n  return this$static.map[key];\n}\n\nfunction $unsafePut(this$static, key, value){\n  this$static.map[key] = value;\n}\n\nfunction PrivateMap_0(){\n  this.map = {};\n}\n\nfunction PrivateMap(){\n}\n\n_ = PrivateMap_0.prototype = PrivateMap.prototype = new Object_0;\n_.getClass$ = function getClass_92(){\n  return Lcom_google_gwt_event_dom_client_PrivateMap_2_classLit;\n}\n;\n_.map = null;\nfunction TouchEvent(){\n}\n\n_ = TouchEvent.prototype = new HumanInputEvent;\n_.getClass$ = function getClass_93(){\n  return Lcom_google_gwt_event_dom_client_TouchEvent_2_classLit;\n}\n;\nvar impl_1 = null;\nfunction $clinit_TouchCancelEvent(){\n  $clinit_TouchCancelEvent = nullMethod;\n  TYPE_5 = new DomEvent$Type_0('touchcancel', new TouchCancelEvent_0);\n}\n\nfunction TouchCancelEvent_0(){\n}\n\nfunction TouchCancelEvent(){\n}\n\n_ = TouchCancelEvent_0.prototype = TouchCancelEvent.prototype = new TouchEvent;\n_.dispatch = function dispatch_5(handler){\n  dynamicCast(handler, Q$TouchCancelHandler).onTouchCancel(this);\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_6(){\n  return TYPE_5;\n}\n;\n_.getClass$ = function getClass_94(){\n  return Lcom_google_gwt_event_dom_client_TouchCancelEvent_2_classLit;\n}\n;\nvar TYPE_5;\nfunction $clinit_TouchEndEvent(){\n  $clinit_TouchEndEvent = nullMethod;\n  TYPE_6 = new DomEvent$Type_0('touchend', new TouchEndEvent_0);\n}\n\nfunction TouchEndEvent_0(){\n}\n\nfunction TouchEndEvent(){\n}\n\n_ = TouchEndEvent_0.prototype = TouchEndEvent.prototype = new TouchEvent;\n_.dispatch = function dispatch_6(handler){\n  dynamicCast(handler, Q$TouchEndHandler).onTouchEnd(this);\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_7(){\n  return TYPE_6;\n}\n;\n_.getClass$ = function getClass_95(){\n  return Lcom_google_gwt_event_dom_client_TouchEndEvent_2_classLit;\n}\n;\nvar TYPE_6;\nfunction TouchEvent$TouchSupportDetector_0(){\n  var elem;\n  this.isSupported = (elem = document.createElement('div') , elem.setAttribute('ontouchstart', 'return;') , typeof elem.ontouchstart == 'function');\n}\n\nfunction TouchEvent$TouchSupportDetector(){\n}\n\n_ = TouchEvent$TouchSupportDetector_0.prototype = TouchEvent$TouchSupportDetector.prototype = new Object_0;\n_.getClass$ = function getClass_96(){\n  return Lcom_google_gwt_event_dom_client_TouchEvent$TouchSupportDetector_2_classLit;\n}\n;\nfunction $clinit_TouchMoveEvent(){\n  $clinit_TouchMoveEvent = nullMethod;\n  TYPE_7 = new DomEvent$Type_0('touchmove', new TouchMoveEvent_0);\n}\n\nfunction TouchMoveEvent_0(){\n}\n\nfunction TouchMoveEvent(){\n}\n\n_ = TouchMoveEvent_0.prototype = TouchMoveEvent.prototype = new TouchEvent;\n_.dispatch = function dispatch_7(handler){\n  dynamicCast(handler, Q$TouchMoveHandler).onTouchMove(this);\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_8(){\n  return TYPE_7;\n}\n;\n_.getClass$ = function getClass_97(){\n  return Lcom_google_gwt_event_dom_client_TouchMoveEvent_2_classLit;\n}\n;\nvar TYPE_7;\nfunction $clinit_TouchStartEvent(){\n  $clinit_TouchStartEvent = nullMethod;\n  TYPE_8 = new DomEvent$Type_0('touchstart', new TouchStartEvent_0);\n}\n\nfunction TouchStartEvent_0(){\n}\n\nfunction TouchStartEvent(){\n}\n\n_ = TouchStartEvent_0.prototype = TouchStartEvent.prototype = new TouchEvent;\n_.dispatch = function dispatch_8(handler){\n  dynamicCast(handler, Q$TouchStartHandler).onTouchStart(this);\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_9(){\n  return TYPE_8;\n}\n;\n_.getClass$ = function getClass_98(){\n  return Lcom_google_gwt_event_dom_client_TouchStartEvent_2_classLit;\n}\n;\nvar TYPE_8;\nfunction $dispatch(this$static, handler){\n  this$static.attached?$setupBustClickHandler(handler.this$0):$removeBustClickHandler(handler.this$0);\n}\n\nfunction AttachEvent_0(attached){\n  this.attached = attached;\n}\n\nfunction fire_0(source, attached){\n  var event_0;\n  if (TYPE_9) {\n    event_0 = new AttachEvent_0(attached);\n    !!source.handlerManager && $fireEvent(source.handlerManager, event_0);\n  }\n}\n\nfunction AttachEvent(){\n}\n\n_ = AttachEvent_0.prototype = AttachEvent.prototype = new GwtEvent;\n_.dispatch = function dispatch_9(handler){\n  $dispatch(this, dynamicCast(handler, Q$AttachEvent$Handler));\n}\n;\n_.getAssociatedType = function getAssociatedType_10(){\n  return TYPE_9;\n}\n;\n_.getClass$ = function getClass_99(){\n  return Lcom_google_gwt_event_logical_shared_AttachEvent_2_classLit;\n}\n;\n_.attached = false;\nvar TYPE_9 = null;\nfunction CloseEvent_0(){\n}\n\nfunction fire_1(source){\n  var event_0;\n  if (TYPE_10) {\n    event_0 = new CloseEvent_0;\n    source.fireEvent(event_0);\n  }\n}\n\nfunction CloseEvent(){\n}\n\n_ = CloseEvent_0.prototype = CloseEvent.prototype = new GwtEvent;\n_.dispatch = function dispatch_10(handler){\n  dynamicCast(handler, Q$CloseHandler).onClose(this);\n}\n;\n_.getAssociatedType = function getAssociatedType_11(){\n  return TYPE_10;\n}\n;\n_.getClass$ = function getClass_100(){\n  return Lcom_google_gwt_event_logical_shared_CloseEvent_2_classLit;\n}\n;\nvar TYPE_10 = null;\nfunction ResizeEvent_0(){\n}\n\nfunction fire_2(source){\n  var event_0;\n  if (TYPE_11) {\n    event_0 = new ResizeEvent_0;\n    $fireEvent(source, event_0);\n  }\n}\n\nfunction ResizeEvent(){\n}\n\n_ = ResizeEvent_0.prototype = ResizeEvent.prototype = new GwtEvent;\n_.dispatch = function dispatch_11(handler){\n  dynamicCast(handler, Q$ResizeHandler).onResize(this);\n}\n;\n_.getAssociatedType = function getAssociatedType_12(){\n  return TYPE_11;\n}\n;\n_.getClass$ = function getClass_101(){\n  return Lcom_google_gwt_event_logical_shared_ResizeEvent_2_classLit;\n}\n;\nvar TYPE_11 = null;\nfunction $dispatch_0(handler){\n  handler.this$0.autoHideOnHistoryEvents && $hide(handler.this$0);\n}\n\nfunction ValueChangeEvent_0(){\n}\n\nfunction fire_3(source){\n  var event_0;\n  if (TYPE_12) {\n    event_0 = new ValueChangeEvent_0;\n    source.fireEvent(event_0);\n  }\n}\n\nfunction fireIfNotEqual(source, oldValue, newValue){\n  var event_0;\n  if (!!TYPE_12 && oldValue != newValue && (!oldValue || !(!!newValue && newValue.value_0 == oldValue.value_0))) {\n    event_0 = new ValueChangeEvent_0;\n    !!source.handlerManager && $fireEvent(source.handlerManager, event_0);\n  }\n}\n\nfunction ValueChangeEvent(){\n}\n\n_ = ValueChangeEvent_0.prototype = ValueChangeEvent.prototype = new GwtEvent;\n_.dispatch = function dispatch_12(handler){\n  $dispatch_0(dynamicCast(handler, Q$ValueChangeHandler));\n}\n;\n_.getAssociatedType = function getAssociatedType_13(){\n  return TYPE_12;\n}\n;\n_.getClass$ = function getClass_102(){\n  return Lcom_google_gwt_event_logical_shared_ValueChangeEvent_2_classLit;\n}\n;\nvar TYPE_12 = null;\nfunction $addHandler(this$static, type, handler){\n  return new LegacyHandlerWrapper_0($doAdd(this$static.eventBus, type, handler));\n}\n\nfunction $fireEvent(this$static, event_0){\n  var $e0, e, oldSource;\n  !event_0.dead || event_0.revive();\n  oldSource = event_0.source;\n  $overrideSource(event_0, this$static.source);\n  try {\n    $doFire(this$static.eventBus, event_0);\n  }\n   catch ($e0) {\n    $e0 = caught_0($e0);\n    if (instanceOf($e0, Q$UmbrellaException)) {\n      e = $e0;\n      throw new UmbrellaException_2(e.causes);\n    }\n     else \n      throw $e0;\n  }\n   finally {\n    oldSource == null?(event_0.dead = true , event_0.source = null):(event_0.source = oldSource);\n  }\n}\n\nfunction $isEventHandled(this$static, e){\n  return $isEventHandled_0(this$static.eventBus, e);\n}\n\nfunction HandlerManager_0(source){\n  HandlerManager_1.call(this, source, false);\n}\n\nfunction HandlerManager_1(source, fireInReverseOrder){\n  this.eventBus = new HandlerManager$Bus_0(fireInReverseOrder);\n  this.source = source;\n}\n\nfunction HandlerManager(){\n}\n\n_ = HandlerManager_1.prototype = HandlerManager_0.prototype = HandlerManager.prototype = new Object_0;\n_.fireEvent = function fireEvent(event_0){\n  $fireEvent(this, event_0);\n}\n;\n_.getClass$ = function getClass_103(){\n  return Lcom_google_gwt_event_shared_HandlerManager_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasHandlers]);\n_.eventBus = null;\n_.source = null;\nfunction EventBus(){\n}\n\n_ = EventBus.prototype = new Object_0;\n_.getClass$ = function getClass_104(){\n  return Lcom_google_web_bindery_event_shared_EventBus_2_classLit;\n}\n;\nfunction $defer(this$static, command){\n  !this$static.deferredDeltas && (this$static.deferredDeltas = new ArrayList_0);\n  $add_10(this$static.deferredDeltas, command);\n}\n\nfunction $doAdd(this$static, type, handler){\n  if (!type) {\n    throw new NullPointerException_1('Cannot add a handler with a null type');\n  }\n  if (!handler) {\n    throw new NullPointerException_1('Cannot add a null handler');\n  }\n  this$static.firingDepth > 0?$defer(this$static, new SimpleEventBus$2_0(this$static, type, handler)):$doAddNow(this$static, type, handler);\n  return new SimpleEventBus$1_0(this$static, type, handler);\n}\n\nfunction $doAddNow(this$static, type, handler){\n  var l_0;\n  l_0 = $ensureHandlerList(this$static, type);\n  l_0.add(handler);\n}\n\nfunction $doFire(this$static, event_0){\n  var $e0, causes, e, handler, handlers, it;\n  if (!event_0) {\n    throw new NullPointerException_1('Cannot fire null event');\n  }\n  try {\n    ++this$static.firingDepth;\n    handlers = $getDispatchList(this$static, event_0.getAssociatedType());\n    causes = null;\n    it = this$static.isReverseOrder?handlers.listIterator_0(handlers.size_0()):handlers.listIterator();\n    while (this$static.isReverseOrder?it.hasPrevious():it.hasNext()) {\n      handler = this$static.isReverseOrder?it.previous():it.next_0();\n      try {\n        event_0.dispatch(dynamicCast(handler, Q$EventHandler));\n      }\n       catch ($e0) {\n        $e0 = caught_0($e0);\n        if (instanceOf($e0, Q$Throwable)) {\n          e = $e0;\n          !causes && (causes = new HashSet_0);\n          $add_11(causes, e);\n        }\n         else \n          throw $e0;\n      }\n    }\n    if (causes) {\n      throw new UmbrellaException_1(causes);\n    }\n  }\n   finally {\n    --this$static.firingDepth;\n    this$static.firingDepth == 0 && $handleQueuedAddsAndRemoves(this$static);\n  }\n}\n\nfunction $doRemoveNow(this$static, type, handler){\n  var l_0, removed, sourceMap;\n  l_0 = $getHandlerList(this$static, type);\n  removed = l_0.remove_1(handler);\n  removed && l_0.isEmpty() && (sourceMap = dynamicCast($get_0(this$static.map, type), Q$Map) , dynamicCast($removeNullSlot(sourceMap), Q$List) , sourceMap.size == 0 && $remove_8(this$static.map, type) , undefined);\n}\n\nfunction $ensureHandlerList(this$static, type){\n  var handlers, sourceMap;\n  sourceMap = dynamicCast($get_0(this$static.map, type), Q$Map);\n  if (!sourceMap) {\n    sourceMap = new HashMap_0;\n    $put_0(this$static.map, type, sourceMap);\n  }\n  handlers = dynamicCast(sourceMap.nullSlot, Q$List);\n  if (!handlers) {\n    handlers = new ArrayList_0;\n    $putNullSlot(sourceMap, handlers);\n  }\n  return handlers;\n}\n\nfunction $getDispatchList(this$static, type){\n  var directHandlers;\n  directHandlers = $getHandlerList(this$static, type);\n  return directHandlers;\n}\n\nfunction $getHandlerList(this$static, type){\n  var handlers, sourceMap;\n  sourceMap = dynamicCast($get_0(this$static.map, type), Q$Map);\n  if (!sourceMap) {\n    return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;\n  }\n  handlers = dynamicCast(sourceMap.nullSlot, Q$List);\n  if (!handlers) {\n    return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;\n  }\n  return handlers;\n}\n\nfunction $handleQueuedAddsAndRemoves(this$static){\n  var c, c$iterator;\n  if (this$static.deferredDeltas) {\n    try {\n      for (c$iterator = new AbstractList$IteratorImpl_0(this$static.deferredDeltas); c$iterator.i < c$iterator.this$0_0.size_0();) {\n        c = dynamicCast($next_4(c$iterator), Q$SimpleEventBus$Command);\n        c.execute();\n      }\n    }\n     finally {\n      this$static.deferredDeltas = null;\n    }\n  }\n}\n\nfunction $isEventHandled_0(this$static, eventKey){\n  return $containsKey(this$static.map, eventKey);\n}\n\nfunction SimpleEventBus(){\n}\n\n_ = SimpleEventBus.prototype = new EventBus;\n_.getClass$ = function getClass_105(){\n  return Lcom_google_web_bindery_event_shared_SimpleEventBus_2_classLit;\n}\n;\n_.deferredDeltas = null;\n_.firingDepth = 0;\n_.isReverseOrder = false;\nfunction $doRemove(this$static, type, handler){\n  this$static.firingDepth > 0?$defer(this$static, new SimpleEventBus$3_0(this$static, type, handler)):$doRemoveNow(this$static, type, handler);\n}\n\nfunction HandlerManager$Bus_0(fireInReverseOrder){\n  this.map = new HashMap_0;\n  this.isReverseOrder = fireInReverseOrder;\n}\n\nfunction HandlerManager$Bus(){\n}\n\n_ = HandlerManager$Bus_0.prototype = HandlerManager$Bus.prototype = new SimpleEventBus;\n_.getClass$ = function getClass_106(){\n  return Lcom_google_gwt_event_shared_HandlerManager$Bus_2_classLit;\n}\n;\nfunction LegacyHandlerWrapper_0(real){\n  this.real = real;\n}\n\nfunction LegacyHandlerWrapper(){\n}\n\n_ = LegacyHandlerWrapper_0.prototype = LegacyHandlerWrapper.prototype = new Object_0;\n_.getClass$ = function getClass_107(){\n  return Lcom_google_gwt_event_shared_LegacyHandlerWrapper_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HandlerRegistration]);\n_.real = null;\nfunction UmbrellaException_1(causes){\n  RuntimeException_1.call(this, 'One or more exceptions caught, see full set in UmbrellaException#getCauses', causes.size_0() == 0?null:dynamicCast(causes.toArray(initDim(_3Ljava_lang_Throwable_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Object_$1, Q$Throwable_$1]), Q$Throwable, 0, 0)), Q$Throwable_$1)[0]);\n  this.causes = causes;\n}\n\nfunction UmbrellaException_0(){\n}\n\n_ = UmbrellaException_1.prototype = UmbrellaException_0.prototype = new RuntimeException;\n_.getClass$ = function getClass_108(){\n  return Lcom_google_web_bindery_event_shared_UmbrellaException_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$UmbrellaException, Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable]);\n_.causes = null;\nfunction UmbrellaException_2(causes){\n  UmbrellaException_1.call(this, causes);\n}\n\nfunction UmbrellaException(){\n}\n\n_ = UmbrellaException_2.prototype = UmbrellaException.prototype = new UmbrellaException_0;\n_.getClass$ = function getClass_109(){\n  return Lcom_google_gwt_event_shared_UmbrellaException_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$UmbrellaException, Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable]);\nfunction Gadget(){\n}\n\n_ = Gadget.prototype = new Object_0;\n_.getClass$ = function getClass_110(){\n  return Lcom_google_gwt_gadgets_client_Gadget_2_classLit;\n}\n;\nfunction throwIfNull(value){\n  if (null == value) {\n    throw new NullPointerException_1('encodedURLComponent cannot be null');\n  }\n}\n\nfunction getDirectionOnElement(elem){\n  var dirPropertyValue;\n  dirPropertyValue = $getPropertyString(elem, 'dir');\n  if ($equalsIgnoreCase('rtl', dirPropertyValue)) {\n    return $clinit_HasDirection$Direction() , RTL;\n  }\n   else if ($equalsIgnoreCase('ltr', dirPropertyValue)) {\n    return $clinit_HasDirection$Direction() , LTR;\n  }\n  return $clinit_HasDirection$Direction() , DEFAULT;\n}\n\nfunction setDirectionOnElement(elem, direction){\n  switch (direction.ordinal) {\n    case 0:\n      {\n        elem['dir'] = 'rtl';\n        break;\n      }\n\n    case 1:\n      {\n        elem['dir'] = 'ltr';\n        break;\n      }\n\n    case 2:\n      {\n        getDirectionOnElement(elem) != ($clinit_HasDirection$Direction() , DEFAULT) && (elem['dir'] = '' , undefined);\n        break;\n      }\n\n  }\n}\n\nfunction $clinit_HasDirection$Direction(){\n  $clinit_HasDirection$Direction = nullMethod;\n  RTL = new HasDirection$Direction_0('RTL', 0);\n  LTR = new HasDirection$Direction_0('LTR', 1);\n  DEFAULT = new HasDirection$Direction_0('DEFAULT', 2);\n  $VALUES_4 = initValues(_3Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$HasDirection$Direction, [RTL, LTR, DEFAULT]);\n}\n\nfunction HasDirection$Direction_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_4(){\n  $clinit_HasDirection$Direction();\n  return $VALUES_4;\n}\n\nfunction HasDirection$Direction(){\n}\n\n_ = HasDirection$Direction_0.prototype = HasDirection$Direction.prototype = new Enum;\n_.getClass$ = function getClass_111(){\n  return Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasDirection$Direction, Q$Serializable, Q$Comparable, Q$Enum]);\nvar $VALUES_4, DEFAULT, LTR, RTL;\nfunction Array_1(){\n}\n\nfunction createFrom(array, length_0){\n  var a, result;\n  a = array;\n  result = createFromSeed(0, length_0);\n  initValues(a.arrayClass$, a.castableTypeMap$, a.queryId$, result);\n  return result;\n}\n\nfunction createFromSeed(seedType, length_0){\n  var array = new Array(length_0);\n  if (seedType == 3) {\n    for (var i = 0; i < length_0; ++i) {\n      var value = new Object;\n      value.l = value.m = value.h = 0;\n      array[i] = value;\n    }\n  }\n   else if (seedType > 0) {\n    var value = [null, 0, false][seedType];\n    for (var i = 0; i < length_0; ++i) {\n      array[i] = value;\n    }\n  }\n  return array;\n}\n\nfunction initDim(arrayClass, castableTypeMap, queryId, length_0, seedType){\n  var result;\n  result = createFromSeed(seedType, length_0);\n  initValues(arrayClass, castableTypeMap, queryId, result);\n  return result;\n}\n\nfunction initValues(arrayClass, castableTypeMap, queryId, array){\n  $clinit_Array$ExpandoWrapper();\n  wrapArray(array, expandoNames_0, expandoValues_0);\n  array.arrayClass$ = arrayClass;\n  array.castableTypeMap$ = castableTypeMap;\n  array.queryId$ = queryId;\n  return array;\n}\n\nfunction setCheck(array, index, value){\n  if (value != null) {\n    if (array.queryId$ > 0 && !canCastUnsafe(value, array.queryId$)) {\n      throw new ArrayStoreException_0;\n    }\n    if (array.queryId$ < 0 && (value.typeMarker$ == nullMethod || canCast(value, 1))) {\n      throw new ArrayStoreException_0;\n    }\n  }\n  return array[index] = value;\n}\n\nfunction Array_0(){\n}\n\n_ = Array_1.prototype = Array_0.prototype = new Object_0;\n_.getClass$ = function getClass_112(){\n  return this.arrayClass$;\n}\n;\n_.arrayClass$ = null;\n_.queryId$ = 0;\nfunction $clinit_Array$ExpandoWrapper(){\n  $clinit_Array$ExpandoWrapper = nullMethod;\n  expandoNames_0 = [];\n  expandoValues_0 = [];\n  initExpandos(new Array_1, expandoNames_0, expandoValues_0);\n}\n\nfunction initExpandos(protoType, expandoNames, expandoValues){\n  var i = 0, value;\n  for (var name_0 in protoType) {\n    if (value = protoType[name_0]) {\n      expandoNames[i] = name_0;\n      expandoValues[i] = value;\n      ++i;\n    }\n  }\n}\n\nfunction wrapArray(array, expandoNames, expandoValues){\n  $clinit_Array$ExpandoWrapper();\n  for (var i = 0, c = expandoNames.length; i < c; ++i) {\n    array[expandoNames[i]] = expandoValues[i];\n  }\n}\n\nvar expandoNames_0, expandoValues_0;\nfunction canCast(src, dstId){\n  return src.castableTypeMap$ && !!src.castableTypeMap$[dstId];\n}\n\nfunction canCastUnsafe(src, dstId){\n  return src.castableTypeMap$ && src.castableTypeMap$[dstId];\n}\n\nfunction dynamicCast(src, dstId){\n  if (src != null && !canCastUnsafe(src, dstId)) {\n    throw new ClassCastException_0;\n  }\n  return src;\n}\n\nfunction dynamicCastJso(src){\n  if (src != null && (src.typeMarker$ == nullMethod || canCast(src, 1))) {\n    throw new ClassCastException_0;\n  }\n  return src;\n}\n\nfunction instanceOf(src, dstId){\n  return src != null && canCast(src, dstId);\n}\n\nfunction instanceOfJso(src){\n  return src != null && src.typeMarker$ != nullMethod && !canCast(src, 1);\n}\n\nfunction isJavaObject(src){\n  return src.typeMarker$ == nullMethod || canCast(src, 1);\n}\n\nfunction maskUndefined(src){\n  return src == null?null:src;\n}\n\nfunction round_int(x){\n  return ~~Math.max(Math.min(x, 2147483647), -2147483648);\n}\n\nfunction throwClassCastExceptionUnlessNull(o){\n  if (o != null) {\n    throw new ClassCastException_0;\n  }\n  return null;\n}\n\nfunction init(){\n  var runtimeValue;\n  !!$stats && onModuleStart('com.google.gwt.user.client.UserAgentAsserter');\n  runtimeValue = $getRuntimeValue();\n  $equals('opera', runtimeValue) || ($wnd.alert('ERROR: Possible problem with your *.gwt.xml module file.\\nThe compile time user.agent value (opera) does not match the runtime user.agent value (' + runtimeValue + '). Expect more errors.\\n') , undefined);\n  !!$stats && onModuleStart('com.google.gwt.user.client.DocumentModeAsserter');\n  $onModuleLoad_0();\n  !!$stats && onModuleStart('com.allen_sauer.gwt.dnd.client.util.DragEntryPoint');\n  $wnd.$GWT_DND_VERSION = '3.1.2';\n  $clinit_StyleInjector();\n  toInjectAtStart.unshift('HTML{margin:0 !important;border:none !important;}.dragdrop-handle{cursor:move;user-select:none;-khtml-user-select:none;-moz-user-select:none;}.dragdrop-draggable{zoom:1;}.dragdrop-dragging{zoom:normal;}.dragdrop-positioner{border:1px dashed #1e90ff;margin:0 !important;zoom:1;z-index:100;}.dragdrop-flow-panel-positioner{color:#1e90ff;display:inline;text-align:center;vertical-align:middle;}.dragdrop-proxy{background-color:#7af;}.dragdrop-selected,.dragdrop-dragging,.dragdrop-proxy{filter:alpha(opacity\\\\=30);opacity:0.3;}.dragdrop-movable-panel{z-index:200;margin:0 !important;border:none !important;}');\n  schedule();\n  !!$stats && onModuleStart('com.google.gwt.logging.client.LogConfiguration');\n  $onModuleLoad($clinit_LogConfiguration());\n  !!$stats && onModuleStart('com.sciencegadgets.client.equationbrowser.EquationBrowserEntry');\n  new EquationBrowserEntryGadgetImpl_0;\n}\n\nfunction caught_0(e){\n  if (instanceOf(e, Q$Throwable)) {\n    return e;\n  }\n  return new JavaScriptException_0(e);\n}\n\nfunction create_0(value){\n  var a0, a1, a2;\n  a0 = value & 4194303;\n  a1 = value >> 22 & 4194303;\n  a2 = value < 0?1048575:0;\n  return create0(a0, a1, a2);\n}\n\nfunction create0(l_0, m_0, h_0){\n  return _ = new LongLibBase$LongEmul_0 , _.l = l_0 , _.m = m_0 , _.h = h_0 , _;\n}\n\nfunction toDoubleHelper(a){\n  return a.l + a.m * 4194304 + a.h * 17592186044416;\n}\n\nfunction eq(a, b){\n  return a.l == b.l && a.m == b.m && a.h == b.h;\n}\n\nfunction fromDouble(value){\n  var a0, a1, a2, negative, result, neg0, neg1, neg2;\n  if (isNaN(value)) {\n    return $clinit_LongLib$Const() , ZERO;\n  }\n  if (value < -9223372036854775808) {\n    return $clinit_LongLib$Const() , MIN_VALUE;\n  }\n  if (value >= 9223372036854775807) {\n    return $clinit_LongLib$Const() , MAX_VALUE;\n  }\n  negative = false;\n  if (value < 0) {\n    negative = true;\n    value = -value;\n  }\n  a2 = 0;\n  if (value >= 17592186044416) {\n    a2 = round_int(value / 17592186044416);\n    value -= a2 * 17592186044416;\n  }\n  a1 = 0;\n  if (value >= 4194304) {\n    a1 = round_int(value / 4194304);\n    value -= a1 * 4194304;\n  }\n  a0 = round_int(value);\n  result = create0(a0, a1, a2);\n  negative && (neg0 = ~result.l + 1 & 4194303 , neg1 = ~result.m + (neg0 == 0?1:0) & 4194303 , neg2 = ~result.h + (neg0 == 0 && neg1 == 0?1:0) & 1048575 , result.l = neg0 , result.m = neg1 , result.h = neg2 , undefined);\n  return result;\n}\n\nfunction fromInt(value){\n  var rebase, result;\n  if (value > -129 && value < 128) {\n    rebase = value + 128;\n    boxedValues == null && (boxedValues = initDim(_3Lcom_google_gwt_lang_LongLibBase$LongEmul_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$LongLibBase$LongEmul, 256, 0));\n    result = boxedValues[rebase];\n    !result && (result = boxedValues[rebase] = create_0(value));\n    return result;\n  }\n  return create_0(value);\n}\n\nfunction gte(a, b){\n  var signa, signb;\n  signa = a.h >> 19;\n  signb = b.h >> 19;\n  return signa == 0?signb != 0 || a.h > b.h || a.h == b.h && a.m > b.m || a.h == b.h && a.m == b.m && a.l >= b.l:!(signb == 0 || a.h < b.h || a.h == b.h && a.m < b.m || a.h == b.h && a.m == b.m && a.l < b.l);\n}\n\nfunction lt(a, b){\n  return !gte(a, b);\n}\n\nfunction shru(a, n){\n  var a2, res0, res1, res2;\n  n &= 63;\n  a2 = a.h & 1048575;\n  if (n < 22) {\n    res2 = a2 >>> n;\n    res1 = a.m >> n | a2 << 22 - n;\n    res0 = a.l >> n | a.m << 22 - n;\n  }\n   else if (n < 44) {\n    res2 = 0;\n    res1 = a2 >>> n - 22;\n    res0 = a.m >> n - 22 | a.h << 44 - n;\n  }\n   else {\n    res2 = 0;\n    res1 = 0;\n    res0 = a2 >>> n - 44;\n  }\n  return create0(res0 & 4194303, res1 & 4194303, res2 & 1048575);\n}\n\nfunction sub(a, b){\n  var sum0, sum1, sum2;\n  sum0 = a.l - b.l;\n  sum1 = a.m - b.m + (sum0 >> 22);\n  sum2 = a.h - b.h + (sum1 >> 22);\n  return create0(sum0 & 4194303, sum1 & 4194303, sum2 & 1048575);\n}\n\nfunction toDouble(a){\n  var neg0, neg1, neg2;\n  if (eq(a, ($clinit_LongLib$Const() , MIN_VALUE))) {\n    return -9223372036854775808;\n  }\n  if (!gte(a, ZERO)) {\n    return -toDoubleHelper((neg0 = ~a.l + 1 & 4194303 , neg1 = ~a.m + (neg0 == 0?1:0) & 4194303 , neg2 = ~a.h + (neg0 == 0 && neg1 == 0?1:0) & 1048575 , create0(neg0, neg1, neg2)));\n  }\n  return a.l + a.m * 4194304 + a.h * 17592186044416;\n}\n\nfunction toInt(a){\n  return a.l | a.m << 22;\n}\n\nfunction xor(a, b){\n  return create0(a.l ^ b.l, a.m ^ b.m, a.h ^ b.h);\n}\n\nvar boxedValues = null;\nfunction $clinit_LongLib$Const(){\n  $clinit_LongLib$Const = nullMethod;\n  MAX_VALUE = create0(4194303, 4194303, 524287);\n  MIN_VALUE = create0(0, 0, 524288);\n  fromInt(1);\n  fromInt(2);\n  ZERO = fromInt(0);\n}\n\nvar MAX_VALUE, MIN_VALUE, ZERO;\nfunction LongLibBase$LongEmul_0(){\n}\n\nfunction LongLibBase$LongEmul(){\n}\n\n_ = LongLibBase$LongEmul_0.prototype = LongLibBase$LongEmul.prototype = new Object_0;\n_.getClass$ = function getClass_113(){\n  return Lcom_google_gwt_lang_LongLibBase$LongEmul_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$LongLibBase$LongEmul]);\nfunction onModuleStart(mainClassName){\n  return $stats({moduleName:$moduleName, sessionId:$sessionId, subSystem:'startup', evtGroup:'moduleStartup', millis:(new Date).getTime(), type:'onModuleLoadStart', className:mainClassName});\n}\n\nfunction $getLevel(this$static){\n  if (this$static.level) {\n    return this$static.level;\n  }\n  return $clinit_Level() , ALL_0;\n}\n\nfunction $setFormatter(this$static, newFormatter){\n  this$static.formatter = newFormatter;\n}\n\nfunction $setLevel(this$static, newLevel){\n  this$static.level = newLevel;\n}\n\nfunction Handler(){\n}\n\n_ = Handler.prototype = new Object_0;\n_.getClass$ = function getClass_114(){\n  return Ljava_util_logging_Handler_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Handler]);\n_.formatter = null;\n_.level = null;\nfunction ConsoleLogHandler_0(){\n  $setFormatter(this, new TextLogFormatter_0(true));\n  $setLevel(this, ($clinit_Level() , ALL_0));\n}\n\nfunction ConsoleLogHandler(){\n}\n\n_ = ConsoleLogHandler_0.prototype = ConsoleLogHandler.prototype = new Handler;\n_.getClass$ = function getClass_115(){\n  return Lcom_google_gwt_logging_client_ConsoleLogHandler_2_classLit;\n}\n;\n_.publish = function publish(record){\n  var msg;\n  if (!(window.console != null && window.console.firebug == null && window.console.log != null && typeof window.console.log == 'function') || $getLevel(this).impl.value_0 > record.level.impl.value_0) {\n    return;\n  }\n  msg = this.formatter.format(record);\n  window.console.log(msg);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Handler]);\nfunction DevelopmentModeLogHandler_0(){\n  $setFormatter(this, new TextLogFormatter_0(false));\n  $setLevel(this, ($clinit_Level() , ALL_0));\n}\n\nfunction DevelopmentModeLogHandler(){\n}\n\n_ = DevelopmentModeLogHandler_0.prototype = DevelopmentModeLogHandler.prototype = new Handler;\n_.getClass$ = function getClass_116(){\n  return Lcom_google_gwt_logging_client_DevelopmentModeLogHandler_2_classLit;\n}\n;\n_.publish = function publish_0(record){\n  return;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Handler]);\nfunction FirebugLogHandler_0(){\n  $setFormatter(this, new TextLogFormatter_0(true));\n  $setLevel(this, ($clinit_Level() , ALL_0));\n}\n\nfunction FirebugLogHandler(){\n}\n\n_ = FirebugLogHandler_0.prototype = FirebugLogHandler.prototype = new Handler;\n_.getClass$ = function getClass_117(){\n  return Lcom_google_gwt_logging_client_FirebugLogHandler_2_classLit;\n}\n;\n_.publish = function publish_1(record){\n  var msg, val;\n  if (!(window.console && window.console.firebug) || $getLevel(this).impl.value_0 > record.level.impl.value_0) {\n    return;\n  }\n  msg = this.formatter.format(record);\n  val = record.level.impl.value_0;\n  val <= ($clinit_Level() , FINE_0).impl.value_0?(window.console.debug(msg) , undefined):val < WARNING_0.impl.value_0?(window.console.info(msg) , undefined):val < SEVERE_0.impl.value_0?(window.console.warn(msg) , undefined):(window.console.error(msg) , undefined);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Handler]);\nfunction HasWidgetsLogHandler_0(container){\n  this.widgetContainer = container;\n  $setFormatter(this, new HtmlLogFormatter_0);\n  $setLevel(this, ($clinit_Level() , ALL_0));\n}\n\nfunction HasWidgetsLogHandler(){\n}\n\n_ = HasWidgetsLogHandler_0.prototype = HasWidgetsLogHandler.prototype = new Handler;\n_.getClass$ = function getClass_118(){\n  return Lcom_google_gwt_logging_client_HasWidgetsLogHandler_2_classLit;\n}\n;\n_.publish = function publish_2(record){\n  var formatter, msg;\n  if ($getLevel(this).impl.value_0 > record.level.impl.value_0) {\n    return;\n  }\n  formatter = this.formatter;\n  msg = formatter.format(record);\n  instanceOf(formatter, Q$HtmlLogFormatter)?$add(this.widgetContainer, new HTML_1(msg)):$add(this.widgetContainer, new Label_0(msg));\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Handler]);\n_.widgetContainer = null;\nfunction Formatter(){\n}\n\n_ = Formatter.prototype = new Object_0;\n_.getClass$ = function getClass_119(){\n  return Ljava_util_logging_Formatter_2_classLit;\n}\n;\nfunction $getRecordInfo(event_0, newline){\n  var date, s;\n  date = new Date_2(event_0.millis);\n  s = new StringBuilder_0;\n  $append_1(s, $toString_2(date));\n  s.impl.string += ' ';\n  $append_1(s, event_0.loggerName);\n  $append(s.impl, newline);\n  $append_1(s, event_0.level.impl.name_0);\n  s.impl.string += ': ';\n  return s.impl.string;\n}\n\nfunction $getStackTraceAsString(e, newline, indent){\n  var causedBy, currentCause, i, s, seenCauses, stackElems;\n  if (!e) {\n    return '';\n  }\n  s = new StringBuffer_1(newline);\n  currentCause = e;\n  causedBy = '';\n  seenCauses = new HashSet_0;\n  while (!!currentCause && !$containsKey(seenCauses.map, currentCause)) {\n    $add_11(seenCauses, currentCause);\n    $append(s.impl, causedBy);\n    causedBy = newline + 'Caused by: ';\n    $append_0(s, currentCause.getClass$().typeName);\n    $append_0(s, ': ' + currentCause.getMessage());\n    stackElems = $getStackTrace(currentCause);\n    if (stackElems != null) {\n      for (i = 0; i < stackElems.length; ++i) {\n        $append(s.impl, newline + indent + 'at ');\n        $append_0(s, $toString_0(stackElems[i]));\n      }\n    }\n    currentCause = currentCause.cause;\n  }\n  return s.impl.string;\n}\n\nfunction FormatterImpl(){\n}\n\n_ = FormatterImpl.prototype = new Formatter;\n_.getClass$ = function getClass_120(){\n  return Lcom_google_gwt_logging_impl_FormatterImpl_2_classLit;\n}\n;\nfunction $getColor(logLevel){\n  if (logLevel == ($clinit_Level() , OFF_0).impl.value_0) {\n    return '#000';\n  }\n  if (logLevel >= SEVERE_0.impl.value_0) {\n    return '#F00';\n  }\n  if (logLevel >= WARNING_0.impl.value_0) {\n    return '#E56717';\n  }\n  if (logLevel >= INFO_0.impl.value_0) {\n    return '#20b000';\n  }\n  if (logLevel >= CONFIG_0.impl.value_0) {\n    return '#2B60DE';\n  }\n  if (logLevel >= FINE_0.impl.value_0) {\n    return '#F0F';\n  }\n  if (logLevel >= FINER_0.impl.value_0) {\n    return '#F0F';\n  }\n  if (logLevel >= FINEST_0.impl.value_0) {\n    return '#F0F';\n  }\n  return '#000';\n}\n\nfunction $getEscaped(text){\n  text = $replaceAll(text, '<', '&lt;');\n  text = $replaceAll(text, '>', '&gt;');\n  text = $replaceAll(text, '__GWT_LOG_FORMATTER_BR__', '<br>');\n  return text;\n}\n\nfunction $getHtmlPrefix(event_0){\n  var prefix;\n  prefix = new StringBuilder_0;\n  prefix.impl.string += \"<span style='color:\";\n  $append_1(prefix, $getColor(event_0.level.impl.value_0));\n  prefix.impl.string += \"'>\";\n  prefix.impl.string += '<code>';\n  return prefix.impl.string;\n}\n\nfunction HtmlLogFormatter_0(){\n  this.showStackTraces = true;\n}\n\nfunction HtmlLogFormatter(){\n}\n\n_ = HtmlLogFormatter_0.prototype = HtmlLogFormatter.prototype = new FormatterImpl;\n_.format = function format(event_0){\n  var html;\n  html = new StringBuilder_1($getHtmlPrefix(event_0));\n  $append_1(html, $getHtmlPrefix(event_0));\n  $append_1(html, $getRecordInfo(event_0, ' '));\n  $append_1(html, $getEscaped(event_0.msg));\n  this.showStackTraces && $append_1(html, $getEscaped($getStackTraceAsString(event_0.thrown, '__GWT_LOG_FORMATTER_BR__', '&nbsp;&nbsp;&nbsp;')));\n  html.impl.string += '<\\/code><\\/span>';\n  return html.impl.string;\n}\n;\n_.getClass$ = function getClass_121(){\n  return Lcom_google_gwt_logging_client_HtmlLogFormatter_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HtmlLogFormatter]);\n_.showStackTraces = false;\nfunction $clinit_LogConfiguration(){\n  $clinit_LogConfiguration = nullMethod;\n  impl_2 = new LogConfiguration$LogConfigurationImplRegular_0;\n}\n\nfunction $onModuleLoad(){\n  var log;\n  $configureClientSideLogging(impl_2);\n  if (!sUncaughtExceptionHandler) {\n    log = ($clinit_Logger() , $getLoggerHelper(Lcom_google_gwt_logging_client_LogConfiguration_2_classLit.typeName));\n    setUncaughtExceptionHandler(new LogConfiguration$1_0(log));\n  }\n}\n\nvar impl_2;\nfunction $onUncaughtException(this$static, e){\n  $log_1(this$static.val$log, ($clinit_Level() , SEVERE_0), e.getMessage(), e);\n}\n\nfunction LogConfiguration$1_0(val$log){\n  this.val$log = val$log;\n}\n\nfunction LogConfiguration$1(){\n}\n\n_ = LogConfiguration$1_0.prototype = LogConfiguration$1.prototype = new Object_0;\n_.getClass$ = function getClass_122(){\n  return Lcom_google_gwt_logging_client_LogConfiguration$1_2_classLit;\n}\n;\n_.val$log = null;\nfunction $addHandlerIfNotNull(l_0, h_0){\n  $addHandler_1(l_0.impl, h_0);\n}\n\nfunction $configureClientSideLogging(this$static){\n  this$static.root = ($clinit_Logger() , $getLoggerHelper(''));\n  this$static.root.impl.useParentHandlers = false;\n  $setLevels(this$static.root);\n  $setDefaultHandlers(this$static.root);\n}\n\nfunction $parseLevel(s){\n  if (s == null) {\n    return null;\n  }\n  if ($equals(s, ($clinit_Level() , OFF_0).impl.name_0)) {\n    return OFF_0;\n  }\n   else if ($equals(s, SEVERE_0.impl.name_0)) {\n    return SEVERE_0;\n  }\n   else if ($equals(s, WARNING_0.impl.name_0)) {\n    return WARNING_0;\n  }\n   else if ($equals(s, INFO_0.impl.name_0)) {\n    return INFO_0;\n  }\n   else if ($equals(s, CONFIG_0.impl.name_0)) {\n    return CONFIG_0;\n  }\n   else if ($equals(s, FINE_0.impl.name_0)) {\n    return FINE_0;\n  }\n   else if ($equals(s, FINER_0.impl.name_0)) {\n    return FINER_0;\n  }\n   else if ($equals(s, FINEST_0.impl.name_0)) {\n    return FINEST_0;\n  }\n   else if ($equals(s, ALL_0.impl.name_0)) {\n    return ALL_0;\n  }\n  return null;\n}\n\nfunction $setDefaultHandlers(l_0){\n  var console, dev, firebug, loggingWidget, remote, system;\n  console = new ConsoleLogHandler_0;\n  $addHandler_1(l_0.impl, console);\n  dev = new DevelopmentModeLogHandler_0;\n  $addHandler_1(l_0.impl, dev);\n  firebug = new FirebugLogHandler_0;\n  $addHandler_1(l_0.impl, firebug);\n  system = new SystemLogHandler_0;\n  $addHandler_1(l_0.impl, system);\n  remote = new NullLogHandler_0;\n  !!remote || $addHandler_1(l_0.impl, null);\n  loggingWidget = new LoggingPopup_0;\n  $addHandlerIfNotNull(l_0, new HasWidgetsLogHandler_0(loggingWidget));\n}\n\nfunction $setLevels(l_0){\n  var paramLevel;\n  paramLevel = $parseLevel((ensureParameterMap() , dynamicCast($get_0(paramMap, 'logLevel'), Q$String)));\n  paramLevel?$setLevel_0(l_0.impl, paramLevel):$setLevel_1(l_0, ($clinit_Level() , INFO_0));\n}\n\nfunction LogConfiguration$LogConfigurationImplRegular_0(){\n}\n\nfunction LogConfiguration$LogConfigurationImplRegular(){\n}\n\n_ = LogConfiguration$LogConfigurationImplRegular_0.prototype = LogConfiguration$LogConfigurationImplRegular.prototype = new Object_0;\n_.getClass$ = function getClass_123(){\n  return Lcom_google_gwt_logging_client_LogConfiguration$LogConfigurationImplRegular_2_classLit;\n}\n;\n_.root = null;\nfunction $addStyleName(this$static, style){\n  setStyleName(this$static.getStyleElement(), style, true);\n}\n\nfunction $removeStyleName(this$static, style){\n  setStyleName(this$static.getStyleElement(), style, false);\n}\n\nfunction $setElement(this$static, elem){\n  this$static.element_0 = elem;\n}\n\nfunction $setHeight(this$static, height){\n  setStyleAttribute(this$static.element_0, 'height', height);\n}\n\nfunction $setPixelSize(this$static, width, height){\n  width >= 0 && this$static.setWidth(width + 'px');\n  height >= 0 && this$static.setHeight(height + 'px');\n}\n\nfunction $setSize(this$static){\n  this$static.element_0.style['width'] = '50em';\n  this$static.element_0.style['height'] = '10em';\n}\n\nfunction $setStyleName(this$static, style, add){\n  setStyleName(this$static.getStyleElement(), style, add);\n}\n\nfunction $setStyleName_0(this$static, style){\n  this$static.getStyleElement()['className'] = style;\n}\n\nfunction $setVisible(this$static, visible){\n  setVisible(this$static.element_0, visible);\n}\n\nfunction $setWidth(this$static, width){\n  setStyleAttribute(this$static.element_0, 'width', width);\n}\n\nfunction $sinkBitlessEvent(this$static, eventTypeName){\n  sinkBitlessEvent(this$static.element_0, eventTypeName);\n}\n\nfunction $toString(this$static){\n  if (!this$static.element_0) {\n    return '(null handle)';\n  }\n  return this$static.element_0.outerHTML;\n}\n\nfunction setStyleName(elem, style, add){\n  if (!elem) {\n    throw new RuntimeException_0('Null widget handle. If you are creating a composite, ensure that initWidget() has been called.');\n  }\n  style = $trim(style);\n  if (style.length == 0) {\n    throw new IllegalArgumentException_0('Style names cannot be empty');\n  }\n  add?$addClassName(elem, style):$removeClassName(elem, style);\n}\n\nfunction setStylePrimaryName(elem, style){\n  if (!elem) {\n    throw new RuntimeException_0('Null widget handle. If you are creating a composite, ensure that initWidget() has been called.');\n  }\n  style = $trim(style);\n  if (style.length == 0) {\n    throw new IllegalArgumentException_0('Style names cannot be empty');\n  }\n  updatePrimaryAndDependentStyleNames(elem, style);\n}\n\nfunction setVisible(elem, visible){\n  elem.style.display = visible?'':'none';\n}\n\nfunction updatePrimaryAndDependentStyleNames(elem, newPrimaryStyle){\n  var classes = elem.className.split(/\\s+/);\n  if (!classes) {\n    return;\n  }\n  var oldPrimaryStyle = classes[0];\n  var oldPrimaryStyleLen = oldPrimaryStyle.length;\n  classes[0] = newPrimaryStyle;\n  for (var i = 1, n = classes.length; i < n; i++) {\n    var name_0 = classes[i];\n    name_0.length > oldPrimaryStyleLen && name_0.charAt(oldPrimaryStyleLen) == '-' && name_0.indexOf(oldPrimaryStyle) == 0 && (classes[i] = newPrimaryStyle + name_0.substring(oldPrimaryStyleLen));\n  }\n  elem.className = classes.join(' ');\n}\n\nfunction UIObject(){\n}\n\n_ = UIObject.prototype = new Object_0;\n_.getClass$ = function getClass_124(){\n  return Lcom_google_gwt_user_client_ui_UIObject_2_classLit;\n}\n;\n_.getOffsetHeight = function getOffsetHeight(){\n  return $getPropertyInt(this.element_0, 'offsetHeight');\n}\n;\n_.getOffsetWidth = function getOffsetWidth(){\n  return $getPropertyInt(this.element_0, 'offsetWidth');\n}\n;\n_.getStyleElement = function getStyleElement(){\n  return this.element_0;\n}\n;\n_.setHeight = function setHeight(height){\n  $setHeight(this, height);\n}\n;\n_.setPixelSize = function setPixelSize(width, height){\n  $setPixelSize(this, width, height);\n}\n;\n_.setStyleName = function setStyleName_0(style){\n  $setStyleName_0(this, style);\n}\n;\n_.setWidth = function setWidth(width){\n  $setWidth(this, width);\n}\n;\n_.toString$ = function toString_8(){\n  return $toString(this);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasVisibility, Q$UIObject]);\n_.element_0 = null;\nfunction $addDomHandler(this$static, handler, type){\n  var typeInt;\n  typeInt = $eventGetTypeInt(type.name_0);\n  typeInt == -1?$sinkBitlessEvent(this$static, type.name_0):this$static.sinkEvents(typeInt);\n  return $addHandler(!this$static.handlerManager?(this$static.handlerManager = new HandlerManager_0(this$static)):this$static.handlerManager, type, handler);\n}\n\nfunction $addHandler_0(this$static, handler, type){\n  return $addHandler(!this$static.handlerManager?(this$static.handlerManager = new HandlerManager_0(this$static)):this$static.handlerManager, type, handler);\n}\n\nfunction $fireEvent_0(this$static, event_0){\n  !!this$static.handlerManager && $fireEvent(this$static.handlerManager, event_0);\n}\n\nfunction $onAttach(this$static){\n  var bitsToAdd;\n  if (this$static.attached) {\n    throw new IllegalStateException_1(\"Should only call onAttach when the widget is detached from the browser's document\");\n  }\n  this$static.attached = true;\n  $setEventListener(this$static.element_0, this$static);\n  bitsToAdd = this$static.eventsToSink;\n  this$static.eventsToSink = -1;\n  bitsToAdd > 0 && this$static.sinkEvents(bitsToAdd);\n  this$static.doAttachChildren();\n  this$static.onLoad();\n  fire_0(this$static, true);\n}\n\nfunction $onBrowserEvent(this$static, event_0){\n  var related;\n  switch ($eventGetTypeInt(event_0.type)) {\n    case 16:\n    case 32:\n      related = event_0.relatedTarget;\n      if (!!related && $isOrHasChild(this$static.element_0, related)) {\n        return;\n      }\n\n  }\n  fireNativeEvent(event_0, this$static, this$static.element_0);\n}\n\nfunction $onDetach(this$static){\n  if (!this$static.attached) {\n    throw new IllegalStateException_1(\"Should only call onDetach when the widget is attached to the browser's document\");\n  }\n  try {\n    this$static.onUnload();\n    fire_0(this$static, false);\n  }\n   finally {\n    try {\n      this$static.doDetachChildren();\n    }\n     finally {\n      this$static.element_0.__listener = null;\n      this$static.attached = false;\n    }\n  }\n}\n\nfunction $removeFromParent(this$static){\n  if (!this$static.parent_1) {\n    ($clinit_RootPanel() , $contains_0(widgetsToDetach, this$static)) && detachNow(this$static);\n  }\n   else if (this$static.parent_1) {\n    this$static.parent_1.remove(this$static);\n  }\n   else if (this$static.parent_1) {\n    throw new IllegalStateException_1(\"This widget's parent does not implement HasWidgets\");\n  }\n}\n\nfunction $setParent(this$static, parent_0){\n  var oldParent;\n  oldParent = this$static.parent_1;\n  if (!parent_0) {\n    try {\n      !!oldParent && oldParent.attached && this$static.onDetach();\n    }\n     finally {\n      this$static.parent_1 = null;\n    }\n  }\n   else {\n    if (oldParent) {\n      throw new IllegalStateException_1('Cannot set a new parent without first clearing the old parent');\n    }\n    this$static.parent_1 = parent_0;\n    parent_0.attached && this$static.onAttach();\n  }\n}\n\nfunction Widget(){\n}\n\n_ = Widget.prototype = new UIObject;\n_.doAttachChildren = function doAttachChildren(){\n}\n;\n_.doDetachChildren = function doDetachChildren(){\n}\n;\n_.fireEvent = function fireEvent_0(event_0){\n  $fireEvent_0(this, event_0);\n}\n;\n_.getClass$ = function getClass_125(){\n  return Lcom_google_gwt_user_client_ui_Widget_2_classLit;\n}\n;\n_.getParent = function getParent(){\n  return this.parent_1;\n}\n;\n_.onAttach = function onAttach(){\n  $onAttach(this);\n}\n;\n_.onBrowserEvent = function onBrowserEvent(event_0){\n  $onBrowserEvent(this, event_0);\n}\n;\n_.onDetach = function onDetach(){\n  $onDetach(this);\n}\n;\n_.onLoad = function onLoad(){\n}\n;\n_.onUnload = function onUnload(){\n}\n;\n_.sinkEvents = function sinkEvents(eventBitsToAdd){\n  this.eventsToSink == -1?sinkEvents_0(this.element_0, eventBitsToAdd | (this.element_0.__eventBits || 0)):(this.eventsToSink |= eventBitsToAdd);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]);\n_.attached = false;\n_.eventsToSink = 0;\n_.handlerManager = null;\n_.parent_1 = null;\nfunction $clear(this$static){\n  var it;\n  it = new WidgetCollection$WidgetIterator_0(this$static.children);\n  while (it.index_0 < it.this$0.size - 1) {\n    $next_2(it);\n    $remove_6(it);\n  }\n}\n\nfunction Panel(){\n}\n\n_ = Panel.prototype = new Widget;\n_.doAttachChildren = function doAttachChildren_0(){\n  tryCommand(this, ($clinit_AttachDetachException() , attachCommand));\n}\n;\n_.doDetachChildren = function doDetachChildren_0(){\n  tryCommand(this, ($clinit_AttachDetachException() , detachCommand));\n}\n;\n_.getClass$ = function getClass_126(){\n  return Lcom_google_gwt_user_client_ui_Panel_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]);\nfunction $remove(this$static, w){\n  if (this$static.widget != w) {\n    return false;\n  }\n  try {\n    $setParent(w, null);\n  }\n   finally {\n    $removeChild(this$static.getContainerElement(), w.element_0);\n    this$static.widget = null;\n  }\n  return true;\n}\n\nfunction $setWidget(this$static, w){\n  if (w == this$static.widget) {\n    return;\n  }\n  !!w && $removeFromParent(w);\n  !!this$static.widget && $remove(this$static, this$static.widget);\n  this$static.widget = w;\n  if (w) {\n    $appendChild(this$static.getContainerElement(), $resolve(this$static.widget.element_0));\n    $setParent(w, this$static);\n  }\n}\n\nfunction SimplePanel_0(){\n  SimplePanel_1.call(this, $doc.createElement('div'));\n}\n\nfunction SimplePanel_1(elem){\n  this.element_0 = elem;\n}\n\nfunction SimplePanel(){\n}\n\n_ = SimplePanel_0.prototype = SimplePanel.prototype = new Panel;\n_.getClass$ = function getClass_127(){\n  return Lcom_google_gwt_user_client_ui_SimplePanel_2_classLit;\n}\n;\n_.getContainerElement = function getContainerElement(){\n  return this.element_0;\n}\n;\n_.iterator_0 = function iterator_0(){\n  return new SimplePanel$1_0(this);\n}\n;\n_.remove = function remove(w){\n  return $remove(this, w);\n}\n;\n_.setWidget = function setWidget(w){\n  $setWidget(this, w);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$SimplePanel, Q$UIObject, Q$Widget]);\n_.widget = null;\nfunction $eventTargetsPopup(this$static, event_0){\n  var target;\n  target = event_0.target;\n  if (is_0(target)) {\n    return $isOrHasChild(this$static.element_0, target);\n  }\n  return false;\n}\n\nfunction $hide(this$static){\n  if (!this$static.showing) {\n    return;\n  }\n  $setState(this$static.resizeAnimation, false, false);\n  fire_1(this$static);\n}\n\nfunction $maybeUpdateSize(this$static){\n  var w;\n  w = this$static.widget;\n  if (w) {\n    this$static.desiredHeight != null && w.setHeight(this$static.desiredHeight);\n    this$static.desiredWidth != null && w.setWidth(this$static.desiredWidth);\n  }\n}\n\nfunction $previewNativeEvent(this$static, event_0){\n  var eventTargetsPopupOrPartner, nativeEvent, target, type;\n  if (event_0.isCanceled || !this$static.previewAllNativeEvents && event_0.isConsumed) {\n    this$static.modal && (event_0.isCanceled = true);\n    return;\n  }\n  event_0.isFirstHandler && (event_0.nativeEvent , false) && (event_0.isCanceled = true);\n  if (event_0.isCanceled) {\n    return;\n  }\n  nativeEvent = event_0.nativeEvent;\n  eventTargetsPopupOrPartner = $eventTargetsPopup(this$static, nativeEvent);\n  eventTargetsPopupOrPartner && (event_0.isConsumed = true);\n  this$static.modal && (event_0.isCanceled = true);\n  type = $eventGetTypeInt(nativeEvent.type);\n  switch (type) {\n    case 512:\n    case 256:\n    case 128:\n      {\n        return;\n      }\n\n    case 4:\n      if (sCaptureElem) {\n        event_0.isConsumed = true;\n        return;\n      }\n\n      if (!eventTargetsPopupOrPartner && this$static.autoHide) {\n        $hide(this$static);\n        return;\n      }\n\n      break;\n    case 8:\n    case 64:\n    case 1:\n    case 2:\n      {\n        if (sCaptureElem) {\n          event_0.isConsumed = true;\n          return;\n        }\n        break;\n      }\n\n    case 2048:\n      {\n        target = nativeEvent.target;\n        if (this$static.modal && !eventTargetsPopupOrPartner && !!target) {\n          target.blur && target != $doc.body && target.blur();\n          event_0.isCanceled = true;\n          return;\n        }\n        break;\n      }\n\n  }\n}\n\nfunction $setPopupPosition(this$static, left, top_0){\n  var elem;\n  this$static.leftPosition = left;\n  this$static.topPosition = top_0;\n  left -= 0;\n  top_0 -= 0;\n  elem = this$static.element_0;\n  elem.style['left'] = left + ($clinit_Style$Unit() , 'px');\n  elem.style['top'] = top_0 + 'px';\n}\n\nfunction $show(this$static){\n  if (this$static.showing) {\n    return;\n  }\n   else \n    this$static.attached && $removeFromParent(this$static);\n  $setState(this$static.resizeAnimation, true, false);\n}\n\nfunction $updateHandlers(this$static){\n  if (this$static.nativePreviewHandlerRegistration) {\n    $removeHandler(this$static.nativePreviewHandlerRegistration.real);\n    this$static.nativePreviewHandlerRegistration = null;\n  }\n  if (this$static.historyHandlerRegistration) {\n    $removeHandler(this$static.historyHandlerRegistration.real);\n    this$static.historyHandlerRegistration = null;\n  }\n  if (this$static.showing) {\n    this$static.nativePreviewHandlerRegistration = addNativePreviewHandler(new PopupPanel$3_0(this$static));\n    this$static.historyHandlerRegistration = addValueChangeHandler(new PopupPanel$4_0(this$static));\n  }\n}\n\nfunction PopupPanel(){\n}\n\n_ = PopupPanel.prototype = new SimplePanel;\n_.getClass$ = function getClass_128(){\n  return Lcom_google_gwt_user_client_ui_PopupPanel_2_classLit;\n}\n;\n_.getContainerElement = function getContainerElement_0(){\n  return $getFirstChildElement(this.element_0);\n}\n;\n_.getOffsetHeight = function getOffsetHeight_0(){\n  return $getPropertyInt(this.element_0, 'offsetHeight');\n}\n;\n_.getOffsetWidth = function getOffsetWidth_0(){\n  return $getPropertyInt(this.element_0, 'offsetWidth');\n}\n;\n_.getStyleElement = function getStyleElement_0(){\n  return $getParentElement($getFirstChildElement(this.element_0));\n}\n;\n_.onUnload = function onUnload_0(){\n  this.showing && $setState(this.resizeAnimation, false, true);\n}\n;\n_.setHeight = function setHeight_0(height){\n  this.desiredHeight = height;\n  $maybeUpdateSize(this);\n  height.length == 0 && (this.desiredHeight = null);\n}\n;\n_.setWidget = function setWidget_0(w){\n  $setWidget(this, w);\n  $maybeUpdateSize(this);\n}\n;\n_.setWidth = function setWidth_0(width){\n  this.desiredWidth = width;\n  $maybeUpdateSize(this);\n  width.length == 0 && (this.desiredWidth = null);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$SimplePanel, Q$UIObject, Q$Widget]);\n_.autoHide = false;\n_.autoHideOnHistoryEvents = false;\n_.desiredHeight = null;\n_.desiredWidth = null;\n_.glass = null;\n_.historyHandlerRegistration = null;\n_.isGlassEnabled = false;\n_.leftPosition = -1;\n_.modal = false;\n_.nativePreviewHandlerRegistration = null;\n_.previewAllNativeEvents = false;\n_.showing = false;\n_.topPosition = -1;\nfunction $add(this$static, w){\n  $add_4(this$static.logArea, w);\n  $setScrollPosition(this$static.scrollPanel, this$static.scrollPanel.element_0.scrollHeight || 0);\n}\n\nfunction LoggingPopup_0(){\n  var bottomBar, mainPanel, maxmin, titleBar;\n  SimplePanel_0.call(this);\n  this.glassResizer = new PopupPanel$1_0;\n  this.resizeAnimation = new PopupPanel$ResizeAnimation_0(this);\n  $appendChild(this.element_0, $doc.createElement('div'));\n  $setPopupPosition(this, 0, 0);\n  $getParentElement($getFirstChildElement(this.element_0))['className'] = 'gwt-PopupPanel';\n  $getFirstChildElement(this.element_0)['className'] = 'popupContent';\n  this.autoHide = false;\n  this.autoHideOnHistoryEvents = false;\n  this.modal = false;\n  mainPanel = new VerticalPanel_0;\n  mainPanel.table['border'] = '1';\n  mainPanel.element_0.style['backgroundColor'] = 'white';\n  titleBar = new HTML_1('<center><b>Logging<\\/b><\\/center>');\n  $add_4(mainPanel, titleBar);\n  new LoggingPopup$WindowMoveHandler_0(this, titleBar);\n  this.scrollPanel = new LoggingPopup$ScrollPanelWithMinSize_0;\n  $add_4(mainPanel, this.scrollPanel);\n  this.logArea = new VerticalPanel_0;\n  $setWidget(this.scrollPanel, this.logArea);\n  $setPixelSize_0(this.scrollPanel, 300, 200);\n  bottomBar = new HorizontalPanel_0;\n  $add_4(mainPanel, bottomBar);\n  bottomBar.element_0.style['width'] = '100%';\n  $setVerticalAlignment(bottomBar, ($clinit_HasVerticalAlignment() , ALIGN_BOTTOM));\n  maxmin = new Button_0;\n  $add_3(bottomBar, maxmin);\n  $addDomHandler(maxmin, new LoggingPopup$1_0(this, maxmin), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE));\n  this.resizeIcon = new HTML_1(\"<div style='font-size:200%; line-height:75%'>\\u21F2<\\/div>\");\n  $setAutoHorizontalAlignment(this.resizeIcon, ($clinit_HasHorizontalAlignment() , ALIGN_RIGHT));\n  $add_3(bottomBar, this.resizeIcon);\n  new LoggingPopup$WindowResizeHandler_0(this, this.resizeIcon);\n  $setWidget(this, mainPanel);\n  $maybeUpdateSize(this);\n  $show(this);\n}\n\nfunction LoggingPopup(){\n}\n\n_ = LoggingPopup_0.prototype = LoggingPopup.prototype = new PopupPanel;\n_.getClass$ = function getClass_129(){\n  return Lcom_google_gwt_logging_client_LoggingPopup_2_classLit;\n}\n;\n_.setWidget = function setWidget_1(w){\n  $clear(this.logArea);\n  $add_4(this.logArea, w);\n  $setScrollPosition(this.scrollPanel, this.scrollPanel.element_0.scrollHeight || 0);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$SimplePanel, Q$UIObject, Q$Widget]);\n_.logArea = null;\n_.resizeIcon = null;\n_.scrollPanel = null;\nfunction LoggingPopup$1_0(this$0, val$maxmin){\n  this.this$0 = this$0;\n  this.val$maxmin = val$maxmin;\n}\n\nfunction LoggingPopup$1(){\n}\n\n_ = LoggingPopup$1_0.prototype = LoggingPopup$1.prototype = new Object_0;\n_.getClass$ = function getClass_130(){\n  return Lcom_google_gwt_logging_client_LoggingPopup$1_2_classLit;\n}\n;\n_.onClick = function onClick(event_0){\n  if ($equals(this.val$maxmin.element_0.textContent, 'Minimize')) {\n    $setText(this.val$maxmin, 'Maximize');\n    $setVisible(this.this$0.scrollPanel, false);\n    $setVisible(this.this$0.resizeIcon, false);\n  }\n   else {\n    $setVisible(this.this$0.scrollPanel, true);\n    $setVisible(this.this$0.resizeIcon, true);\n    $setText(this.val$maxmin, 'Minimize');\n  }\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$ClickHandler, Q$EventHandler]);\n_.this$0 = null;\n_.val$maxmin = null;\nfunction LoggingPopup$MouseDragHandler_0(dragHandle){\n  this.dragHandle = dragHandle;\n  $addDomHandler(dragHandle, this, ($clinit_MouseDownEvent() , $clinit_MouseDownEvent() , TYPE_0));\n  $addDomHandler(dragHandle, this, ($clinit_MouseUpEvent() , $clinit_MouseUpEvent() , TYPE_4));\n  $addDomHandler(dragHandle, this, ($clinit_MouseMoveEvent() , $clinit_MouseMoveEvent() , TYPE_1));\n}\n\nfunction LoggingPopup$MouseDragHandler(){\n}\n\n_ = LoggingPopup$MouseDragHandler.prototype = new Object_0;\n_.getClass$ = function getClass_131(){\n  return Lcom_google_gwt_logging_client_LoggingPopup$MouseDragHandler_2_classLit;\n}\n;\n_.onMouseDown = function onMouseDown_0(event_0){\n  this.dragging = true;\n  setCapture(this.dragHandle.element_0);\n  this.dragStartX = event_0.nativeEvent.clientX || 0;\n  this.dragStartY = event_0.nativeEvent.clientY || 0;\n  currentEvent.preventDefault();\n}\n;\n_.onMouseMove = function onMouseMove_0(event_0){\n  if (this.dragging) {\n    this.handleDrag((event_0.nativeEvent.clientX || 0) - this.dragStartX, (event_0.nativeEvent.clientY || 0) - this.dragStartY);\n    this.dragStartX = event_0.nativeEvent.clientX || 0;\n    this.dragStartY = event_0.nativeEvent.clientY || 0;\n  }\n}\n;\n_.onMouseUp = function onMouseUp_0(event_0){\n  this.dragging = false;\n  releaseCapture(this.dragHandle.element_0);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$MouseDownHandler, Q$MouseMoveHandler, Q$MouseUpHandler, Q$EventHandler]);\n_.dragHandle = null;\n_.dragStartX = 0;\n_.dragStartY = 0;\n_.dragging = false;\nfunction $getMaximumHorizontalScrollPosition(this$static){\n  return $getMaximumHorizontalScrollPosition_0((!impl_4 && (impl_4 = new ScrollImpl_0) , this$static.scrollableElem));\n}\n\nfunction $getMaximumVerticalScrollPosition(this$static){\n  return (this$static.scrollableElem.scrollHeight || 0) - this$static.scrollableElem.clientHeight;\n}\n\nfunction $getMinimumHorizontalScrollPosition(this$static){\n  return $getMinimumHorizontalScrollPosition_0((!impl_4 && (impl_4 = new ScrollImpl_0) , this$static.scrollableElem));\n}\n\nfunction $scrollToBottom(this$static){\n  $setScrollPosition(this$static, (this$static.scrollableElem.scrollHeight || 0) - this$static.scrollableElem.clientHeight);\n}\n\nfunction $setHorizontalScrollPosition(this$static, position){\n  $setScrollLeft(this$static.scrollableElem, position);\n}\n\nfunction $setScrollPosition(this$static, position){\n  $setScrollTop(this$static.scrollableElem, position);\n}\n\nfunction $setTouchScrollingDisabled(this$static){\n  var scroller, ua;\n  if (this$static.touchScroller) {\n    return false;\n  }\n  this$static.touchScroller = (scroller = (!isSupported && (isSupported = ($clinit_Boolean() , (!impl_1 && (impl_1 = new TouchEvent$TouchSupportDetector_0) , impl_1.isSupported) && !(ua = navigator.userAgent.toLowerCase() , /android ([3-9]+)\\.([0-9]+)/.exec(ua) != null)?TRUE:FALSE)) , isSupported.value_0?new TouchScroller_0:null) , !!scroller && $setTargetWidget(scroller, this$static) , scroller);\n  return !this$static.touchScroller;\n}\n\nfunction $setVerticalScrollPosition(this$static, position){\n  $setScrollTop(this$static.scrollableElem, position);\n}\n\nfunction ScrollPanel_0(){\n  SimplePanel_0.call(this);\n  this.scrollableElem = this.element_0;\n  this.containerElem = $doc.createElement('div');\n  $appendChild(this.scrollableElem, this.containerElem);\n  this.scrollableElem.style['overflow'] = ($clinit_Style$Overflow() , 'auto');\n  this.scrollableElem.style['position'] = ($clinit_Style$Position() , 'relative');\n  this.containerElem.style['position'] = 'relative';\n  this.scrollableElem.style['zoom'] = '1';\n  this.containerElem.style['zoom'] = '1';\n  $setTouchScrollingDisabled(this);\n  !impl_4 && (impl_4 = new ScrollImpl_0);\n}\n\nfunction ScrollPanel_1(child){\n  ScrollPanel_0.call(this);\n  $setWidget(this, child);\n}\n\nfunction ScrollPanel(){\n}\n\n_ = ScrollPanel_1.prototype = ScrollPanel.prototype = new SimplePanel;\n_.getClass$ = function getClass_132(){\n  return Lcom_google_gwt_user_client_ui_ScrollPanel_2_classLit;\n}\n;\n_.getContainerElement = function getContainerElement_1(){\n  return this.containerElem;\n}\n;\n_.onAttach = function onAttach_0(){\n  $onAttach(this);\n  this.scrollableElem.__listener = this;\n}\n;\n_.onDetach = function onDetach_0(){\n  this.scrollableElem.__listener = null;\n  $onDetach(this);\n}\n;\n_.setHeight = function setHeight_1(height){\n  setStyleAttribute(this.element_0, 'height', height);\n}\n;\n_.setWidth = function setWidth_1(width){\n  setStyleAttribute(this.element_0, 'width', width);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$SimplePanel, Q$UIObject, Q$Widget]);\n_.containerElem = null;\n_.scrollableElem = null;\n_.touchScroller = null;\nfunction $incrementPixelSize(this$static, width, height){\n  $setPixelSize_0(this$static, this$static.scrollPanelWidth + width, this$static.scrollPanelHeight + height);\n}\n\nfunction $setPixelSize_0(this$static, width, height){\n  $setPixelSize(this$static, this$static.scrollPanelWidth = width > 100?width:100, this$static.scrollPanelHeight = height > 100?height:100);\n}\n\nfunction LoggingPopup$ScrollPanelWithMinSize_0(){\n  ScrollPanel_0.call(this);\n}\n\nfunction LoggingPopup$ScrollPanelWithMinSize(){\n}\n\n_ = LoggingPopup$ScrollPanelWithMinSize_0.prototype = LoggingPopup$ScrollPanelWithMinSize.prototype = new ScrollPanel;\n_.getClass$ = function getClass_133(){\n  return Lcom_google_gwt_logging_client_LoggingPopup$ScrollPanelWithMinSize_2_classLit;\n}\n;\n_.setPixelSize = function setPixelSize_0(width, height){\n  $setPixelSize_0(this, width, height);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$SimplePanel, Q$UIObject, Q$Widget]);\n_.scrollPanelHeight = 0;\n_.scrollPanelWidth = 0;\nfunction LoggingPopup$WindowMoveHandler_0(this$0, dragHandle){\n  this.this$0 = this$0;\n  LoggingPopup$MouseDragHandler_0.call(this, dragHandle);\n}\n\nfunction LoggingPopup$WindowMoveHandler(){\n}\n\n_ = LoggingPopup$WindowMoveHandler_0.prototype = LoggingPopup$WindowMoveHandler.prototype = new LoggingPopup$MouseDragHandler;\n_.getClass$ = function getClass_134(){\n  return Lcom_google_gwt_logging_client_LoggingPopup$WindowMoveHandler_2_classLit;\n}\n;\n_.handleDrag = function handleDrag(absX, absY){\n  var moveTarget;\n  moveTarget = this.this$0;\n  $setWidgetPosition(($clinit_RootPanel() , get()), moveTarget, $getAbsoluteLeft(moveTarget.element_0) + absX, $getAbsoluteTop(moveTarget.element_0) + absY);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$MouseDownHandler, Q$MouseMoveHandler, Q$MouseUpHandler, Q$EventHandler]);\n_.this$0 = null;\nfunction LoggingPopup$WindowResizeHandler_0(this$0, dragHandle){\n  this.this$0 = this$0;\n  LoggingPopup$MouseDragHandler_0.call(this, dragHandle);\n}\n\nfunction LoggingPopup$WindowResizeHandler(){\n}\n\n_ = LoggingPopup$WindowResizeHandler_0.prototype = LoggingPopup$WindowResizeHandler.prototype = new LoggingPopup$MouseDragHandler;\n_.getClass$ = function getClass_135(){\n  return Lcom_google_gwt_logging_client_LoggingPopup$WindowResizeHandler_2_classLit;\n}\n;\n_.handleDrag = function handleDrag_0(absX, absY){\n  $incrementPixelSize(this.this$0.scrollPanel, absX, absY);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$MouseDownHandler, Q$MouseMoveHandler, Q$MouseUpHandler, Q$EventHandler]);\n_.this$0 = null;\nfunction NullLogHandler_0(){\n}\n\nfunction NullLogHandler(){\n}\n\n_ = NullLogHandler_0.prototype = NullLogHandler.prototype = new Handler;\n_.getClass$ = function getClass_136(){\n  return Lcom_google_gwt_logging_client_NullLogHandler_2_classLit;\n}\n;\n_.publish = function publish_3(record){\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Handler]);\nfunction SystemLogHandler_0(){\n  $setFormatter(this, new TextLogFormatter_0(true));\n  $setLevel(this, ($clinit_Level() , ALL_0));\n}\n\nfunction SystemLogHandler(){\n}\n\n_ = SystemLogHandler_0.prototype = SystemLogHandler.prototype = new Handler;\n_.getClass$ = function getClass_137(){\n  return Lcom_google_gwt_logging_client_SystemLogHandler_2_classLit;\n}\n;\n_.publish = function publish_4(record){\n  return;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Handler]);\nfunction TextLogFormatter_0(showStackTraces){\n  this.showStackTraces = showStackTraces;\n}\n\nfunction TextLogFormatter(){\n}\n\n_ = TextLogFormatter_0.prototype = TextLogFormatter.prototype = new FormatterImpl;\n_.format = function format_0(event_0){\n  var message;\n  message = new StringBuilder_0;\n  $append_1(message, $getRecordInfo(event_0, '\\n'));\n  $append_1(message, event_0.msg);\n  this.showStackTraces && $append_1(message, $getStackTraceAsString(event_0.thrown, '\\n', '\\t'));\n  return message.impl.string;\n}\n;\n_.getClass$ = function getClass_138(){\n  return Lcom_google_gwt_logging_client_TextLogFormatter_2_classLit;\n}\n;\n_.showStackTraces = false;\nfunction $clinit_LevelImplRegular(){\n  $clinit_LevelImplRegular = nullMethod;\n  ALL = new LevelImplRegular$LevelWithExposedConstructor_0('ALL', -2147483648);\n  CONFIG = new LevelImplRegular$LevelWithExposedConstructor_0('CONFIG', 700);\n  FINE = new LevelImplRegular$LevelWithExposedConstructor_0('FINE', 500);\n  FINER = new LevelImplRegular$LevelWithExposedConstructor_0('FINER', 400);\n  FINEST = new LevelImplRegular$LevelWithExposedConstructor_0('FINEST', 300);\n  INFO = new LevelImplRegular$LevelWithExposedConstructor_0('INFO', 800);\n  OFF = new LevelImplRegular$LevelWithExposedConstructor_0('OFF', 2147483647);\n  SEVERE = new LevelImplRegular$LevelWithExposedConstructor_0('SEVERE', 1000);\n  WARNING = new LevelImplRegular$LevelWithExposedConstructor_0('WARNING', 900);\n}\n\nfunction $setName(this$static, newName){\n  this$static.name_0 = newName;\n}\n\nfunction $setValue(this$static, newValue){\n  this$static.value_0 = newValue;\n}\n\nfunction LevelImplRegular_0(){\n  $clinit_LevelImplRegular();\n}\n\nfunction LevelImplRegular(){\n}\n\n_ = LevelImplRegular_0.prototype = LevelImplRegular.prototype = new Object_0;\n_.getClass$ = function getClass_139(){\n  return Lcom_google_gwt_logging_impl_LevelImplRegular_2_classLit;\n}\n;\n_.toString$ = function toString_9(){\n  return this.name_0;\n}\n;\n_.name_0 = null;\n_.value_0 = 0;\nvar ALL, CONFIG, FINE, FINER, FINEST, INFO, OFF, SEVERE, WARNING;\nfunction $clinit_Level(){\n  $clinit_Level = nullMethod;\n  $clinit_LevelImplRegular();\n  ALL_0 = ALL;\n  CONFIG_0 = CONFIG;\n  FINE_0 = FINE;\n  FINER_0 = FINER;\n  FINEST_0 = FINEST;\n  INFO_0 = INFO;\n  OFF_0 = OFF;\n  SEVERE_0 = SEVERE;\n  WARNING_0 = WARNING;\n}\n\nfunction Level(){\n}\n\n_ = Level.prototype = new Object_0;\n_.getClass$ = function getClass_140(){\n  return Ljava_util_logging_Level_2_classLit;\n}\n;\n_.toString$ = function toString_10(){\n  return this.impl.name_0;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable]);\n_.impl = null;\nvar ALL_0, CONFIG_0, FINE_0, FINER_0, FINEST_0, INFO_0, OFF_0, SEVERE_0, WARNING_0;\nfunction LevelImplRegular$LevelWithExposedConstructor_0(name_0, value){\n  $clinit_Level();\n  this.impl = new LevelImplRegular_0;\n  $setName(this.impl, name_0);\n  $setValue(this.impl, value);\n}\n\nfunction LevelImplRegular$LevelWithExposedConstructor(){\n}\n\n_ = LevelImplRegular$LevelWithExposedConstructor_0.prototype = LevelImplRegular$LevelWithExposedConstructor.prototype = new Level;\n_.getClass$ = function getClass_141(){\n  return Lcom_google_gwt_logging_impl_LevelImplRegular$LevelWithExposedConstructor_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable]);\nfunction $addHandler_1(this$static, handler){\n  $add_10(this$static.handlers, handler);\n}\n\nfunction $getLevel_0(this$static){\n  if (this$static.level) {\n    return this$static.level;\n  }\n  return $getLevel_0(this$static.parent_0.impl);\n}\n\nfunction $getLoggerHelper(name_0){\n  var logger, manager, newLogger;\n  manager = (!singleton_0 && (singleton_0 = new LogManager_0) , singleton_0);\n  logger = dynamicCast($get_0(manager.loggerList, name_0), Q$Logger);\n  if (!logger) {\n    newLogger = new LoggerWithExposedConstructor_0(name_0);\n    $addLogger(manager, newLogger);\n    return newLogger;\n  }\n  return logger;\n}\n\nfunction $info(this$static, msg){\n  $log(this$static, ($clinit_Level() , INFO_0), msg, null);\n}\n\nfunction $isLoggable(this$static, messageLevel){\n  return $getLevel_0(this$static).impl.value_0 <= messageLevel.impl.value_0;\n}\n\nfunction $log(this$static, level, msg, thrown){\n  var record;\n  if ($getLevel_0(this$static).impl.value_0 <= level.impl.value_0) {\n    record = new LogRecord_0(level, msg);\n    record.thrown = thrown;\n    $setLoggerName(record, this$static.name_0);\n    $log_0(this$static, record);\n  }\n}\n\nfunction $log_0(this$static, record){\n  var h_0, h$iterator;\n  if ($isLoggable(this$static, record.level)) {\n    for (h$iterator = new AbstractList$IteratorImpl_0(this$static.handlers); h$iterator.i < h$iterator.this$0_0.size_0();) {\n      h_0 = dynamicCast($next_4(h$iterator), Q$Handler);\n      h_0.publish(record);\n    }\n    this$static.useParentHandlers && !!this$static.parent_0 && $log_2(this$static.parent_0, record);\n  }\n}\n\nfunction $setLevel_0(this$static, newLevel){\n  this$static.level = newLevel;\n}\n\nfunction $setName_0(this$static, newName){\n  this$static.name_0 = newName;\n}\n\nfunction $setParent_0(this$static, newParent){\n  !!newParent && (this$static.parent_0 = newParent);\n}\n\nfunction $severe(this$static, msg){\n  $log(this$static, ($clinit_Level() , SEVERE_0), msg, null);\n}\n\nfunction LoggerImplRegular_0(){\n  this.useParentHandlers = true;\n  this.handlers = new ArrayList_0;\n}\n\nfunction LoggerImplRegular(){\n}\n\n_ = LoggerImplRegular_0.prototype = LoggerImplRegular.prototype = new Object_0;\n_.getClass$ = function getClass_142(){\n  return Lcom_google_gwt_logging_impl_LoggerImplRegular_2_classLit;\n}\n;\n_.handlers = null;\n_.level = null;\n_.name_0 = null;\n_.parent_0 = null;\n_.useParentHandlers = false;\nfunction $clinit_Logger(){\n  $clinit_Logger = nullMethod;\n  new LoggerImplRegular_0;\n}\n\nfunction $info_0(this$static, msg){\n  $info(this$static.impl, msg);\n}\n\nfunction $log_1(this$static, level, msg, thrown){\n  $log(this$static.impl, level, msg, thrown);\n}\n\nfunction $log_2(this$static, record){\n  $log_0(this$static.impl, record);\n}\n\nfunction $setLevel_1(this$static, newLevel){\n  $setLevel_0(this$static.impl, newLevel);\n}\n\nfunction $severe_0(this$static, msg){\n  $severe(this$static.impl, msg);\n}\n\nfunction Logger_0(name_0){\n  $clinit_Logger();\n  this.impl = new LoggerImplRegular_0;\n  $setName_0(this.impl, name_0);\n}\n\nfunction Logger(){\n}\n\n_ = Logger_0.prototype = Logger.prototype = new Object_0;\n_.getClass$ = function getClass_143(){\n  return Ljava_util_logging_Logger_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Logger]);\n_.impl = null;\nfunction LoggerWithExposedConstructor_0(name_0){\n  $clinit_Logger();\n  Logger_0.call(this, name_0);\n}\n\nfunction LoggerWithExposedConstructor(){\n}\n\n_ = LoggerWithExposedConstructor_0.prototype = LoggerWithExposedConstructor.prototype = new Logger;\n_.getClass$ = function getClass_144(){\n  return Lcom_google_gwt_logging_impl_LoggerWithExposedConstructor_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Logger]);\nfunction $calcNewVelocity(initialVelocity, decelFactor, oldVelocity, minDecel){\n  var maxVelocityX, minVelocityX, newVelocity;\n  newVelocity = initialVelocity * decelFactor;\n  if (oldVelocity >= 0) {\n    maxVelocityX = 0 > oldVelocity - minDecel?0:oldVelocity - minDecel;\n    newVelocity = newVelocity < maxVelocityX?newVelocity:maxVelocityX;\n  }\n   else {\n    minVelocityX = 0 < oldVelocity + minDecel?0:oldVelocity + minDecel;\n    newVelocity = newVelocity > minVelocityX?newVelocity:minVelocityX;\n  }\n  return newVelocity;\n}\n\nfunction $updateState(state){\n  var decelFactor, dist, elapsedMillis, ellapsedMillis, initialVelocity, minDecel, newVelocity, newVelocityX, newVelocityY, oldVelocity, position, totalEllapsedMillis;\n  ellapsedMillis = state.elapsedMillis;\n  totalEllapsedMillis = state.cumulativeElapsedMillis;\n  initialVelocity = state.initialVelocity;\n  oldVelocity = state.velocity;\n  decelFactor = Math.pow(0.9993, totalEllapsedMillis);\n  minDecel = ellapsedMillis * 5.0E-4;\n  newVelocityX = $calcNewVelocity(initialVelocity.x_0, decelFactor, oldVelocity.x_0, minDecel);\n  newVelocityY = $calcNewVelocity(initialVelocity.y_0, decelFactor, oldVelocity.y_0, minDecel);\n  newVelocity = new Point_0(newVelocityX, newVelocityY);\n  state.velocity = newVelocity;\n  elapsedMillis = state.elapsedMillis;\n  dist = $mult(newVelocity, new Point_0(elapsedMillis, elapsedMillis));\n  position = state.position;\n  $setPosition(state, new Point_0(position.x_0 + dist.x_0, position.y_0 + dist.y_0));\n  if (abs(newVelocity.x_0) < 0.02 && abs(newVelocity.y_0) < 0.02) {\n    return false;\n  }\n  return true;\n}\n\nfunction DefaultMomentum_0(){\n}\n\nfunction DefaultMomentum(){\n}\n\n_ = DefaultMomentum_0.prototype = DefaultMomentum.prototype = new Object_0;\n_.getClass$ = function getClass_145(){\n  return Lcom_google_gwt_touch_client_DefaultMomentum_2_classLit;\n}\n;\nfunction $setCumulativeElapsedMillis(this$static, cumulativeElapsedMillis){\n  this$static.cumulativeElapsedMillis = cumulativeElapsedMillis;\n}\n\nfunction $setElapsedMillis(this$static, elapsedMillis){\n  this$static.elapsedMillis = elapsedMillis;\n}\n\nfunction $setPosition(this$static, position){\n  this$static.position = position;\n}\n\nfunction Momentum$State_0(initialPosition, initialVelocity){\n  this.initialVelocity = initialVelocity;\n  this.position = new Point_1(initialPosition);\n  this.velocity = new Point_1(initialVelocity);\n}\n\nfunction Momentum$State(){\n}\n\n_ = Momentum$State_0.prototype = Momentum$State.prototype = new Object_0;\n_.getClass$ = function getClass_146(){\n  return Lcom_google_gwt_touch_client_Momentum$State_2_classLit;\n}\n;\n_.cumulativeElapsedMillis = 0;\n_.elapsedMillis = 0;\n_.initialVelocity = null;\n_.position = null;\n_.velocity = null;\nfunction $minus(this$static, c){\n  return new Point_0(this$static.x_0 - c.x_0, this$static.y_0 - c.y_0);\n}\n\nfunction $mult(this$static, c){\n  return new Point_0(this$static.x_0 * c.x_0, this$static.y_0 * c.y_0);\n}\n\nfunction $plus(this$static, c){\n  return new Point_0(this$static.x_0 + c.x_0, this$static.y_0 + c.y_0);\n}\n\nfunction Point_0(x, y){\n  this.x_0 = x;\n  this.y_0 = y;\n}\n\nfunction Point_1(c){\n  Point_0.call(this, c.x_0, c.y_0);\n}\n\nfunction Point(){\n}\n\n_ = Point_1.prototype = Point_0.prototype = Point.prototype = new Object_0;\n_.equals$ = function equals_2(obj){\n  var c;\n  if (!instanceOf(obj, Q$Point)) {\n    return false;\n  }\n  c = dynamicCast(obj, Q$Point);\n  return this.x_0 == c.x_0 && this.y_0 == c.y_0;\n}\n;\n_.getClass$ = function getClass_147(){\n  return Lcom_google_gwt_touch_client_Point_2_classLit;\n}\n;\n_.hashCode$ = function hashCode_4(){\n  return round_int(this.x_0) ^ round_int(this.y_0);\n}\n;\n_.toString$ = function toString_11(){\n  return 'Point(' + this.x_0 + ',' + this.y_0 + ')';\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Point]);\n_.x_0 = 0;\n_.y_0 = 0;\nfunction $calculateEndVelocity(from, to){\n  var dist, time;\n  time = to.time - from.time;\n  if (time <= 0) {\n    return null;\n  }\n  dist = $minus(from.point, to.point);\n  return new Point_0(dist.x_0 / time, dist.y_0 / time);\n}\n\nfunction $cancelAll(this$static){\n  this$static.touching = false;\n  this$static.dragging = false;\n  this$static.momentumCommand = null;\n}\n\nfunction $getTouchFromEvent(event_0){\n  var touches;\n  touches = event_0.nativeEvent.touches;\n  return touches.length > 0?touches[0]:null;\n}\n\nfunction $getWidgetScrollPosition(this$static){\n  return new Point_0(this$static.widget.scrollableElem.scrollLeft || 0, this$static.widget.scrollableElem.scrollTop || 0);\n}\n\nfunction $hitTest(point1, point2){\n  var absDiffX, absDiffY, diff;\n  diff = new Point_0(point1.x_0 - point2.x_0, point1.y_0 - point2.y_0);\n  absDiffX = abs(diff.x_0);\n  absDiffY = abs(diff.y_0);\n  return absDiffX <= 25 && absDiffY <= 25;\n}\n\nfunction $isClickScrollTriggeringTouch(this$static, clickPoint){\n  if (this$static.recentScrollTriggeringTouchPosition.point) {\n    return $hitTest(clickPoint, this$static.recentScrollTriggeringTouchPosition.point);\n  }\n  return false;\n}\n\nfunction $isClickTouchPositionDuringMomentum(this$static, clickPoint){\n  var currentTime, point, point$iterator, same;\n  currentTime = currentTimeMillis();\n  same = false;\n  for (point$iterator = new AbstractList$IteratorImpl_0(this$static.touchPositionsDuringMomentum); point$iterator.i < point$iterator.this$0_0.size_0();) {\n    point = dynamicCast($next_4(point$iterator), Q$TouchScroller$TemporalPoint);\n    if (currentTime - point.time <= 2500 && $hitTest(clickPoint, point.point)) {\n      same = true;\n      break;\n    }\n  }\n  return same;\n}\n\nfunction $onDragEnd(this$static){\n  var endVelocity;\n  if (!this$static.momentum) {\n    return;\n  }\n  endVelocity = $calculateEndVelocity(this$static.recentTouchPosition, this$static.lastTouchPosition);\n  if (endVelocity) {\n    this$static.momentumCommand = new TouchScroller$MomentumCommand_0(this$static, endVelocity);\n    scheduleFixedDelayImpl(($clinit_SchedulerImpl() , this$static.momentumCommand), 16);\n  }\n}\n\nfunction $onTouchEnd(this$static){\n  if (!this$static.touching) {\n    return;\n  }\n  this$static.touching = false;\n  if (this$static.dragging) {\n    this$static.dragging = false;\n    $onDragEnd(this$static);\n  }\n}\n\nfunction $onTouchMove(this$static, event_0){\n  var absDiffX, absDiffY, diff, hMax, hMin, hPosition, touch, touchPoint, touchTime, trackingTime, vMax, vPosition, curScrollPosition, diff_0;\n  if (!this$static.touching) {\n    return;\n  }\n  touch = $getTouchFromEvent(event_0);\n  touchPoint = new Point_0(touch.pageX, touch.pageY);\n  touchTime = currentTimeMillis();\n  $setTemporalPoint(this$static.lastTouchPosition, touchPoint, touchTime);\n  if (!this$static.dragging) {\n    diff = $minus(touchPoint, this$static.startTouchPosition);\n    absDiffX = abs(diff.x_0);\n    absDiffY = abs(diff.y_0);\n    if (absDiffX > 5 || absDiffY > 5) {\n      $setTemporalPoint(this$static.recentScrollTriggeringTouchPosition, this$static.recentTouchPosition.point, this$static.recentTouchPosition.time);\n      if (absDiffX > absDiffY) {\n        hPosition = this$static.widget.scrollableElem.scrollLeft || 0;\n        hMin = $getMinimumHorizontalScrollPosition(this$static.widget);\n        hMax = $getMaximumHorizontalScrollPosition(this$static.widget);\n        if (diff.x_0 < 0 && hMax <= hPosition) {\n          $cancelAll(this$static);\n          return;\n        }\n         else if (diff.x_0 > 0 && hMin >= hPosition) {\n          $cancelAll(this$static);\n          return;\n        }\n      }\n       else {\n        vPosition = this$static.widget.scrollableElem.scrollTop || 0;\n        vMax = $getMaximumVerticalScrollPosition(this$static.widget);\n        if (diff.y_0 < 0 && vMax <= vPosition) {\n          $cancelAll(this$static);\n          return;\n        }\n         else if (diff.y_0 > 0 && 0 >= vPosition) {\n          $cancelAll(this$static);\n          return;\n        }\n      }\n      this$static.dragging = true;\n    }\n  }\n  event_0.nativeEvent.preventDefault();\n  if (this$static.dragging) {\n    diff_0 = $minus(this$static.startTouchPosition, this$static.lastTouchPosition.point);\n    curScrollPosition = $plus(this$static.startScrollPosition, diff_0);\n    $setHorizontalScrollPosition(this$static.widget, round_int(curScrollPosition.x_0));\n    $setVerticalScrollPosition(this$static.widget, round_int(curScrollPosition.y_0));\n    trackingTime = touchTime - this$static.recentTouchPosition.time;\n    if (trackingTime > 200 && !!this$static.recentTouchPositionOnDeck) {\n      $setTemporalPoint(this$static.recentTouchPosition, this$static.recentTouchPositionOnDeck.point, this$static.recentTouchPositionOnDeck.time);\n      this$static.recentTouchPositionOnDeck = null;\n    }\n     else \n      trackingTime > 100 && !this$static.recentTouchPositionOnDeck && (this$static.recentTouchPositionOnDeck = new TouchScroller$TemporalPoint_1(touchPoint, touchTime));\n  }\n}\n\nfunction $onTouchStart(this$static, event_0){\n  var startTouchTime, touch;\n  $setTemporalPoint(this$static.recentScrollTriggeringTouchPosition, null, 0);\n  if (this$static.touching) {\n    return;\n  }\n  touch = $getTouchFromEvent(event_0);\n  this$static.startTouchPosition = new Point_0(touch.pageX, touch.pageY);\n  startTouchTime = currentTimeMillis();\n  $setTemporalPoint(this$static.recentTouchPosition, this$static.startTouchPosition, startTouchTime);\n  $setTemporalPoint(this$static.lastTouchPosition, this$static.startTouchPosition, startTouchTime);\n  this$static.recentTouchPositionOnDeck = null;\n  if (this$static.momentumCommand) {\n    $add_10(this$static.touchPositionsDuringMomentum, new TouchScroller$TemporalPoint_1(this$static.startTouchPosition, startTouchTime));\n    scheduleFixedDelayImpl(($clinit_SchedulerImpl() , this$static.momentumTouchRemovalCommand), 2500);\n  }\n  this$static.startScrollPosition = new Point_0(this$static.widget.scrollableElem.scrollLeft || 0, this$static.widget.scrollableElem.scrollTop || 0);\n  $cancelAll(this$static);\n  this$static.touching = true;\n}\n\nfunction $removeAttachHandler(this$static){\n  if (this$static.attachHandlerReg) {\n    $removeHandler(this$static.attachHandlerReg.real);\n    this$static.attachHandlerReg = null;\n  }\n}\n\nfunction $removeBustClickHandler(this$static){\n  if (this$static.bustClickHandlerReg) {\n    $removeHandler(this$static.bustClickHandlerReg.real);\n    this$static.bustClickHandlerReg = null;\n  }\n}\n\nfunction $setMomentum(this$static, momentum){\n  this$static.momentum = momentum;\n  !momentum && (this$static.momentumCommand = null);\n}\n\nfunction $setTargetWidget(this$static, widget){\n  var reg, reg$iterator;\n  if (this$static.widget == widget) {\n    return;\n  }\n  $cancelAll(this$static);\n  for (reg$iterator = new AbstractList$IteratorImpl_0(this$static.handlerRegs); reg$iterator.i < reg$iterator.this$0_0.size_0();) {\n    reg = dynamicCast($next_4(reg$iterator), Q$HandlerRegistration);\n    $removeHandler(reg.real);\n  }\n  $clear_1(this$static.handlerRegs);\n  $removeAttachHandler(this$static);\n  $removeBustClickHandler(this$static);\n  this$static.widget = widget;\n  if (widget) {\n    widget.attached && ($removeBustClickHandler(this$static) , this$static.bustClickHandlerReg = addNativePreviewHandler(new TouchScroller$6_0(this$static)));\n    this$static.attachHandlerReg = $addHandler_0(widget, new TouchScroller$1_0(this$static), (!TYPE_9 && (TYPE_9 = new GwtEvent$Type_0) , TYPE_9));\n    $add_10(this$static.handlerRegs, $addDomHandler(widget, new TouchScroller$2_0(this$static), ($clinit_TouchStartEvent() , $clinit_TouchStartEvent() , TYPE_8)));\n    $add_10(this$static.handlerRegs, $addDomHandler(widget, new TouchScroller$3_0(this$static), ($clinit_TouchMoveEvent() , $clinit_TouchMoveEvent() , TYPE_7)));\n    $add_10(this$static.handlerRegs, $addDomHandler(widget, new TouchScroller$4_0(this$static), ($clinit_TouchEndEvent() , $clinit_TouchEndEvent() , TYPE_6)));\n    $add_10(this$static.handlerRegs, $addDomHandler(widget, new TouchScroller$5_0(this$static), ($clinit_TouchCancelEvent() , $clinit_TouchCancelEvent() , TYPE_5)));\n  }\n}\n\nfunction $setWidgetScrollPosition(this$static, position){\n  $setHorizontalScrollPosition(this$static.widget, round_int(position.x_0));\n  $setVerticalScrollPosition(this$static.widget, round_int(position.y_0));\n}\n\nfunction $setupBustClickHandler(this$static){\n  $removeBustClickHandler(this$static);\n  this$static.bustClickHandlerReg = addNativePreviewHandler(new TouchScroller$6_0(this$static));\n}\n\nfunction TouchScroller_0(){\n  this.handlerRegs = new ArrayList_0;\n  this.lastTouchPosition = new TouchScroller$TemporalPoint_0;\n  this.recentTouchPosition = new TouchScroller$TemporalPoint_0;\n  this.recentScrollTriggeringTouchPosition = new TouchScroller$TemporalPoint_0;\n  this.touchPositionsDuringMomentum = new ArrayList_0;\n  this.momentumTouchRemovalCommand = new TouchScroller$MomentumTouchRemovalCommand_0(this);\n  $setMomentum(this, new DefaultMomentum_0);\n}\n\nfunction TouchScroller(){\n}\n\n_ = TouchScroller_0.prototype = TouchScroller.prototype = new Object_0;\n_.getClass$ = function getClass_148(){\n  return Lcom_google_gwt_touch_client_TouchScroller_2_classLit;\n}\n;\n_.attachHandlerReg = null;\n_.bustClickHandlerReg = null;\n_.dragging = false;\n_.momentum = null;\n_.momentumCommand = null;\n_.recentTouchPositionOnDeck = null;\n_.startScrollPosition = null;\n_.startTouchPosition = null;\n_.touching = false;\n_.widget = null;\nvar isSupported = null;\nfunction TouchScroller$1_0(this$0){\n  this.this$0 = this$0;\n}\n\nfunction TouchScroller$1(){\n}\n\n_ = TouchScroller$1_0.prototype = TouchScroller$1.prototype = new Object_0;\n_.getClass$ = function getClass_149(){\n  return Lcom_google_gwt_touch_client_TouchScroller$1_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$AttachEvent$Handler, Q$EventHandler]);\n_.this$0 = null;\nfunction TouchScroller$2_0(this$0){\n  this.this$0 = this$0;\n}\n\nfunction TouchScroller$2(){\n}\n\n_ = TouchScroller$2_0.prototype = TouchScroller$2.prototype = new Object_0;\n_.getClass$ = function getClass_150(){\n  return Lcom_google_gwt_touch_client_TouchScroller$2_2_classLit;\n}\n;\n_.onTouchStart = function onTouchStart_0(event_0){\n  $onTouchStart(this.this$0, event_0);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$TouchStartHandler, Q$EventHandler]);\n_.this$0 = null;\nfunction TouchScroller$3_0(this$0){\n  this.this$0 = this$0;\n}\n\nfunction TouchScroller$3(){\n}\n\n_ = TouchScroller$3_0.prototype = TouchScroller$3.prototype = new Object_0;\n_.getClass$ = function getClass_151(){\n  return Lcom_google_gwt_touch_client_TouchScroller$3_2_classLit;\n}\n;\n_.onTouchMove = function onTouchMove_0(event_0){\n  $onTouchMove(this.this$0, event_0);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$TouchMoveHandler, Q$EventHandler]);\n_.this$0 = null;\nfunction TouchScroller$4_0(this$0){\n  this.this$0 = this$0;\n}\n\nfunction TouchScroller$4(){\n}\n\n_ = TouchScroller$4_0.prototype = TouchScroller$4.prototype = new Object_0;\n_.getClass$ = function getClass_152(){\n  return Lcom_google_gwt_touch_client_TouchScroller$4_2_classLit;\n}\n;\n_.onTouchEnd = function onTouchEnd_0(event_0){\n  $onTouchEnd(this.this$0);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$TouchEndHandler, Q$EventHandler]);\n_.this$0 = null;\nfunction TouchScroller$5_0(this$0){\n  this.this$0 = this$0;\n}\n\nfunction TouchScroller$5(){\n}\n\n_ = TouchScroller$5_0.prototype = TouchScroller$5.prototype = new Object_0;\n_.getClass$ = function getClass_153(){\n  return Lcom_google_gwt_touch_client_TouchScroller$5_2_classLit;\n}\n;\n_.onTouchCancel = function onTouchCancel_0(event_0){\n  $onTouchEnd(this.this$0);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$TouchCancelHandler, Q$EventHandler]);\n_.this$0 = null;\nfunction TouchScroller$6_0(this$0){\n  this.this$0 = this$0;\n}\n\nfunction TouchScroller$6(){\n}\n\n_ = TouchScroller$6_0.prototype = TouchScroller$6.prototype = new Object_0;\n_.getClass$ = function getClass_154(){\n  return Lcom_google_gwt_touch_client_TouchScroller$6_2_classLit;\n}\n;\n_.onPreviewNativeEvent = function onPreviewNativeEvent(event_0){\n  var clickPoint;\n  if (1 == $eventGetTypeInt(event_0.nativeEvent.type)) {\n    clickPoint = new Point_0(event_0.nativeEvent.clientX || 0, event_0.nativeEvent.clientY || 0);\n    if ($isClickScrollTriggeringTouch(this.this$0, clickPoint) || $isClickTouchPositionDuringMomentum(this.this$0, clickPoint)) {\n      event_0.isCanceled = true;\n      event_0.nativeEvent.stopPropagation();\n      event_0.nativeEvent.preventDefault();\n    }\n  }\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$EventHandler, Q$Event$NativePreviewHandler]);\n_.this$0 = null;\nfunction $finish(this$static){\n  if (this$static.windowResizeHandler) {\n    $removeHandler(this$static.windowResizeHandler.real);\n    this$static.windowResizeHandler = null;\n  }\n  this$static == this$static.this$0.momentumCommand && (this$static.this$0.momentumCommand = null);\n}\n\nfunction TouchScroller$MomentumCommand_0(this$0, endVelocity){\n  this.this$0 = this$0;\n  this.duration = new Duration_0;\n  this.initialPosition = $getWidgetScrollPosition(this.this$0);\n  this.state = new Momentum$State_0(this.initialPosition, endVelocity);\n  this.windowResizeHandler = addResizeHandler(new TouchScroller$MomentumCommand$1_0(this));\n}\n\nfunction TouchScroller$MomentumCommand(){\n}\n\n_ = TouchScroller$MomentumCommand_0.prototype = TouchScroller$MomentumCommand.prototype = new Object_0;\n_.execute_0 = function execute_4(){\n  var cumulativeElapsedMillis, hMax, hMin, hPos, notDone, vMax, vPos;\n  if (this != this.this$0.momentumCommand) {\n    $finish(this);\n    return false;\n  }\n  cumulativeElapsedMillis = $elapsedMillis(this.duration);\n  $setElapsedMillis(this.state, cumulativeElapsedMillis - this.lastElapsedMillis);\n  this.lastElapsedMillis = cumulativeElapsedMillis;\n  $setCumulativeElapsedMillis(this.state, cumulativeElapsedMillis);\n  notDone = $updateState(this.state);\n  notDone || $finish(this);\n  $setWidgetScrollPosition(this.this$0, this.state.position);\n  hPos = round_int(this.state.position.x_0);\n  hMin = $getMinimumHorizontalScrollPosition(this.this$0.widget);\n  hMax = $getMaximumHorizontalScrollPosition(this.this$0.widget);\n  vMax = $getMaximumVerticalScrollPosition(this.this$0.widget);\n  vPos = round_int(this.state.position.y_0);\n  if ((vMax <= vPos || 0 >= vPos) && (hMax <= hPos || hMin >= hPos)) {\n    $finish(this);\n    return false;\n  }\n  return notDone;\n}\n;\n_.getClass$ = function getClass_155(){\n  return Lcom_google_gwt_touch_client_TouchScroller$MomentumCommand_2_classLit;\n}\n;\n_.lastElapsedMillis = 0;\n_.state = null;\n_.this$0 = null;\n_.windowResizeHandler = null;\nfunction TouchScroller$MomentumCommand$1_0(this$1){\n  this.this$1 = this$1;\n}\n\nfunction TouchScroller$MomentumCommand$1(){\n}\n\n_ = TouchScroller$MomentumCommand$1_0.prototype = TouchScroller$MomentumCommand$1.prototype = new Object_0;\n_.getClass$ = function getClass_156(){\n  return Lcom_google_gwt_touch_client_TouchScroller$MomentumCommand$1_2_classLit;\n}\n;\n_.onResize = function onResize(event_0){\n  $finish(this.this$1);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$ResizeHandler, Q$EventHandler]);\n_.this$1 = null;\nfunction TouchScroller$MomentumTouchRemovalCommand_0(this$0){\n  this.this$0 = this$0;\n}\n\nfunction TouchScroller$MomentumTouchRemovalCommand(){\n}\n\n_ = TouchScroller$MomentumTouchRemovalCommand_0.prototype = TouchScroller$MomentumTouchRemovalCommand.prototype = new Object_0;\n_.execute_0 = function execute_5(){\n  var currentTime, iter, point;\n  currentTime = currentTimeMillis();\n  iter = new AbstractList$IteratorImpl_0(this.this$0.touchPositionsDuringMomentum);\n  while (iter.i < iter.this$0_0.size_0()) {\n    point = dynamicCast($next_4(iter), Q$TouchScroller$TemporalPoint);\n    currentTime - point.time >= 2500 && $remove_10(iter);\n  }\n  return this.this$0.touchPositionsDuringMomentum.size != 0;\n}\n;\n_.getClass$ = function getClass_157(){\n  return Lcom_google_gwt_touch_client_TouchScroller$MomentumTouchRemovalCommand_2_classLit;\n}\n;\n_.this$0 = null;\nfunction $setTemporalPoint(this$static, point, time){\n  this$static.point = point;\n  this$static.time = time;\n}\n\nfunction TouchScroller$TemporalPoint_0(){\n}\n\nfunction TouchScroller$TemporalPoint_1(point, time){\n  this.point = point;\n  this.time = time;\n}\n\nfunction TouchScroller$TemporalPoint(){\n}\n\n_ = TouchScroller$TemporalPoint_1.prototype = TouchScroller$TemporalPoint_0.prototype = TouchScroller$TemporalPoint.prototype = new Object_0;\n_.getClass$ = function getClass_158(){\n  return Lcom_google_gwt_touch_client_TouchScroller$TemporalPoint_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$TouchScroller$TemporalPoint]);\n_.point = null;\n_.time = 0;\nfunction CommandCanceledException_0(){\n  $fillInStackTrace(this);\n}\n\nfunction CommandCanceledException(){\n}\n\n_ = CommandCanceledException_0.prototype = CommandCanceledException.prototype = new RuntimeException;\n_.getClass$ = function getClass_159(){\n  return Lcom_google_gwt_user_client_CommandCanceledException_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable]);\nfunction $doCommandCanceled(this$static){\n  var cmd, ex, ueh;\n  cmd = $getLast(this$static.iterator);\n  $remove_0(this$static.iterator);\n  ex = null;\n  instanceOf(cmd, Q$Command) && (ex = new CommandCanceledException_0(dynamicCast(cmd, Q$Command)));\n  if (ex) {\n    ueh = sUncaughtExceptionHandler;\n    !!ueh && $log_1(ueh.val$log, ($clinit_Level() , SEVERE_0), ex.detailMessage, ex);\n  }\n  this$static.executing = false;\n  $maybeStartExecutionTimer(this$static);\n}\n\nfunction $doExecuteCommands(this$static, startTimeMillis){\n  var command, element, wasCanceled;\n  wasCanceled = false;\n  try {\n    this$static.executing = true;\n    $setEnd(this$static.iterator, this$static.commands.size);\n    $schedule(this$static.cancellationTimer, 10000);\n    while ($hasNext(this$static.iterator)) {\n      element = $next(this$static.iterator);\n      try {\n        if (element == null) {\n          return;\n        }\n        if (instanceOf(element, Q$Command)) {\n          command = dynamicCast(element, Q$Command);\n          $execute_0(command);\n        }\n      }\n       finally {\n        wasCanceled = this$static.iterator.last == -1;\n        wasCanceled || $remove_0(this$static.iterator);\n      }\n      if (currentTimeMillis() - startTimeMillis >= 100) {\n        return;\n      }\n    }\n  }\n   finally {\n    if (!wasCanceled) {\n      $cancel_0(this$static.cancellationTimer);\n      this$static.executing = false;\n      $maybeStartExecutionTimer(this$static);\n    }\n  }\n}\n\nfunction $maybeStartExecutionTimer(this$static){\n  if (this$static.commands.size != 0 && !this$static.executionTimerPending && !this$static.executing) {\n    this$static.executionTimerPending = true;\n    $schedule(this$static.executionTimer, 1);\n  }\n}\n\nfunction $submit(this$static, command){\n  $add_10(this$static.commands, command);\n  $maybeStartExecutionTimer(this$static);\n}\n\nfunction CommandExecutor_0(){\n  this.cancellationTimer = new CommandExecutor$1_0(this);\n  this.commands = new ArrayList_0;\n  this.executionTimer = new CommandExecutor$2_0(this);\n  this.iterator = new CommandExecutor$CircularIterator_0(this);\n}\n\nfunction CommandExecutor(){\n}\n\n_ = CommandExecutor_0.prototype = CommandExecutor.prototype = new Object_0;\n_.getClass$ = function getClass_160(){\n  return Lcom_google_gwt_user_client_CommandExecutor_2_classLit;\n}\n;\n_.executing = false;\n_.executionTimerPending = false;\nfunction CommandExecutor$1_0(this$0){\n  $clinit_Timer();\n  this.this$0 = this$0;\n}\n\nfunction CommandExecutor$1(){\n}\n\n_ = CommandExecutor$1_0.prototype = CommandExecutor$1.prototype = new Timer;\n_.getClass$ = function getClass_161(){\n  return Lcom_google_gwt_user_client_CommandExecutor$1_2_classLit;\n}\n;\n_.run = function run_0(){\n  if (!this.this$0.executing) {\n    return;\n  }\n  $doCommandCanceled(this.this$0);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Timer]);\n_.this$0 = null;\nfunction CommandExecutor$2_0(this$0){\n  $clinit_Timer();\n  this.this$0 = this$0;\n}\n\nfunction CommandExecutor$2(){\n}\n\n_ = CommandExecutor$2_0.prototype = CommandExecutor$2.prototype = new Timer;\n_.getClass$ = function getClass_162(){\n  return Lcom_google_gwt_user_client_CommandExecutor$2_2_classLit;\n}\n;\n_.run = function run_1(){\n  this.this$0.executionTimerPending = false;\n  $doExecuteCommands(this.this$0, currentTimeMillis());\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Timer]);\n_.this$0 = null;\nfunction $getLast(this$static){\n  return $get_2(this$static.this$0.commands, this$static.last);\n}\n\nfunction $hasNext(this$static){\n  return this$static.next < this$static.end;\n}\n\nfunction $next(this$static){\n  var command;\n  this$static.last = this$static.next;\n  command = $get_2(this$static.this$0.commands, this$static.next++);\n  this$static.next >= this$static.end && (this$static.next = 0);\n  return command;\n}\n\nfunction $remove_0(this$static){\n  $remove_12(this$static.this$0.commands, this$static.last);\n  --this$static.end;\n  this$static.last <= this$static.next && --this$static.next < 0 && (this$static.next = 0);\n  this$static.last = -1;\n}\n\nfunction $setEnd(this$static, end){\n  this$static.end = end;\n}\n\nfunction CommandExecutor$CircularIterator_0(this$0){\n  this.this$0 = this$0;\n}\n\nfunction CommandExecutor$CircularIterator(){\n}\n\n_ = CommandExecutor$CircularIterator_0.prototype = CommandExecutor$CircularIterator.prototype = new Object_0;\n_.getClass$ = function getClass_163(){\n  return Lcom_google_gwt_user_client_CommandExecutor$CircularIterator_2_classLit;\n}\n;\n_.hasNext = function hasNext(){\n  return this.next < this.end;\n}\n;\n_.next_0 = function next_0(){\n  return $next(this);\n}\n;\n_.remove_0 = function remove_0(){\n  $remove_0(this);\n}\n;\n_.end = 0;\n_.last = -1;\n_.next = 0;\n_.this$0 = null;\nfunction dispatchEvent_0(evt, elem, listener){\n  var prevCurrentEvent;\n  prevCurrentEvent = currentEvent;\n  currentEvent = evt;\n  elem == sCaptureElem && $eventGetTypeInt(evt.type) == 8192 && (sCaptureElem = null);\n  listener.onBrowserEvent(evt);\n  currentEvent = prevCurrentEvent;\n}\n\nfunction insertChild(parent_0, child, index){\n  $insertChild(parent_0, $resolve(child), index);\n}\n\nfunction previewEvent(evt){\n  var ret;\n  ret = fire_4(handlers_0, evt);\n  if (!ret && !!evt) {\n    evt.cancelBubble = true;\n    evt.preventDefault();\n  }\n  return ret;\n}\n\nfunction releaseCapture(elem){\n  !!sCaptureElem && elem == sCaptureElem && (sCaptureElem = null);\n  $maybeInitializeEventSystem();\n  elem === captureElem && (captureElem = null);\n}\n\nfunction setCapture(elem){\n  sCaptureElem = elem;\n  $maybeInitializeEventSystem();\n  captureElem = elem;\n}\n\nfunction setStyleAttribute(elem, attr, value){\n  elem.style[attr] = value;\n}\n\nfunction sinkBitlessEvent(elem, eventTypeName){\n  $maybeInitializeEventSystem();\n  $sinkBitlessEventImpl(elem, eventTypeName);\n}\n\nfunction sinkEvents_0(elem, eventBits){\n  $maybeInitializeEventSystem();\n  elem.__eventBits = eventBits;\n  elem.onclick = eventBits & 1?dispatchEvent_1:null;\n  elem.ondblclick = eventBits & 2?dispatchEvent_1:null;\n  elem.onmousedown = eventBits & 4?dispatchEvent_1:null;\n  elem.onmouseup = eventBits & 8?dispatchEvent_1:null;\n  elem.onmouseover = eventBits & 16?dispatchEvent_1:null;\n  elem.onmouseout = eventBits & 32?dispatchEvent_1:null;\n  elem.onmousemove = eventBits & 64?dispatchEvent_1:null;\n  elem.onkeydown = eventBits & 128?dispatchEvent_1:null;\n  elem.onkeypress = eventBits & 256?dispatchEvent_1:null;\n  elem.onkeyup = eventBits & 512?dispatchEvent_1:null;\n  elem.onchange = eventBits & 1024?dispatchEvent_1:null;\n  elem.onfocus = eventBits & 2048?dispatchEvent_1:null;\n  elem.onblur = eventBits & 4096?dispatchEvent_1:null;\n  elem.onlosecapture = eventBits & 8192?dispatchEvent_1:null;\n  elem.onscroll = eventBits & 16384?dispatchEvent_1:null;\n  elem.onload = eventBits & 32768?dispatchUnhandledEvent:null;\n  elem.onerror = eventBits & 65536?dispatchEvent_1:null;\n  elem.onmousewheel = eventBits & 131072?dispatchEvent_1:null;\n  elem.oncontextmenu = eventBits & 262144?dispatchEvent_1:null;\n  elem.onpaste = eventBits & 524288?dispatchEvent_1:null;\n}\n\nvar currentEvent = null, sCaptureElem = null;\nfunction $clinit_DeferredCommand(){\n  $clinit_DeferredCommand = nullMethod;\n  commandExecutor = new CommandExecutor_0;\n}\n\nfunction addCommand(cmd){\n  $clinit_DeferredCommand();\n  if (!cmd) {\n    throw new NullPointerException_1('cmd cannot be null');\n  }\n  $submit(commandExecutor, cmd);\n}\n\nvar commandExecutor;\nfunction $onModuleLoad_0(){\n  var allowedModes, currentMode, i;\n  currentMode = $doc.compatMode;\n  allowedModes = initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['CSS1Compat']);\n  for (i = 0; i < allowedModes.length; ++i) {\n    if ($equals(allowedModes[i], currentMode)) {\n      return;\n    }\n  }\n  allowedModes.length == 1 && $equals('CSS1Compat', allowedModes[0]) && $equals('BackCompat', currentMode)?\"GWT no longer supports Quirks Mode (document.compatMode=' BackCompat').<br>Make sure your application's host HTML page has a Standards Mode (document.compatMode=' CSS1Compat') doctype,<br>e.g. by using &lt;!doctype html&gt; at the start of your application's HTML page.<br><br>To continue using this unsupported rendering mode and risk layout problems, suppress this message by adding<br>the following line to your*.gwt.xml module file:<br>&nbsp;&nbsp;&lt;extend-configuration-property name=\\\"document.compatMode\\\" value=\\\"\" + currentMode + '\"/&gt;':\"Your *.gwt.xml module configuration prohibits the use of the current doucment rendering mode (document.compatMode=' \" + currentMode + \"').<br>Modify your application's host HTML page doctype, or update your custom 'document.compatMode' configuration property settings.\";\n}\n\nfunction addNativePreviewHandler(handler){\n  $maybeInitializeEventSystem();\n  !TYPE_13 && (TYPE_13 = new GwtEvent$Type_0);\n  if (!handlers_0) {\n    handlers_0 = new HandlerManager_1(null, true);\n    singleton = new Event$NativePreviewEvent_0;\n  }\n  return $addHandler(handlers_0, TYPE_13, handler);\n}\n\nfunction sinkEvents_1(elem, eventBits){\n  sinkEvents_0(elem, eventBits);\n}\n\nvar handlers_0 = null;\nfunction $revive(this$static){\n  this$static.dead = false;\n  this$static.source = null;\n  this$static.isCanceled = false;\n  this$static.isConsumed = false;\n  this$static.isFirstHandler = true;\n  this$static.nativeEvent = null;\n}\n\nfunction $setNativeEvent_0(this$static, nativeEvent){\n  this$static.nativeEvent = nativeEvent;\n}\n\nfunction Event$NativePreviewEvent_0(){\n}\n\nfunction fire_4(handlers, nativeEvent){\n  var lastIsCanceled, lastIsConsumed, lastIsFirstHandler, lastNativeEvent, ret;\n  if (!!TYPE_13 && !!handlers && $isEventHandled(handlers, TYPE_13)) {\n    lastIsCanceled = singleton.isCanceled;\n    lastIsConsumed = singleton.isConsumed;\n    lastIsFirstHandler = singleton.isFirstHandler;\n    lastNativeEvent = singleton.nativeEvent;\n    $revive(singleton);\n    $setNativeEvent_0(singleton, nativeEvent);\n    $fireEvent(handlers, singleton);\n    ret = !(singleton.isCanceled && !singleton.isConsumed);\n    singleton.isCanceled = lastIsCanceled;\n    singleton.isConsumed = lastIsConsumed;\n    singleton.isFirstHandler = lastIsFirstHandler;\n    singleton.nativeEvent = lastNativeEvent;\n    return ret;\n  }\n  return true;\n}\n\nfunction Event$NativePreviewEvent(){\n}\n\n_ = Event$NativePreviewEvent_0.prototype = Event$NativePreviewEvent.prototype = new GwtEvent;\n_.dispatch = function dispatch_13(handler){\n  dynamicCast(handler, Q$Event$NativePreviewHandler).onPreviewNativeEvent(this);\n  singleton.isFirstHandler = false;\n}\n;\n_.getAssociatedType = function getAssociatedType_14(){\n  return TYPE_13;\n}\n;\n_.getClass$ = function getClass_164(){\n  return Lcom_google_gwt_user_client_Event$NativePreviewEvent_2_classLit;\n}\n;\n_.revive = function revive_0(){\n  $revive(this);\n}\n;\n_.isCanceled = false;\n_.isConsumed = false;\n_.isFirstHandler = false;\n_.nativeEvent = null;\nvar TYPE_13 = null, singleton = null;\nfunction $clinit_History(){\n  $clinit_History = nullMethod;\n  impl_3 = new HistoryImplTimer_0;\n  $init(impl_3) || (impl_3 = null);\n}\n\nfunction addValueChangeHandler(handler){\n  $clinit_History();\n  return impl_3?$addValueChangeHandler(impl_3, handler):null;\n}\n\nvar impl_3 = null;\nfunction Timer$1_0(){\n}\n\nfunction Timer$1(){\n}\n\n_ = Timer$1_0.prototype = Timer$1.prototype = new Object_0;\n_.getClass$ = function getClass_165(){\n  return Lcom_google_gwt_user_client_Timer$1_2_classLit;\n}\n;\n_.onClose = function onClose(event_0){\n  while (($clinit_Timer() , timers).size > 0) {\n    $cancel_0(dynamicCast($get_2(timers, 0), Q$Timer));\n  }\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$CloseHandler, Q$EventHandler]);\nfunction $getRuntimeValue(){\n  var ua = navigator.userAgent.toLowerCase();\n  var makeVersion = function(result){\n    return parseInt(result[1]) * 1000 + parseInt(result[2]);\n  }\n  ;\n  if (function(){\n    return ua.indexOf('opera') != -1;\n  }\n  ())\n    return 'opera';\n  if (function(){\n    return ua.indexOf('webkit') != -1 || function(){\n      if (ua.indexOf('chromeframe') != -1) {\n        return true;\n      }\n      if (typeof window['ActiveXObject'] != 'undefined') {\n        try {\n          var obj = new ActiveXObject('ChromeTab.ChromeFrame');\n          if (obj) {\n            obj.registerBhoIfNeeded();\n            return true;\n          }\n        }\n         catch (e) {\n        }\n      }\n      return false;\n    }\n    ();\n  }\n  ())\n    return 'safari';\n  if (function(){\n    return ua.indexOf('msie') != -1 && $doc.documentMode >= 9;\n  }\n  ())\n    return 'ie9';\n  if (function(){\n    return ua.indexOf('msie') != -1 && $doc.documentMode >= 8;\n  }\n  ())\n    return 'ie8';\n  if (function(){\n    var result = /msie ([0-9]+)\\.([0-9]+)/.exec(ua);\n    if (result && result.length == 3)\n      return makeVersion(result) >= 6000;\n  }\n  ())\n    return 'ie6';\n  if (function(){\n    return ua.indexOf('gecko') != -1;\n  }\n  ())\n    return 'gecko1_8';\n  return 'unknown';\n}\n\nfunction addCloseHandler(handler){\n  maybeInitializeCloseHandlers();\n  return addHandler(TYPE_10?TYPE_10:(TYPE_10 = new GwtEvent$Type_0), handler);\n}\n\nfunction addHandler(type, handler){\n  return $addHandler((!handlers_1 && (handlers_1 = new Window$WindowHandlers_0) , handlers_1), type, handler);\n}\n\nfunction addResizeHandler(handler){\n  maybeInitializeCloseHandlers();\n  maybeInitializeResizeHandlers();\n  return addHandler((!TYPE_11 && (TYPE_11 = new GwtEvent$Type_0) , TYPE_11), handler);\n}\n\nfunction maybeInitializeCloseHandlers(){\n  if (!closeHandlersInitialized) {\n    $initWindowCloseHandler();\n    closeHandlersInitialized = true;\n  }\n}\n\nfunction maybeInitializeResizeHandlers(){\n  if (!resizeHandlersInitialized) {\n    $initWindowResizeHandler();\n    resizeHandlersInitialized = true;\n  }\n}\n\nfunction onClosing(){\n  var event_0;\n  if (closeHandlersInitialized) {\n    event_0 = new Window$ClosingEvent_0;\n    !!handlers_1 && $fireEvent(handlers_1, event_0);\n    return null;\n  }\n  return null;\n}\n\nfunction onResize_0(){\n  var height, width;\n  if (resizeHandlersInitialized) {\n    width = $getClientWidth_0($doc);\n    height = $getClientHeight_0($doc);\n    if (lastResizeWidth != width || lastResizeHeight != height) {\n      lastResizeWidth = width;\n      lastResizeHeight = height;\n      fire_2((!handlers_1 && (handlers_1 = new Window$WindowHandlers_0) , handlers_1));\n    }\n  }\n}\n\nvar closeHandlersInitialized = false, handlers_1 = null, lastResizeHeight = 0, lastResizeWidth = 0, resizeHandlersInitialized = false;\nfunction $clinit_Window$ClosingEvent(){\n  $clinit_Window$ClosingEvent = nullMethod;\n  TYPE_14 = new GwtEvent$Type_0;\n}\n\nfunction Window$ClosingEvent_0(){\n  $clinit_Window$ClosingEvent();\n}\n\nfunction Window$ClosingEvent(){\n}\n\n_ = Window$ClosingEvent_0.prototype = Window$ClosingEvent.prototype = new GwtEvent;\n_.dispatch = function dispatch_14(handler){\n  throwClassCastExceptionUnlessNull(handler);\n  null.nullMethod();\n}\n;\n_.getAssociatedType = function getAssociatedType_15(){\n  return TYPE_14;\n}\n;\n_.getClass$ = function getClass_166(){\n  return Lcom_google_gwt_user_client_Window$ClosingEvent_2_classLit;\n}\n;\nvar TYPE_14;\nfunction ensureParameterMap(){\n  var kv, kvPair, kvPair$array, kvPair$index, kvPair$max, qs, queryString, regexp;\n  if (!paramMap) {\n    paramMap = new HashMap_0;\n    queryString = $wnd.location.search;\n    if (queryString != null && queryString.length > 1) {\n      qs = $substring(queryString, 1);\n      for (kvPair$array = $split(qs, '&', 0) , kvPair$index = 0 , kvPair$max = kvPair$array.length; kvPair$index < kvPair$max; ++kvPair$index) {\n        kvPair = kvPair$array[kvPair$index];\n        kv = $split(kvPair, '=', 2);\n        kv.length > 1?$put_0(paramMap, kv[0], (throwIfNull(kv[1]) , regexp = /\\+/g , decodeURIComponent(kv[1].replace(regexp, '%20')))):$put_0(paramMap, kv[0], '');\n      }\n    }\n  }\n}\n\nvar paramMap = null;\nfunction Window$WindowHandlers_0(){\n  HandlerManager_0.call(this, null);\n}\n\nfunction Window$WindowHandlers(){\n}\n\n_ = Window$WindowHandlers_0.prototype = Window$WindowHandlers.prototype = new HandlerManager;\n_.getClass$ = function getClass_167(){\n  return Lcom_google_gwt_user_client_Window$WindowHandlers_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasHandlers]);\nfunction $eventGetTypeInt(eventType){\n  switch (eventType) {\n    case 'blur':\n      return 4096;\n    case 'change':\n      return 1024;\n    case 'click':\n      return 1;\n    case 'dblclick':\n      return 2;\n    case 'focus':\n      return 2048;\n    case 'keydown':\n      return 128;\n    case 'keypress':\n      return 256;\n    case 'keyup':\n      return 512;\n    case 'load':\n      return 32768;\n    case 'losecapture':\n      return 8192;\n    case 'mousedown':\n      return 4;\n    case 'mousemove':\n      return 64;\n    case 'mouseout':\n      return 32;\n    case 'mouseover':\n      return 16;\n    case 'mouseup':\n      return 8;\n    case 'scroll':\n      return 16384;\n    case 'error':\n      return 65536;\n    case 'DOMMouseScroll':\n    case 'mousewheel':\n      return 131072;\n    case 'contextmenu':\n      return 262144;\n    case 'paste':\n      return 524288;\n    case 'touchstart':\n      return 1048576;\n    case 'touchmove':\n      return 2097152;\n    case 'touchend':\n      return 4194304;\n    case 'touchcancel':\n      return 8388608;\n    case 'gesturestart':\n      return 16777216;\n    case 'gesturechange':\n      return 33554432;\n    case 'gestureend':\n      return 67108864;\n    default:return -1;\n  }\n}\n\nfunction $maybeInitializeEventSystem(){\n  if (!eventSystemIsInitialized) {\n    $initEventSystem();\n    eventSystemIsInitialized = true;\n  }\n}\n\nfunction $setEventListener(elem, listener){\n  elem.__listener = listener;\n}\n\nfunction isMyListener(object){\n  return !instanceOfJso(object) && instanceOf(object, Q$EventListener);\n}\n\nvar eventSystemIsInitialized = false;\nfunction $initEventSystem(){\n  dispatchCapturedEvent = $entry(function(evt){\n    if (!previewEvent(evt)) {\n      evt.stopPropagation();\n      evt.preventDefault();\n      return false;\n    }\n    return true;\n  }\n  );\n  dispatchEvent_1 = $entry(function(evt){\n    var listener, curElem = this;\n    while (curElem && !(listener = curElem.__listener)) {\n      curElem = curElem.parentNode;\n    }\n    curElem && curElem.nodeType != 1 && (curElem = null);\n    listener && isMyListener(listener) && dispatchEvent_0(evt, curElem, listener);\n  }\n  );\n  dispatchDragEvent = $entry(function(evt){\n    evt.preventDefault();\n    dispatchEvent_1.call(this, evt);\n  }\n  );\n  dispatchUnhandledEvent = $entry(function(evt){\n    this.__gwtLastUnhandledEvent = evt.type;\n    dispatchEvent_1.call(this, evt);\n  }\n  );\n  dispatchCapturedMouseEvent = $entry(function(evt){\n    var dispatchCapturedEventFn = dispatchCapturedEvent;\n    if (dispatchCapturedEventFn(evt)) {\n      var cap = captureElem;\n      if (cap && cap.__listener) {\n        if (isMyListener(cap.__listener)) {\n          dispatchEvent_0(evt, cap, cap.__listener);\n          evt.stopPropagation();\n        }\n      }\n    }\n  }\n  );\n  $wnd.addEventListener('click', dispatchCapturedMouseEvent, true);\n  $wnd.addEventListener('dblclick', dispatchCapturedMouseEvent, true);\n  $wnd.addEventListener('mousedown', dispatchCapturedMouseEvent, true);\n  $wnd.addEventListener('mouseup', dispatchCapturedMouseEvent, true);\n  $wnd.addEventListener('mousemove', dispatchCapturedMouseEvent, true);\n  $wnd.addEventListener('mouseover', dispatchCapturedMouseEvent, true);\n  $wnd.addEventListener('mouseout', dispatchCapturedMouseEvent, true);\n  $wnd.addEventListener('mousewheel', dispatchCapturedMouseEvent, true);\n  $wnd.addEventListener('keydown', dispatchCapturedEvent, true);\n  $wnd.addEventListener('keyup', dispatchCapturedEvent, true);\n  $wnd.addEventListener('keypress', dispatchCapturedEvent, true);\n  $wnd.addEventListener('touchstart', dispatchCapturedMouseEvent, true);\n  $wnd.addEventListener('touchmove', dispatchCapturedMouseEvent, true);\n  $wnd.addEventListener('touchend', dispatchCapturedMouseEvent, true);\n  $wnd.addEventListener('touchcancel', dispatchCapturedMouseEvent, true);\n  $wnd.addEventListener('gesturestart', dispatchCapturedMouseEvent, true);\n  $wnd.addEventListener('gesturechange', dispatchCapturedMouseEvent, true);\n  $wnd.addEventListener('gestureend', dispatchCapturedMouseEvent, true);\n}\n\nfunction $insertChild(parent_0, toAdd, index){\n  var count = 0, child = parent_0.firstChild, before = null;\n  while (child) {\n    if (child.nodeType == 1) {\n      if (count == index) {\n        before = child;\n        break;\n      }\n      ++count;\n    }\n    child = child.nextSibling;\n  }\n  parent_0.insertBefore(toAdd, before);\n}\n\nfunction $sinkBitlessEventImpl(elem, eventTypeName){\n  switch (eventTypeName) {\n    case 'drag':\n      elem.ondrag = dispatchEvent_1;\n      break;\n    case 'dragend':\n      elem.ondragend = dispatchEvent_1;\n      break;\n    case 'dragenter':\n      elem.ondragenter = dispatchDragEvent;\n      break;\n    case 'dragleave':\n      elem.ondragleave = dispatchEvent_1;\n      break;\n    case 'dragover':\n      elem.ondragover = dispatchDragEvent;\n      break;\n    case 'dragstart':\n      elem.ondragstart = dispatchEvent_1;\n      break;\n    case 'drop':\n      elem.ondrop = dispatchEvent_1;\n      break;\n    case 'canplaythrough':\n    case 'ended':\n    case 'progress':\n      elem.removeEventListener(eventTypeName, dispatchEvent_1, false);\n      elem.addEventListener(eventTypeName, dispatchEvent_1, false);\n      break;\n    default:throw 'Trying to sink unknown event type ' + eventTypeName;\n  }\n}\n\nvar captureElem = null, dispatchCapturedEvent = null, dispatchCapturedMouseEvent = null, dispatchDragEvent = null, dispatchEvent_1 = null, dispatchUnhandledEvent = null;\nfunction $get(this$static, elem){\n  var index;\n  index = getIndex(elem);\n  if (index < 0) {\n    return null;\n  }\n  return dynamicCast($get_2(this$static.uiObjectList, index), Q$UIObject);\n}\n\nfunction $put(this$static, uiObject){\n  var index;\n  if (!this$static.freeList) {\n    index = this$static.uiObjectList.size;\n    $add_10(this$static.uiObjectList, uiObject);\n  }\n   else {\n    index = this$static.freeList.index_0;\n    $set(this$static.uiObjectList, index, uiObject);\n    this$static.freeList = this$static.freeList.next;\n  }\n  uiObject.element_0['__uiObjectID'] = index;\n}\n\nfunction $removeByElement(this$static, elem){\n  var index;\n  index = getIndex(elem);\n  elem['__uiObjectID'] = null;\n  $set(this$static.uiObjectList, index, null);\n  this$static.freeList = new ElementMapperImpl$FreeNode_0(index, this$static.freeList);\n}\n\nfunction ElementMapperImpl_0(){\n  this.uiObjectList = new ArrayList_0;\n}\n\nfunction getIndex(elem){\n  var index = elem['__uiObjectID'];\n  return index == null?-1:index;\n}\n\nfunction ElementMapperImpl(){\n}\n\n_ = ElementMapperImpl_0.prototype = ElementMapperImpl.prototype = new Object_0;\n_.getClass$ = function getClass_168(){\n  return Lcom_google_gwt_user_client_impl_ElementMapperImpl_2_classLit;\n}\n;\n_.freeList = null;\nfunction ElementMapperImpl$FreeNode_0(index, next){\n  this.index_0 = index;\n  this.next = next;\n}\n\nfunction ElementMapperImpl$FreeNode(){\n}\n\n_ = ElementMapperImpl$FreeNode_0.prototype = ElementMapperImpl$FreeNode.prototype = new Object_0;\n_.getClass$ = function getClass_169(){\n  return Lcom_google_gwt_user_client_impl_ElementMapperImpl$FreeNode_2_classLit;\n}\n;\n_.index_0 = 0;\n_.next = null;\nfunction $addValueChangeHandler(this$static, handler){\n  return $addHandler(this$static.handlers, (!TYPE_12 && (TYPE_12 = new GwtEvent$Type_0) , TYPE_12), handler);\n}\n\nfunction setToken(token){\n  token_1 = token;\n}\n\nfunction HistoryImpl(){\n}\n\n_ = HistoryImpl.prototype = new Object_0;\n_.decodeFragment = function decodeFragment(encodedFragment){\n  return decodeURI(encodedFragment.replace('%23', '#'));\n}\n;\n_.fireEvent = function fireEvent_1(event_0){\n  $fireEvent(this.handlers, event_0);\n}\n;\n_.getClass$ = function getClass_170(){\n  return Lcom_google_gwt_user_client_impl_HistoryImpl_2_classLit;\n}\n;\n_.newItemOnEvent = function newItemOnEvent(historyToken){\n  historyToken = historyToken == null?'':historyToken;\n  if (!$equals(historyToken, token_1 == null?'':token_1)) {\n    token_1 = historyToken;\n    fire_3(this);\n  }\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasHandlers]);\nvar token_1 = '';\nfunction $init(this$static){\n  var token_0 = '';\n  var hash_0 = $wnd.location.hash;\n  hash_0.length > 0 && (token_0 = this$static.decodeFragment(hash_0.substring(1)));\n  setToken(token_0);\n  var historyImpl = this$static;\n  var checkHistory = $entry(function(){\n    var token = '', hash = $wnd.location.hash;\n    hash.length > 0 && (token = historyImpl.decodeFragment(hash.substring(1)));\n    historyImpl.newItemOnEvent(token);\n  }\n  );\n  var checkHistoryCycle = function(){\n    $wnd.setTimeout(checkHistoryCycle, 250);\n    checkHistory();\n  }\n  ;\n  checkHistoryCycle();\n  return true;\n}\n\nfunction HistoryImplTimer_0(){\n  this.handlers = new HandlerManager_0(null);\n}\n\nfunction HistoryImplTimer(){\n}\n\n_ = HistoryImplTimer_0.prototype = HistoryImplTimer.prototype = new HistoryImpl;\n_.getClass$ = function getClass_171(){\n  return Lcom_google_gwt_user_client_impl_HistoryImplTimer_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasHandlers]);\nfunction $initWindowCloseHandler(){\n  var oldOnBeforeUnload = $wnd.onbeforeunload;\n  var oldOnUnload = $wnd.onunload;\n  $wnd.onbeforeunload = function(evt){\n    var ret, oldRet;\n    try {\n      ret = $entry(onClosing)();\n    }\n     finally {\n      oldRet = oldOnBeforeUnload && oldOnBeforeUnload(evt);\n    }\n    if (ret != null) {\n      return ret;\n    }\n    if (oldRet != null) {\n      return oldRet;\n    }\n  }\n  ;\n  $wnd.onunload = $entry(function(evt){\n    try {\n      closeHandlersInitialized && fire_1((!handlers_1 && (handlers_1 = new Window$WindowHandlers_0) , handlers_1));\n    }\n     finally {\n      oldOnUnload && oldOnUnload(evt);\n      $wnd.onresize = null;\n      $wnd.onscroll = null;\n      $wnd.onbeforeunload = null;\n      $wnd.onunload = null;\n    }\n  }\n  );\n}\n\nfunction $initWindowResizeHandler(){\n  var oldOnResize = $wnd.onresize;\n  $wnd.onresize = $entry(function(evt){\n    try {\n      onResize_0();\n    }\n     finally {\n      oldOnResize && oldOnResize(evt);\n    }\n  }\n  );\n}\n\nfunction $add_0(this$static, child, container){\n  $removeFromParent(child);\n  $add_5(this$static.children, child);\n  $appendChild(container, $resolve(child.element_0));\n  $setParent(child, this$static);\n}\n\nfunction $adjustIndex(this$static, child, beforeIndex){\n  var idx;\n  $checkIndexBoundsForInsertion(this$static, beforeIndex);\n  if (child.getParent() == this$static) {\n    idx = $indexOf(this$static.children, child);\n    idx < beforeIndex && --beforeIndex;\n  }\n  return beforeIndex;\n}\n\nfunction $checkIndexBoundsForInsertion(this$static, index){\n  if (index < 0 || index > this$static.children.size) {\n    throw new IndexOutOfBoundsException_0;\n  }\n}\n\nfunction $insert(this$static, child, container, beforeIndex, domInsert){\n  beforeIndex = $adjustIndex(this$static, child, beforeIndex);\n  $removeFromParent(child);\n  $insert_0(this$static.children, child, beforeIndex);\n  domInsert?insertChild(container, child.element_0, beforeIndex):$appendChild(container, $resolve(child.element_0));\n  $setParent(child, this$static);\n}\n\nfunction $remove_1(this$static, w){\n  var elem;\n  if (w.getParent() != this$static) {\n    return false;\n  }\n  try {\n    $setParent(w, null);\n  }\n   finally {\n    elem = w.element_0;\n    $removeChild($getParentElement(elem), elem);\n    $remove_5(this$static.children, w);\n  }\n  return true;\n}\n\nfunction ComplexPanel_0(){\n  this.children = new WidgetCollection_0(this);\n}\n\nfunction ComplexPanel(){\n}\n\n_ = ComplexPanel.prototype = new Panel;\n_.getClass$ = function getClass_172(){\n  return Lcom_google_gwt_user_client_ui_ComplexPanel_2_classLit;\n}\n;\n_.getWidgetIndex = function getWidgetIndex(child){\n  return $indexOf(this.children, child);\n}\n;\n_.iterator_0 = function iterator_1(){\n  return new WidgetCollection$WidgetIterator_0(this.children);\n}\n;\n_.remove = function remove_1(w){\n  return $remove_1(this, w);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]);\nfunction $add_1(this$static, w){\n  $add_0(this$static, w, this$static.element_0);\n}\n\nfunction $add_2(this$static, w, left, top_0){\n  var beforeIndex;\n  $removeFromParent(w);\n  beforeIndex = this$static.children.size;\n  this$static.setWidgetPositionImpl(w, left, top_0);\n  $insert(this$static, w, this$static.element_0, beforeIndex, true);\n}\n\nfunction $checkWidgetParent(this$static, w){\n  if (w.parent_1 != this$static) {\n    throw new IllegalArgumentException_0('Widget must be a child of this panel.');\n  }\n}\n\nfunction $remove_2(this$static, w){\n  var removed;\n  removed = $remove_1(this$static, w);\n  removed && changeToStaticPositioning(w.element_0);\n  return removed;\n}\n\nfunction $setWidgetPosition(this$static, w, left, top_0){\n  $checkWidgetParent(this$static, w);\n  this$static.setWidgetPositionImpl(w, left, top_0);\n}\n\nfunction $setWidgetPositionImpl(w, left, top_0){\n  var h_0;\n  h_0 = w.element_0;\n  if (left == -1 && top_0 == -1) {\n    changeToStaticPositioning(h_0);\n  }\n   else {\n    h_0.style['position'] = 'absolute';\n    h_0.style['left'] = left + 'px';\n    h_0.style['top'] = top_0 + 'px';\n  }\n}\n\nfunction AbsolutePanel_0(){\n  AbsolutePanel_1.call(this, $doc.createElement('div'));\n  this.element_0.style['position'] = 'relative';\n  this.element_0.style['overflow'] = 'hidden';\n}\n\nfunction AbsolutePanel_1(elem){\n  ComplexPanel_0.call(this);\n  this.element_0 = elem;\n}\n\nfunction changeToStaticPositioning(elem){\n  elem.style['left'] = '';\n  elem.style['top'] = '';\n  elem.style['position'] = '';\n}\n\nfunction AbsolutePanel(){\n}\n\n_ = AbsolutePanel_0.prototype = AbsolutePanel.prototype = new ComplexPanel;\n_.getClass$ = function getClass_173(){\n  return Lcom_google_gwt_user_client_ui_AbsolutePanel_2_classLit;\n}\n;\n_.insert = function insert(w, beforeIndex){\n  $insert(this, w, this.element_0, beforeIndex, true);\n}\n;\n_.remove = function remove_2(w){\n  return $remove_2(this, w);\n}\n;\n_.setWidgetPositionImpl = function setWidgetPositionImpl(w, left, top_0){\n  $setWidgetPositionImpl(w, left, top_0);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$AbsolutePanel, Q$HasVisibility, Q$InsertPanel, Q$IsWidget, Q$UIObject, Q$Widget]);\nfunction $clinit_AttachDetachException(){\n  $clinit_AttachDetachException = nullMethod;\n  attachCommand = new AttachDetachException$1_0;\n  detachCommand = new AttachDetachException$2_0;\n}\n\nfunction AttachDetachException_0(causes){\n  UmbrellaException_2.call(this, causes);\n}\n\nfunction tryCommand(hasWidgets, c){\n  $clinit_AttachDetachException();\n  var $e0, caught, e, w, w$iterator;\n  caught = null;\n  for (w$iterator = hasWidgets.iterator_0(); w$iterator.hasNext();) {\n    w = dynamicCast(w$iterator.next_0(), Q$Widget);\n    try {\n      c.execute_1(w);\n    }\n     catch ($e0) {\n      $e0 = caught_0($e0);\n      if (instanceOf($e0, Q$Throwable)) {\n        e = $e0;\n        !caught && (caught = new HashSet_0);\n        $add_11(caught, e);\n      }\n       else \n        throw $e0;\n    }\n  }\n  if (caught) {\n    throw new AttachDetachException_0(caught);\n  }\n}\n\nfunction AttachDetachException(){\n}\n\n_ = AttachDetachException_0.prototype = AttachDetachException.prototype = new UmbrellaException;\n_.getClass$ = function getClass_174(){\n  return Lcom_google_gwt_user_client_ui_AttachDetachException_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$UmbrellaException, Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable]);\nvar attachCommand, detachCommand;\nfunction AttachDetachException$1_0(){\n}\n\nfunction AttachDetachException$1(){\n}\n\n_ = AttachDetachException$1_0.prototype = AttachDetachException$1.prototype = new Object_0;\n_.execute_1 = function execute_6(w){\n  w.onAttach();\n}\n;\n_.getClass$ = function getClass_175(){\n  return Lcom_google_gwt_user_client_ui_AttachDetachException$1_2_classLit;\n}\n;\nfunction AttachDetachException$2_0(){\n}\n\nfunction AttachDetachException$2(){\n}\n\n_ = AttachDetachException$2_0.prototype = AttachDetachException$2.prototype = new Object_0;\n_.execute_1 = function execute_7(w){\n  w.onDetach();\n}\n;\n_.getClass$ = function getClass_176(){\n  return Lcom_google_gwt_user_client_ui_AttachDetachException$2_2_classLit;\n}\n;\nfunction FocusWidget(){\n}\n\n_ = FocusWidget.prototype = new Widget;\n_.getClass$ = function getClass_177(){\n  return Lcom_google_gwt_user_client_ui_FocusWidget_2_classLit;\n}\n;\n_.getTabIndex = function getTabIndex(){\n  return this.element_0.tabIndex;\n}\n;\n_.onAttach = function onAttach_1(){\n  var tabIndex;\n  $onAttach(this);\n  tabIndex = this.getTabIndex();\n  -1 == tabIndex && this.setTabIndex(0);\n}\n;\n_.setTabIndex = function setTabIndex(index){\n  $setTabIndex(this.element_0, index);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]);\nfunction $setText(this$static, text){\n  $setInnerText(this$static.element_0, text);\n}\n\nfunction ButtonBase_0(elem){\n  this.element_0 = elem;\n}\n\nfunction ButtonBase(){\n}\n\n_ = ButtonBase.prototype = new FocusWidget;\n_.getClass$ = function getClass_178(){\n  return Lcom_google_gwt_user_client_ui_ButtonBase_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]);\nfunction Button_0(){\n  var e;\n  ButtonBase_0.call(this, (e = $doc.createElement('BUTTON') , e.type = 'button' , e));\n  this.element_0['className'] = 'gwt-Button';\n  $setInnerHTML(this.element_0, 'Minimize');\n}\n\nfunction Button(){\n}\n\n_ = Button_0.prototype = Button.prototype = new ButtonBase;\n_.getClass$ = function getClass_179(){\n  return Lcom_google_gwt_user_client_ui_Button_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]);\nfunction CellPanel_0(){\n  ComplexPanel_0.call(this);\n  this.table = $doc.createElement('table');\n  this.body_0 = $doc.createElement('tbody');\n  $appendChild(this.table, $resolve(this.body_0));\n  $setElement(this, this.table);\n}\n\nfunction CellPanel(){\n}\n\n_ = CellPanel.prototype = new ComplexPanel;\n_.getClass$ = function getClass_180(){\n  return Lcom_google_gwt_user_client_ui_CellPanel_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]);\n_.body_0 = null;\n_.table = null;\nfunction $getValue(this$static){\n  return this$static.attached?($clinit_Boolean() , this$static.inputElem.checked?TRUE:FALSE):($clinit_Boolean() , this$static.inputElem.defaultChecked?TRUE:FALSE);\n}\n\nfunction $setValue_0(this$static, value, fireEvents){\n  var oldValue;\n  !value && (value = ($clinit_Boolean() , FALSE));\n  oldValue = this$static.attached?($clinit_Boolean() , this$static.inputElem.checked?TRUE:FALSE):($clinit_Boolean() , this$static.inputElem.defaultChecked?TRUE:FALSE);\n  $setChecked(this$static.inputElem, value.value_0);\n  $setDefaultChecked(this$static.inputElem, value.value_0);\n  if (!!oldValue && oldValue.value_0 == value.value_0) {\n    return;\n  }\n  fireEvents && fire_3(this$static);\n}\n\nfunction CheckBox_0(){\n  var e;\n  CheckBox_1.call(this, (e = $doc.createElement('INPUT') , e.type = 'checkbox' , e.value = 'on' , e));\n  this.element_0['className'] = 'gwt-CheckBox';\n  $setTextOrHtml(this.directionalTextHelper, 'Multi-Select', false);\n}\n\nfunction CheckBox_1(elem){\n  var uid;\n  ButtonBase_0.call(this, $doc.createElement('span'));\n  this.inputElem = elem;\n  this.labelElem = $doc.createElement('label');\n  $appendChild(this.element_0, this.inputElem);\n  $appendChild(this.element_0, this.labelElem);\n  uid = $createUniqueId($doc);\n  this.inputElem['id'] = uid;\n  $setHtmlFor(this.labelElem, uid);\n  this.directionalTextHelper = new DirectionalTextHelper_0(this.labelElem);\n  !!this.inputElem && (this.inputElem.tabIndex = 0 , undefined);\n}\n\nfunction CheckBox(){\n}\n\n_ = CheckBox_0.prototype = CheckBox.prototype = new ButtonBase;\n_.getClass$ = function getClass_181(){\n  return Lcom_google_gwt_user_client_ui_CheckBox_2_classLit;\n}\n;\n_.getTabIndex = function getTabIndex_0(){\n  return this.inputElem.tabIndex;\n}\n;\n_.onLoad = function onLoad_0(){\n  this.inputElem.__listener = this;\n}\n;\n_.onUnload = function onUnload_1(){\n  this.inputElem.__listener = null;\n  $setValue_0(this, this.attached?($clinit_Boolean() , this.inputElem.checked?TRUE:FALSE):($clinit_Boolean() , this.inputElem.defaultChecked?TRUE:FALSE), false);\n}\n;\n_.setTabIndex = function setTabIndex_0(index){\n  !!this.inputElem && $setTabIndex(this.inputElem, index);\n}\n;\n_.sinkEvents = function sinkEvents_2(eventBitsToAdd){\n  this.eventsToSink == -1?sinkEvents_1(this.inputElem, eventBitsToAdd | (this.inputElem.__eventBits || 0)):this.eventsToSink == -1?sinkEvents_0(this.element_0, eventBitsToAdd | (this.element_0.__eventBits || 0)):(this.eventsToSink |= eventBitsToAdd);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]);\n_.directionalTextHelper = null;\n_.inputElem = null;\n_.labelElem = null;\nfunction $getTextOrHtml(this$static){\n  var elem;\n  elem = this$static.isSpanWrapped?$getFirstChildElement(this$static.element):this$static.element;\n  return elem.innerHTML;\n}\n\nfunction $setTextOrHtml(this$static, content_0, isHtml){\n  this$static.isSpanWrapped = false;\n  isHtml?$setInnerHTML(this$static.element, content_0):$setInnerText(this$static.element, content_0);\n  if (this$static.textDir != this$static.initialElementDir) {\n    this$static.textDir = this$static.initialElementDir;\n    setDirectionOnElement(this$static.element, this$static.initialElementDir);\n  }\n}\n\nfunction DirectionalTextHelper_0(element){\n  this.element = element;\n  this.isSpanWrapped = false;\n  this.initialElementDir = getDirectionOnElement(element);\n  this.textDir = this.initialElementDir;\n}\n\nfunction DirectionalTextHelper(){\n}\n\n_ = DirectionalTextHelper_0.prototype = DirectionalTextHelper.prototype = new Object_0;\n_.getClass$ = function getClass_182(){\n  return Lcom_google_gwt_user_client_ui_DirectionalTextHelper_2_classLit;\n}\n;\n_.element = null;\n_.initialElementDir = null;\n_.isSpanWrapped = false;\n_.textDir = null;\nfunction FocusPanel_0(){\n  var e;\n  SimplePanel_1.call(this, (e = $doc.createElement('div') , e.tabIndex = 0 , e));\n}\n\nfunction FocusPanel(){\n}\n\n_ = FocusPanel_0.prototype = FocusPanel.prototype = new SimplePanel;\n_.getClass$ = function getClass_183(){\n  return Lcom_google_gwt_user_client_ui_FocusPanel_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$SimplePanel, Q$UIObject, Q$Widget]);\nfunction $checkCellBounds(this$static, row, column){\n  var cellSize;\n  $checkRowBounds(this$static, row);\n  if (column < 0) {\n    throw new IndexOutOfBoundsException_1('Column ' + column + ' must be non-negative: ' + column);\n  }\n  cellSize = this$static.numColumns;\n  if (cellSize <= column) {\n    throw new IndexOutOfBoundsException_1('Column index: ' + column + ', Column size: ' + this$static.numColumns);\n  }\n}\n\nfunction $checkRowBounds(this$static, row){\n  var rowSize;\n  rowSize = this$static.numRows;\n  if (row >= rowSize || row < 0) {\n    throw new IndexOutOfBoundsException_1('Row index: ' + row + ', Row size: ' + rowSize);\n  }\n}\n\nfunction $cleanCell(this$static, row, column, clearInnerHTML){\n  var td;\n  td = $getRawElement(this$static.cellFormatter, row, column);\n  $internalClearCell(this$static, td, clearInnerHTML);\n  return td;\n}\n\nfunction $clear_0(this$static, clearInnerHTML){\n  var col, row;\n  for (row = 0; row < this$static.numRows; ++row) {\n    for (col = 0; col < this$static.numColumns; ++col) {\n      $cleanCell(this$static, row, col, clearInnerHTML);\n    }\n  }\n}\n\nfunction $getCellForEvent(this$static, event_0){\n  var column, row, td;\n  td = $getEventTargetCell(this$static, event_0.nativeEvent);\n  if (!td) {\n    return null;\n  }\n  row = $getParentElement(td).sectionRowIndex;\n  column = td.cellIndex;\n  return new HTMLTable$Cell_0(this$static, row, column);\n}\n\nfunction $getEventTargetCell(this$static, event_0){\n  var body, td, tr;\n  td = event_0.target;\n  for (; td; td = $getParentElement(td)) {\n    if ($equalsIgnoreCase($getPropertyString(td, 'tagName'), 'td')) {\n      tr = $getParentElement(td);\n      body = $getParentElement(tr);\n      if (body == this$static.bodyElem) {\n        return td;\n      }\n    }\n    if (td == this$static.bodyElem) {\n      return null;\n    }\n  }\n  return null;\n}\n\nfunction $internalClearCell(this$static, td, clearInnerHTML){\n  var maybeChild, widget;\n  maybeChild = $getFirstChildElement(td);\n  widget = null;\n  !!maybeChild && (widget = dynamicCast($get(this$static.widgetMap, maybeChild), Q$Widget));\n  if (widget) {\n    $remove_3(this$static, widget);\n    return true;\n  }\n   else {\n    clearInnerHTML && $setInnerHTML(td, '');\n    return false;\n  }\n}\n\nfunction $remove_3(this$static, widget){\n  var elem;\n  if (widget.getParent() != this$static) {\n    return false;\n  }\n  try {\n    $setParent(widget, null);\n  }\n   finally {\n    elem = widget.element_0;\n    $removeChild($getParentElement(elem), elem);\n    $removeByElement(this$static.widgetMap, elem);\n  }\n  return true;\n}\n\nfunction $removeRow(this$static, row){\n  var column, columnCount;\n  columnCount = this$static.numColumns;\n  for (column = 0; column < columnCount; ++column) {\n    $cleanCell(this$static, row, column, false);\n  }\n  $removeChild(this$static.bodyElem, $getRow(this$static.bodyElem, row));\n}\n\nfunction $setCellFormatter(this$static, cellFormatter){\n  this$static.cellFormatter = cellFormatter;\n}\n\nfunction $setColumnFormatter(this$static, formatter){\n  !!this$static.columnFormatter && (formatter.columnGroup = this$static.columnFormatter.columnGroup);\n  this$static.columnFormatter = formatter;\n  $prepareColumnGroup(this$static.columnFormatter);\n}\n\nfunction $setHTML(this$static, row, column, html){\n  var td;\n  $prepareCell(this$static, row, column);\n  td = $cleanCell(this$static, row, column, html == null);\n  html != null && $setInnerHTML(td, html);\n}\n\nfunction $setText_0(this$static, row, text){\n  var td;\n  $prepareCell(this$static, row, 0);\n  td = $cleanCell(this$static, row, 0, text == null);\n  text != null && $setInnerText(td, text);\n}\n\nfunction $setWidget_0(this$static, row, widget){\n  var td;\n  $prepareCell(this$static, row, 0);\n  td = $cleanCell(this$static, row, 0, true);\n  if (widget) {\n    $removeFromParent(widget);\n    $put(this$static.widgetMap, widget);\n    $appendChild(td, $resolve(widget.element_0));\n    $setParent(widget, this$static);\n  }\n}\n\nfunction HTMLTable(){\n}\n\n_ = HTMLTable.prototype = new Panel;\n_.getClass$ = function getClass_184(){\n  return Lcom_google_gwt_user_client_ui_HTMLTable_2_classLit;\n}\n;\n_.iterator_0 = function iterator_2(){\n  return new HTMLTable$1_0(this);\n}\n;\n_.remove = function remove_3(widget){\n  return $remove_3(this, widget);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]);\n_.bodyElem = null;\n_.cellFormatter = null;\n_.columnFormatter = null;\n_.tableElem = null;\nfunction $prepareCell(this$static, row, column){\n  $prepareRow(this$static, row);\n  if (column < 0) {\n    throw new IndexOutOfBoundsException_1('Cannot access a column with a negative index: ' + column);\n  }\n  if (column >= this$static.numColumns) {\n    throw new IndexOutOfBoundsException_1('Column index: ' + column + ', Column size: ' + this$static.numColumns);\n  }\n}\n\nfunction $prepareRow(this$static, row){\n  if (row < 0) {\n    throw new IndexOutOfBoundsException_1('Cannot access a row with a negative index: ' + row);\n  }\n  if (row >= this$static.numRows) {\n    throw new IndexOutOfBoundsException_1('Row index: ' + row + ', Row size: ' + this$static.numRows);\n  }\n}\n\nfunction $removeRow_0(this$static, row){\n  $removeRow(this$static, row);\n  --this$static.numRows;\n}\n\nfunction $resizeColumns(this$static, columns){\n  var i, j, td, tr, td_0, tr_0, td_1;\n  if (this$static.numColumns == columns) {\n    return;\n  }\n  if (columns < 0) {\n    throw new IndexOutOfBoundsException_1('Cannot set number of columns to ' + columns);\n  }\n  if (this$static.numColumns > columns) {\n    for (i = 0; i < this$static.numRows; ++i) {\n      for (j = this$static.numColumns - 1; j >= columns; --j) {\n        $checkCellBounds(this$static, i, j);\n        td = $cleanCell(this$static, i, j, false);\n        tr = $getRow(this$static.bodyElem, i);\n        tr.removeChild(td);\n      }\n    }\n  }\n   else {\n    for (i = 0; i < this$static.numRows; ++i) {\n      for (j = this$static.numColumns; j < columns; ++j) {\n        tr_0 = $getRow(this$static.bodyElem, i);\n        td_0 = (td_1 = $doc.createElement('td') , $setInnerHTML(td_1, '&nbsp;') , td_1);\n        $insertChild(tr_0, $resolve(td_0), j);\n      }\n    }\n  }\n  this$static.numColumns = columns;\n  $resizeColumnGroup(this$static.columnFormatter, columns, false);\n}\n\nfunction $resizeRows(this$static, rows){\n  if (this$static.numRows == rows) {\n    return;\n  }\n  if (rows < 0) {\n    throw new IndexOutOfBoundsException_1('Cannot set number of rows to ' + rows);\n  }\n  if (this$static.numRows < rows) {\n    addRows(this$static.bodyElem, rows - this$static.numRows, this$static.numColumns);\n    this$static.numRows = rows;\n  }\n   else {\n    while (this$static.numRows > rows) {\n      $removeRow_0(this$static, this$static.numRows - 1);\n    }\n  }\n}\n\nfunction Grid_0(rows, columns){\n  this.widgetMap = new ElementMapperImpl_0;\n  this.tableElem = $doc.createElement('table');\n  this.bodyElem = $doc.createElement('tbody');\n  $appendChild(this.tableElem, $resolve(this.bodyElem));\n  $setElement(this, this.tableElem);\n  $setCellFormatter(this, new HTMLTable$CellFormatter_0(this));\n  $setColumnFormatter(this, new HTMLTable$ColumnFormatter_0(this));\n  $resizeColumns(this, columns);\n  $resizeRows(this, rows);\n}\n\nfunction addRows(table, rows, columns){\n  var td = $doc.createElement('td');\n  td.innerHTML = '&nbsp;';\n  var row = $doc.createElement('tr');\n  for (var cellNum = 0; cellNum < columns; cellNum++) {\n    var cell = td.cloneNode(true);\n    row.appendChild(cell);\n  }\n  table.appendChild(row);\n  for (var rowNum = 1; rowNum < rows; rowNum++) {\n    table.appendChild(row.cloneNode(true));\n  }\n}\n\nfunction Grid(){\n}\n\n_ = Grid_0.prototype = Grid.prototype = new HTMLTable;\n_.getClass$ = function getClass_185(){\n  return Lcom_google_gwt_user_client_ui_Grid_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]);\n_.numColumns = 0;\n_.numRows = 0;\nfunction $setAutoHorizontalAlignment(this$static, autoAlignment){\n  this$static.autoHorizontalAlignment = autoAlignment;\n  $updateHorizontalAlignment(this$static);\n}\n\nfunction $updateHorizontalAlignment(this$static){\n  var align;\n  !this$static.autoHorizontalAlignment?(align = null):this$static.autoHorizontalAlignment?(align = this$static.autoHorizontalAlignment):(align = this$static.autoHorizontalAlignment == ($clinit_HasAutoHorizontalAlignment() , ALIGN_CONTENT_START)?startOf(this$static.directionalTextHelper.textDir):endOf(this$static.directionalTextHelper.textDir));\n  if (align != this$static.horzAlign) {\n    this$static.horzAlign = align;\n    this$static.element_0.style['textAlign'] = !this$static.horzAlign?'':this$static.horzAlign.textAlignString;\n  }\n}\n\nfunction LabelBase_0(element){\n  this.element_0 = element;\n  this.directionalTextHelper = new DirectionalTextHelper_0(this.element_0);\n}\n\nfunction LabelBase(){\n}\n\n_ = LabelBase.prototype = new Widget;\n_.getClass$ = function getClass_186(){\n  return Lcom_google_gwt_user_client_ui_LabelBase_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]);\n_.autoHorizontalAlignment = null;\n_.directionalTextHelper = null;\n_.horzAlign = null;\nfunction $setText_1(this$static, text){\n  $setTextOrHtml(this$static.directionalTextHelper, text, false);\n  $updateHorizontalAlignment(this$static);\n}\n\nfunction Label_0(text){\n  LabelBase_0.call(this, $doc.createElement('div'));\n  this.element_0['className'] = 'gwt-Label';\n  $setTextOrHtml(this.directionalTextHelper, text, false);\n  $updateHorizontalAlignment(this);\n}\n\nfunction Label_1(element){\n  LabelBase_0.call(this, element, $equalsIgnoreCase('span', element.tagName));\n}\n\nfunction Label(){\n}\n\n_ = Label_0.prototype = Label.prototype = new LabelBase;\n_.getClass$ = function getClass_187(){\n  return Lcom_google_gwt_user_client_ui_Label_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]);\nfunction HTML_0(){\n  Label_1.call(this, $doc.createElement('div'));\n  this.element_0['className'] = 'gwt-HTML';\n}\n\nfunction HTML_1(html){\n  HTML_0.call(this);\n  $setTextOrHtml(this.directionalTextHelper, html, true);\n  $updateHorizontalAlignment(this);\n}\n\nfunction HTML(){\n}\n\n_ = HTML_1.prototype = HTML_0.prototype = HTML.prototype = new Label;\n_.getClass$ = function getClass_188(){\n  return Lcom_google_gwt_user_client_ui_HTML_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]);\nfunction $findNext(this$static){\n  while (++this$static.nextIndex < this$static.widgetList.size) {\n    if ($get_2(this$static.widgetList, this$static.nextIndex) != null) {\n      return;\n    }\n  }\n}\n\nfunction $next_0(this$static){\n  var result;\n  if (this$static.nextIndex >= this$static.widgetList.size) {\n    throw new NoSuchElementException_0;\n  }\n  result = dynamicCast($get_2(this$static.widgetList, this$static.nextIndex), Q$Widget);\n  this$static.lastIndex_0 = this$static.nextIndex;\n  $findNext(this$static);\n  return result;\n}\n\nfunction HTMLTable$1_0(this$0){\n  this.this$0 = this$0;\n  this.widgetList = this.this$0.widgetMap.uiObjectList;\n  $findNext(this);\n}\n\nfunction HTMLTable$1(){\n}\n\n_ = HTMLTable$1_0.prototype = HTMLTable$1.prototype = new Object_0;\n_.getClass$ = function getClass_189(){\n  return Lcom_google_gwt_user_client_ui_HTMLTable$1_2_classLit;\n}\n;\n_.hasNext = function hasNext_0(){\n  return this.nextIndex < this.widgetList.size;\n}\n;\n_.next_0 = function next_1(){\n  return $next_0(this);\n}\n;\n_.remove_0 = function remove_4(){\n  var w;\n  if (this.lastIndex_0 < 0) {\n    throw new IllegalStateException_0;\n  }\n  w = dynamicCast($get_2(this.widgetList, this.lastIndex_0), Q$Widget);\n  $removeFromParent(w);\n  this.lastIndex_0 = -1;\n}\n;\n_.lastIndex_0 = -1;\n_.nextIndex = -1;\n_.this$0 = null;\nfunction HTMLTable$Cell_0(this$0, rowIndex, cellIndex){\n  this.this$0 = this$0;\n  this.cellIndex_0 = cellIndex;\n  this.rowIndex = rowIndex;\n}\n\nfunction HTMLTable$Cell(){\n}\n\n_ = HTMLTable$Cell_0.prototype = HTMLTable$Cell.prototype = new Object_0;\n_.getClass$ = function getClass_190(){\n  return Lcom_google_gwt_user_client_ui_HTMLTable$Cell_2_classLit;\n}\n;\n_.cellIndex_0 = 0;\n_.rowIndex = 0;\n_.this$0 = null;\nfunction $getCellElement(table, row, col){\n  return table.rows[row].cells[col];\n}\n\nfunction $getElement(this$static, row, column){\n  $checkCellBounds(this$static.this$0, row, column);\n  return $getCellElement(this$static.this$0.bodyElem, row, column);\n}\n\nfunction $getRawElement(this$static, row, column){\n  return $getCellElement(this$static.this$0.bodyElem, row, column);\n}\n\nfunction $setAlignment(this$static, row, hAlign, vAlign){\n  var elem;\n  $prepareCell(this$static.this$0, row, 0);\n  elem = $getCellElement(this$static.this$0.bodyElem, row, 0);\n  elem['align'] = hAlign.textAlignString;\n  $prepareCell(this$static.this$0, row, 0);\n  setStyleAttribute($getCellElement(this$static.this$0.bodyElem, row, 0), 'verticalAlign', vAlign.verticalAlignString);\n}\n\nfunction $setStyleName_1(this$static, row){\n  $prepareCell(this$static.this$0, row, 0);\n  $getCellElement(this$static.this$0.bodyElem, row, 0)['className'] = 'var';\n}\n\nfunction HTMLTable$CellFormatter_0(this$0){\n  this.this$0 = this$0;\n}\n\nfunction HTMLTable$CellFormatter(){\n}\n\n_ = HTMLTable$CellFormatter_0.prototype = HTMLTable$CellFormatter.prototype = new Object_0;\n_.getClass$ = function getClass_191(){\n  return Lcom_google_gwt_user_client_ui_HTMLTable$CellFormatter_2_classLit;\n}\n;\n_.this$0 = null;\nfunction $prepareColumnGroup(this$static){\n  if (!this$static.columnGroup) {\n    this$static.columnGroup = $doc.createElement('colgroup');\n    insertChild(this$static.this$0.tableElem, this$static.columnGroup, 0);\n    $appendChild(this$static.columnGroup, $resolve($doc.createElement('col')));\n  }\n}\n\nfunction $resizeColumnGroup(this$static, columns, growOnly){\n  var i, num;\n  columns = columns > 1?columns:1;\n  num = this$static.columnGroup.childNodes.length;\n  if (num < columns) {\n    for (i = num; i < columns; ++i) {\n      $appendChild(this$static.columnGroup, $doc.createElement('col'));\n    }\n  }\n   else if (!growOnly && num > columns) {\n    for (i = num; i > columns; --i) {\n      $removeChild(this$static.columnGroup, this$static.columnGroup.lastChild);\n    }\n  }\n}\n\nfunction HTMLTable$ColumnFormatter_0(this$0){\n  this.this$0 = this$0;\n}\n\nfunction HTMLTable$ColumnFormatter(){\n}\n\n_ = HTMLTable$ColumnFormatter_0.prototype = HTMLTable$ColumnFormatter.prototype = new Object_0;\n_.getClass$ = function getClass_192(){\n  return Lcom_google_gwt_user_client_ui_HTMLTable$ColumnFormatter_2_classLit;\n}\n;\n_.columnGroup = null;\n_.this$0 = null;\nfunction $getRow(elem, row){\n  return elem.rows[row];\n}\n\nfunction $clinit_HasAutoHorizontalAlignment(){\n  $clinit_HasAutoHorizontalAlignment = nullMethod;\n  ALIGN_CONTENT_START = new HasHorizontalAlignment$AutoHorizontalAlignmentConstant_0;\n}\n\nvar ALIGN_CONTENT_START;\nfunction $clinit_HasHorizontalAlignment(){\n  $clinit_HasHorizontalAlignment = nullMethod;\n  ALIGN_CENTER = new HasHorizontalAlignment$HorizontalAlignmentConstant_0('center');\n  new HasHorizontalAlignment$HorizontalAlignmentConstant_0('justify');\n  ALIGN_LEFT = new HasHorizontalAlignment$HorizontalAlignmentConstant_0('left');\n  ALIGN_RIGHT = new HasHorizontalAlignment$HorizontalAlignmentConstant_0('right');\n  ALIGN_LOCALE_START = ALIGN_LEFT;\n  ALIGN_LOCALE_END = ALIGN_RIGHT;\n  ALIGN_DEFAULT = ALIGN_LOCALE_START;\n}\n\nvar ALIGN_CENTER, ALIGN_DEFAULT, ALIGN_LEFT, ALIGN_LOCALE_END, ALIGN_LOCALE_START, ALIGN_RIGHT;\nfunction HasHorizontalAlignment$AutoHorizontalAlignmentConstant_0(){\n}\n\nfunction HasHorizontalAlignment$AutoHorizontalAlignmentConstant(){\n}\n\n_ = HasHorizontalAlignment$AutoHorizontalAlignmentConstant_0.prototype = HasHorizontalAlignment$AutoHorizontalAlignmentConstant.prototype = new Object_0;\n_.getClass$ = function getClass_193(){\n  return Lcom_google_gwt_user_client_ui_HasHorizontalAlignment$AutoHorizontalAlignmentConstant_2_classLit;\n}\n;\nfunction HasHorizontalAlignment$HorizontalAlignmentConstant_0(textAlignString){\n  this.textAlignString = textAlignString;\n}\n\nfunction endOf(direction){\n  return direction == ($clinit_HasDirection$Direction() , LTR)?($clinit_HasHorizontalAlignment() , ALIGN_RIGHT):direction == RTL?($clinit_HasHorizontalAlignment() , ALIGN_LEFT):($clinit_HasHorizontalAlignment() , ALIGN_LOCALE_END);\n}\n\nfunction startOf(direction){\n  return direction == ($clinit_HasDirection$Direction() , LTR)?($clinit_HasHorizontalAlignment() , ALIGN_LEFT):direction == RTL?($clinit_HasHorizontalAlignment() , ALIGN_RIGHT):($clinit_HasHorizontalAlignment() , ALIGN_LOCALE_START);\n}\n\nfunction HasHorizontalAlignment$HorizontalAlignmentConstant(){\n}\n\n_ = HasHorizontalAlignment$HorizontalAlignmentConstant_0.prototype = HasHorizontalAlignment$HorizontalAlignmentConstant.prototype = new HasHorizontalAlignment$AutoHorizontalAlignmentConstant;\n_.getClass$ = function getClass_194(){\n  return Lcom_google_gwt_user_client_ui_HasHorizontalAlignment$HorizontalAlignmentConstant_2_classLit;\n}\n;\n_.textAlignString = null;\nfunction $clinit_HasVerticalAlignment(){\n  $clinit_HasVerticalAlignment = nullMethod;\n  ALIGN_BOTTOM = new HasVerticalAlignment$VerticalAlignmentConstant_0('bottom');\n  ALIGN_MIDDLE = new HasVerticalAlignment$VerticalAlignmentConstant_0('middle');\n  ALIGN_TOP = new HasVerticalAlignment$VerticalAlignmentConstant_0('top');\n}\n\nvar ALIGN_BOTTOM, ALIGN_MIDDLE, ALIGN_TOP;\nfunction HasVerticalAlignment$VerticalAlignmentConstant_0(verticalAlignString){\n  this.verticalAlignString = verticalAlignString;\n}\n\nfunction HasVerticalAlignment$VerticalAlignmentConstant(){\n}\n\n_ = HasVerticalAlignment$VerticalAlignmentConstant_0.prototype = HasVerticalAlignment$VerticalAlignmentConstant.prototype = new Object_0;\n_.getClass$ = function getClass_195(){\n  return Lcom_google_gwt_user_client_ui_HasVerticalAlignment$VerticalAlignmentConstant_2_classLit;\n}\n;\n_.verticalAlignString = null;\nfunction $add_3(this$static, w){\n  var td;\n  td = $createAlignedTd(this$static);\n  $appendChild(this$static.tableRow, $resolve(td));\n  $add_0(this$static, w, td);\n}\n\nfunction $createAlignedTd(this$static){\n  var td;\n  td = $doc.createElement('td');\n  td['align'] = this$static.horzAlign.textAlignString;\n  setStyleAttribute(td, 'verticalAlign', this$static.vertAlign.verticalAlignString);\n  return td;\n}\n\nfunction $setVerticalAlignment(this$static, align){\n  this$static.vertAlign = align;\n}\n\nfunction HorizontalPanel_0(){\n  CellPanel_0.call(this);\n  this.horzAlign = ($clinit_HasHorizontalAlignment() , ALIGN_DEFAULT);\n  this.vertAlign = ($clinit_HasVerticalAlignment() , ALIGN_TOP);\n  this.tableRow = $doc.createElement('tr');\n  $appendChild(this.body_0, $resolve(this.tableRow));\n  this.table['cellSpacing'] = '0';\n  this.table['cellPadding'] = '0';\n}\n\nfunction HorizontalPanel(){\n}\n\n_ = HorizontalPanel_0.prototype = HorizontalPanel.prototype = new CellPanel;\n_.getClass$ = function getClass_196(){\n  return Lcom_google_gwt_user_client_ui_HorizontalPanel_2_classLit;\n}\n;\n_.insert = function insert_0(w, beforeIndex){\n  var td;\n  $checkIndexBoundsForInsertion(this, beforeIndex);\n  td = $createAlignedTd(this);\n  insertChild(this.tableRow, td, beforeIndex);\n  $insert(this, w, td, beforeIndex, false);\n}\n;\n_.remove = function remove_5(w){\n  var removed, td;\n  td = $getParentElement(w.element_0);\n  removed = $remove_1(this, w);\n  removed && $removeChild(this.tableRow, td);\n  return removed;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$InsertPanel, Q$IsWidget, Q$UIObject, Q$Widget]);\n_.tableRow = null;\nfunction $onResize(){\n  var height, style, width, winHeight, winWidth;\n  style = null.nullMethod();\n  winWidth = $getClientWidth_0($doc);\n  winHeight = $getClientHeight_0($doc);\n  style['display'] = ($clinit_Style$Display() , 'none');\n  style['width'] = 0 + ($clinit_Style$Unit() , 'px');\n  style['height'] = '0px';\n  width = $getScrollWidth($doc);\n  height = $getScrollHeight($doc);\n  style['width'] = (width > winWidth?width:winWidth) + 'px';\n  style['height'] = (height > winHeight?height:winHeight) + 'px';\n  style['display'] = 'block';\n}\n\nfunction PopupPanel$1_0(){\n}\n\nfunction PopupPanel$1(){\n}\n\n_ = PopupPanel$1_0.prototype = PopupPanel$1.prototype = new Object_0;\n_.getClass$ = function getClass_197(){\n  return Lcom_google_gwt_user_client_ui_PopupPanel$1_2_classLit;\n}\n;\n_.onResize = function onResize_1(event_0){\n  $onResize();\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$ResizeHandler, Q$EventHandler]);\nfunction PopupPanel$3_0(this$0){\n  this.this$0 = this$0;\n}\n\nfunction PopupPanel$3(){\n}\n\n_ = PopupPanel$3_0.prototype = PopupPanel$3.prototype = new Object_0;\n_.getClass$ = function getClass_198(){\n  return Lcom_google_gwt_user_client_ui_PopupPanel$3_2_classLit;\n}\n;\n_.onPreviewNativeEvent = function onPreviewNativeEvent_0(event_0){\n  $previewNativeEvent(this.this$0, event_0);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$EventHandler, Q$Event$NativePreviewHandler]);\n_.this$0 = null;\nfunction PopupPanel$4_0(this$0){\n  this.this$0 = this$0;\n}\n\nfunction PopupPanel$4(){\n}\n\n_ = PopupPanel$4_0.prototype = PopupPanel$4.prototype = new Object_0;\n_.getClass$ = function getClass_199(){\n  return Lcom_google_gwt_user_client_ui_PopupPanel$4_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$ValueChangeHandler, Q$EventHandler]);\n_.this$0 = null;\nfunction $maybeShowGlass(this$static){\n  if (this$static.showing) {\n    if (this$static.curPanel.isGlassEnabled) {\n      $appendChild($doc.body, this$static.curPanel.glass);\n      this$static.resizeRegistration = addResizeHandler(this$static.curPanel.glassResizer);\n      $onResize();\n      this$static.glassShowing = true;\n    }\n  }\n   else if (this$static.glassShowing) {\n    $removeChild($doc.body, this$static.curPanel.glass);\n    $removeHandler(this$static.resizeRegistration.real);\n    this$static.resizeRegistration = null;\n    this$static.glassShowing = false;\n  }\n}\n\nfunction $onComplete(this$static){\n  if (!this$static.showing) {\n    $maybeShowGlass(this$static);\n    this$static.isUnloading || $remove_2(($clinit_RootPanel() , get()), this$static.curPanel);\n  }\n  this$static.curPanel.element_0.style['clip'] = 'rect(auto, auto, auto, auto)';\n  this$static.curPanel.element_0.style['overflow'] = 'visible';\n}\n\nfunction $onInstantaneousRun(this$static){\n  $maybeShowGlass(this$static);\n  if (this$static.showing) {\n    this$static.curPanel.element_0.style['position'] = 'absolute';\n    this$static.curPanel.topPosition != -1 && $setPopupPosition(this$static.curPanel, this$static.curPanel.leftPosition, this$static.curPanel.topPosition);\n    $add_1(($clinit_RootPanel() , get()), this$static.curPanel);\n  }\n   else {\n    this$static.isUnloading || $remove_2(($clinit_RootPanel() , get()), this$static.curPanel);\n  }\n  this$static.curPanel.element_0.style['overflow'] = 'visible';\n}\n\nfunction $onUpdate(this$static, progress){\n  var bottom, height, left, right, top_0, width;\n  this$static.showing || (progress = 1 - progress);\n  top_0 = 0;\n  left = 0;\n  right = 0;\n  bottom = 0;\n  height = round_int(progress * this$static.offsetHeight_0);\n  width = round_int(progress * this$static.offsetWidth_0);\n  switch (0) {\n    case 2:\n    case 0:\n      top_0 = this$static.offsetHeight_0 - height >> 1;\n      left = this$static.offsetWidth_0 - width >> 1;\n      right = left + width;\n      bottom = top_0 + height;\n  }\n  $setClip(this$static.curPanel.element_0, 'rect(' + top_0 + 'px, ' + right + 'px, ' + bottom + 'px, ' + left + 'px)');\n}\n\nfunction $setState(this$static, showing, isUnloading){\n  this$static.isUnloading = isUnloading;\n  $cancel(this$static);\n  this$static.curPanel.showing = showing;\n  $updateHandlers(this$static.curPanel);\n  this$static.showing = showing;\n  $onInstantaneousRun(this$static);\n}\n\nfunction PopupPanel$ResizeAnimation_0(panel){\n  Animation_0.call(this, ($clinit_AnimationSchedulerImpl() , INSTANCE));\n  this.curPanel = panel;\n}\n\nfunction PopupPanel$ResizeAnimation(){\n}\n\n_ = PopupPanel$ResizeAnimation_0.prototype = PopupPanel$ResizeAnimation.prototype = new Animation;\n_.getClass$ = function getClass_200(){\n  return Lcom_google_gwt_user_client_ui_PopupPanel$ResizeAnimation_2_classLit;\n}\n;\n_.curPanel = null;\n_.glassShowing = false;\n_.isUnloading = false;\n_.offsetHeight_0 = 0;\n_.offsetWidth_0 = -1;\n_.resizeRegistration = null;\n_.showing = false;\nfunction $resolve(this$static){\n  return this$static.__gwt_resolve?this$static.__gwt_resolve():this$static;\n}\n\nfunction $sinkEvents(this$static, eventBitsToAdd){\n  if (this$static.eventsToSink == -1) {\n    sinkEvents_1(this$static.inputElem, eventBitsToAdd | (this$static.inputElem.__eventBits || 0));\n    sinkEvents_1(this$static.labelElem, eventBitsToAdd | (this$static.labelElem.__eventBits || 0));\n  }\n   else {\n    this$static.eventsToSink == -1?sinkEvents_1(this$static.inputElem, eventBitsToAdd | (this$static.inputElem.__eventBits || 0)):this$static.eventsToSink == -1?sinkEvents_0(this$static.element_0, eventBitsToAdd | (this$static.element_0.__eventBits || 0)):(this$static.eventsToSink |= eventBitsToAdd);\n  }\n}\n\nfunction RadioButton_0(label){\n  var elem;\n  CheckBox_1.call(this, (elem = $doc.createElement('INPUT') , elem.type = 'radio' , elem.name = 'mode' , elem.value = 'on' , elem));\n  this.element_0['className'] = 'gwt-RadioButton';\n  $sinkEvents(this, 1);\n  $sinkEvents(this, 8);\n  $sinkEvents(this, 4096);\n  $sinkEvents(this, 128);\n  $setTextOrHtml(this.directionalTextHelper, label, false);\n}\n\nfunction RadioButton(){\n}\n\n_ = RadioButton_0.prototype = RadioButton.prototype = new CheckBox;\n_.getClass$ = function getClass_201(){\n  return Lcom_google_gwt_user_client_ui_RadioButton_2_classLit;\n}\n;\n_.onBrowserEvent = function onBrowserEvent_0(event_0){\n  var target;\n  switch ($eventGetTypeInt(event_0.type)) {\n    case 8:\n    case 4096:\n    case 128:\n      this.oldValue = this.attached?($clinit_Boolean() , this.inputElem.checked?TRUE:FALSE):($clinit_Boolean() , this.inputElem.defaultChecked?TRUE:FALSE);\n      break;\n    case 1:\n      target = event_0.target;\n      if (is_0(target) && $isOrHasChild(this.labelElem, target)) {\n        this.oldValue = this.attached?($clinit_Boolean() , this.inputElem.checked?TRUE:FALSE):($clinit_Boolean() , this.inputElem.defaultChecked?TRUE:FALSE);\n        return;\n      }\n\n      $onBrowserEvent(this, event_0);\n      fireIfNotEqual(this, this.oldValue, this.attached?($clinit_Boolean() , this.inputElem.checked?TRUE:FALSE):($clinit_Boolean() , this.inputElem.defaultChecked?TRUE:FALSE));\n      return;\n  }\n  $onBrowserEvent(this, event_0);\n}\n;\n_.sinkEvents = function sinkEvents_3(eventBitsToAdd){\n  $sinkEvents(this, eventBitsToAdd);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]);\n_.oldValue = null;\nfunction $clinit_RootPanel(){\n  $clinit_RootPanel = nullMethod;\n  maybeDetachCommand = new RootPanel$1_0;\n  rootPanels = new HashMap_0;\n  widgetsToDetach = new HashSet_0;\n}\n\nfunction RootPanel_0(elem){\n  AbsolutePanel_1.call(this, elem);\n  $onAttach(this);\n}\n\nfunction detachNow(widget){\n  $clinit_RootPanel();\n  try {\n    widget.onDetach();\n  }\n   finally {\n    $remove_14(widgetsToDetach, widget);\n  }\n}\n\nfunction detachWidgets(){\n  $clinit_RootPanel();\n  try {\n    tryCommand(widgetsToDetach, maybeDetachCommand);\n  }\n   finally {\n    $clearImpl(widgetsToDetach.map);\n    $clearImpl(rootPanels);\n  }\n}\n\nfunction get(){\n  $clinit_RootPanel();\n  var rp;\n  rp = dynamicCast($get_0(rootPanels, null), Q$RootPanel);\n  if (rp) {\n    return rp;\n  }\n  rootPanels.size == 0 && addCloseHandler(new RootPanel$2_0);\n  rp = new RootPanel$DefaultRootPanel_0;\n  $put_0(rootPanels, null, rp);\n  $add_11(widgetsToDetach, rp);\n  return rp;\n}\n\nfunction RootPanel(){\n}\n\n_ = RootPanel.prototype = new AbsolutePanel;\n_.getClass$ = function getClass_202(){\n  return Lcom_google_gwt_user_client_ui_RootPanel_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$AbsolutePanel, Q$HasVisibility, Q$InsertPanel, Q$IsWidget, Q$RootPanel, Q$UIObject, Q$Widget]);\nvar maybeDetachCommand, rootPanels, widgetsToDetach;\nfunction RootPanel$1_0(){\n}\n\nfunction RootPanel$1(){\n}\n\n_ = RootPanel$1_0.prototype = RootPanel$1.prototype = new Object_0;\n_.execute_1 = function execute_8(w){\n  w.attached && w.onDetach();\n}\n;\n_.getClass$ = function getClass_203(){\n  return Lcom_google_gwt_user_client_ui_RootPanel$1_2_classLit;\n}\n;\nfunction RootPanel$2_0(){\n}\n\nfunction RootPanel$2(){\n}\n\n_ = RootPanel$2_0.prototype = RootPanel$2.prototype = new Object_0;\n_.getClass$ = function getClass_204(){\n  return Lcom_google_gwt_user_client_ui_RootPanel$2_2_classLit;\n}\n;\n_.onClose = function onClose_0(closeEvent){\n  detachWidgets();\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$CloseHandler, Q$EventHandler]);\nfunction RootPanel$DefaultRootPanel_0(){\n  RootPanel_0.call(this, $doc.body);\n}\n\nfunction RootPanel$DefaultRootPanel(){\n}\n\n_ = RootPanel$DefaultRootPanel_0.prototype = RootPanel$DefaultRootPanel.prototype = new RootPanel;\n_.getClass$ = function getClass_205(){\n  return Lcom_google_gwt_user_client_ui_RootPanel$DefaultRootPanel_2_classLit;\n}\n;\n_.setWidgetPositionImpl = function setWidgetPositionImpl_0(w, left, top_0){\n  left -= 0;\n  top_0 -= 0;\n  $setWidgetPositionImpl(w, left, top_0);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$AbsolutePanel, Q$HasVisibility, Q$InsertPanel, Q$IsWidget, Q$RootPanel, Q$UIObject, Q$Widget]);\nfunction $getMaximumHorizontalScrollPosition_0(scrollable){\n  return $isRtl(scrollable)?0:(scrollable.scrollWidth || 0) - scrollable.clientWidth;\n}\n\nfunction $getMinimumHorizontalScrollPosition_0(scrollable){\n  return $isRtl(scrollable)?scrollable.clientWidth - (scrollable.scrollWidth || 0):0;\n}\n\nfunction $isRtl(scrollable){\n  var computedStyle = $doc.defaultView.getComputedStyle(scrollable, null);\n  return computedStyle.getPropertyValue('direction') == 'rtl';\n}\n\nfunction ScrollImpl_0(){\n}\n\nfunction ScrollImpl(){\n}\n\n_ = ScrollImpl_0.prototype = ScrollImpl.prototype = new Object_0;\n_.getClass$ = function getClass_206(){\n  return Lcom_google_gwt_user_client_ui_ScrollImpl_2_classLit;\n}\n;\nvar impl_4 = null;\nfunction $next_1(this$static){\n  if (!this$static.hasElement || !this$static.this$0.widget) {\n    throw new NoSuchElementException_0;\n  }\n  this$static.hasElement = false;\n  return this$static.returned = this$static.this$0.widget;\n}\n\nfunction SimplePanel$1_0(this$0){\n  this.this$0 = this$0;\n  this.hasElement = !!this.this$0.widget;\n}\n\nfunction SimplePanel$1(){\n}\n\n_ = SimplePanel$1_0.prototype = SimplePanel$1.prototype = new Object_0;\n_.getClass$ = function getClass_207(){\n  return Lcom_google_gwt_user_client_ui_SimplePanel$1_2_classLit;\n}\n;\n_.hasNext = function hasNext_1(){\n  return this.hasElement;\n}\n;\n_.next_0 = function next_2(){\n  return $next_1(this);\n}\n;\n_.remove_0 = function remove_6(){\n  !!this.returned && $remove(this.this$0, this.returned);\n}\n;\n_.returned = null;\n_.this$0 = null;\nfunction $add_4(this$static, w){\n  var td, tr;\n  tr = $doc.createElement('tr');\n  td = $createAlignedTd_0(this$static);\n  $appendChild(tr, $resolve(td));\n  $appendChild(this$static.body_0, $resolve(tr));\n  $add_0(this$static, w, td);\n}\n\nfunction $createAlignedTd_0(this$static){\n  var td;\n  td = $doc.createElement('td');\n  td['align'] = this$static.horzAlign.textAlignString;\n  setStyleAttribute(td, 'verticalAlign', this$static.vertAlign.verticalAlignString);\n  return td;\n}\n\nfunction VerticalPanel_0(){\n  CellPanel_0.call(this);\n  this.horzAlign = ($clinit_HasHorizontalAlignment() , ALIGN_DEFAULT);\n  this.vertAlign = ($clinit_HasVerticalAlignment() , ALIGN_TOP);\n  this.table['cellSpacing'] = '0';\n  this.table['cellPadding'] = '0';\n}\n\nfunction VerticalPanel(){\n}\n\n_ = VerticalPanel_0.prototype = VerticalPanel.prototype = new CellPanel;\n_.getClass$ = function getClass_208(){\n  return Lcom_google_gwt_user_client_ui_VerticalPanel_2_classLit;\n}\n;\n_.insert = function insert_1(w, beforeIndex){\n  var td, tr;\n  $checkIndexBoundsForInsertion(this, beforeIndex);\n  tr = $doc.createElement('tr');\n  td = $createAlignedTd_0(this);\n  $appendChild(tr, $resolve(td));\n  insertChild(this.body_0, tr, beforeIndex);\n  $insert(this, w, td, beforeIndex, false);\n}\n;\n_.remove = function remove_7(w){\n  var removed, td;\n  td = $getParentElement(w.element_0);\n  removed = $remove_1(this, w);\n  removed && $removeChild(this.body_0, $getParentElement(td));\n  return removed;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$InsertPanel, Q$IsWidget, Q$UIObject, Q$Widget]);\nfunction $add_5(this$static, w){\n  $insert_0(this$static, w, this$static.size);\n}\n\nfunction $indexOf(this$static, w){\n  var i;\n  for (i = 0; i < this$static.size; ++i) {\n    if (this$static.array[i] == w) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction $insert_0(this$static, w, beforeIndex){\n  var i, newArray;\n  if (beforeIndex < 0 || beforeIndex > this$static.size) {\n    throw new IndexOutOfBoundsException_0;\n  }\n  if (this$static.size == this$static.array.length) {\n    newArray = initDim(_3Lcom_google_gwt_user_client_ui_Widget_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$Widget, this$static.array.length * 2, 0);\n    for (i = 0; i < this$static.array.length; ++i) {\n      setCheck(newArray, i, this$static.array[i]);\n    }\n    this$static.array = newArray;\n  }\n  ++this$static.size;\n  for (i = this$static.size - 1; i > beforeIndex; --i) {\n    setCheck(this$static.array, i, this$static.array[i - 1]);\n  }\n  setCheck(this$static.array, beforeIndex, w);\n}\n\nfunction $remove_4(this$static, index){\n  var i;\n  if (index < 0 || index >= this$static.size) {\n    throw new IndexOutOfBoundsException_0;\n  }\n  --this$static.size;\n  for (i = index; i < this$static.size; ++i) {\n    setCheck(this$static.array, i, this$static.array[i + 1]);\n  }\n  setCheck(this$static.array, this$static.size, null);\n}\n\nfunction $remove_5(this$static, w){\n  var index;\n  index = $indexOf(this$static, w);\n  if (index == -1) {\n    throw new NoSuchElementException_0;\n  }\n  $remove_4(this$static, index);\n}\n\nfunction WidgetCollection_0(parent_0){\n  this.parent_0 = parent_0;\n  this.array = initDim(_3Lcom_google_gwt_user_client_ui_Widget_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$Widget, 4, 0);\n}\n\nfunction WidgetCollection(){\n}\n\n_ = WidgetCollection_0.prototype = WidgetCollection.prototype = new Object_0;\n_.getClass$ = function getClass_209(){\n  return Lcom_google_gwt_user_client_ui_WidgetCollection_2_classLit;\n}\n;\n_.iterator_0 = function iterator_3(){\n  return new WidgetCollection$WidgetIterator_0(this);\n}\n;\n_.array = null;\n_.parent_0 = null;\n_.size = 0;\nfunction $next_2(this$static){\n  if (this$static.index_0 >= this$static.this$0.size) {\n    throw new NoSuchElementException_0;\n  }\n  return this$static.this$0.array[++this$static.index_0];\n}\n\nfunction $remove_6(this$static){\n  if (this$static.index_0 < 0 || this$static.index_0 >= this$static.this$0.size) {\n    throw new IllegalStateException_0;\n  }\n  this$static.this$0.parent_0.remove(this$static.this$0.array[this$static.index_0--]);\n}\n\nfunction WidgetCollection$WidgetIterator_0(this$0){\n  this.this$0 = this$0;\n}\n\nfunction WidgetCollection$WidgetIterator(){\n}\n\n_ = WidgetCollection$WidgetIterator_0.prototype = WidgetCollection$WidgetIterator.prototype = new Object_0;\n_.getClass$ = function getClass_210(){\n  return Lcom_google_gwt_user_client_ui_WidgetCollection$WidgetIterator_2_classLit;\n}\n;\n_.hasNext = function hasNext_2(){\n  return this.index_0 < this.this$0.size - 1;\n}\n;\n_.next_0 = function next_3(){\n  return $next_2(this);\n}\n;\n_.remove_0 = function remove_8(){\n  $remove_6(this);\n}\n;\n_.index_0 = -1;\n_.this$0 = null;\nfunction $setClip(popup, rect){\n  popup.style['clip'] = rect;\n}\n\nfunction $removeHandler(this$static){\n  $doRemove(this$static.this$0, this$static.val$type, this$static.val$handler);\n}\n\nfunction SimpleEventBus$1_0(this$0, val$type, val$handler){\n  this.this$0 = this$0;\n  this.val$type = val$type;\n  this.val$handler = val$handler;\n}\n\nfunction SimpleEventBus$1(){\n}\n\n_ = SimpleEventBus$1_0.prototype = SimpleEventBus$1.prototype = new Object_0;\n_.getClass$ = function getClass_211(){\n  return Lcom_google_web_bindery_event_shared_SimpleEventBus$1_2_classLit;\n}\n;\n_.this$0 = null;\n_.val$handler = null;\n_.val$type = null;\nfunction SimpleEventBus$2_0(this$0, val$type, val$handler){\n  this.this$0 = this$0;\n  this.val$type = val$type;\n  this.val$handler = val$handler;\n}\n\nfunction SimpleEventBus$2(){\n}\n\n_ = SimpleEventBus$2_0.prototype = SimpleEventBus$2.prototype = new Object_0;\n_.execute = function execute_9(){\n  $doAddNow(this.this$0, this.val$type, this.val$handler);\n}\n;\n_.getClass$ = function getClass_212(){\n  return Lcom_google_web_bindery_event_shared_SimpleEventBus$2_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$SimpleEventBus$Command]);\n_.this$0 = null;\n_.val$handler = null;\n_.val$type = null;\nfunction SimpleEventBus$3_0(this$0, val$type, val$handler){\n  this.this$0 = this$0;\n  this.val$type = val$type;\n  this.val$handler = val$handler;\n}\n\nfunction SimpleEventBus$3(){\n}\n\n_ = SimpleEventBus$3_0.prototype = SimpleEventBus$3.prototype = new Object_0;\n_.execute = function execute_10(){\n  $doRemoveNow(this.this$0, this.val$type, this.val$handler);\n}\n;\n_.getClass$ = function getClass_213(){\n  return Lcom_google_web_bindery_event_shared_SimpleEventBus$3_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$SimpleEventBus$Command]);\n_.this$0 = null;\n_.val$handler = null;\n_.val$type = null;\nfunction $clinit_Log(){\n  $clinit_Log = nullMethod;\n  log_0 = ($clinit_Logger() , $getLoggerHelper('logger'));\n}\n\nfunction info_0(msg){\n  $clinit_Log();\n  $info_0(log_0, msg);\n}\n\nfunction severe(msg){\n  $clinit_Log();\n  $severe_0(log_0, msg);\n}\n\nvar log_0;\nfunction TopNodesNotFoundException_0(){\n  Exception_0.call(this, 'The MathML is invalid, It must contain the following pattern for the top layer of the equation:\\n<mrow>[left side of eqation]<\\/mrow>\\n\\t<mo>=<mo>\\n<mrow>[right side of eqation]<\\/mrow>\\n');\n}\n\nfunction TopNodesNotFoundException(){\n}\n\n_ = TopNodesNotFoundException_0.prototype = TopNodesNotFoundException.prototype = new Exception;\n_.getClass$ = function getClass_214(){\n  return Lcom_sciencegadgets_client_TopNodesNotFoundException_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$TopNodesNotFoundException, Q$Serializable, Q$Exception, Q$Throwable]);\nfunction $clinit_AlgOutEntry(){\n  $clinit_AlgOutEntry = nullMethod;\n  algOut = new Grid_0(0, 1);\n  wrapperPanel = new AbsolutePanel_0;\n  algDragPanel = new AbsolutePanel_0;\n  spAlg_0 = new ScrollPanel_1(algOut);\n}\n\nfunction updateAlgOut(mathML, wrappers, change){\n  $clinit_AlgOutEntry();\n  var newRowCount;\n  newRowCount = algOut.numRows;\n  if (newRowCount == 0) {\n    ++newRowCount;\n    $resizeRows(algOut, newRowCount);\n  }\n   else {\n    newRowCount = algOut.numRows + 2;\n    $resizeRows(algOut, newRowCount);\n    $setStyleName_1(algOut.cellFormatter, newRowCount - 2);\n    $setWidget_0(algOut, newRowCount - 2, new HTML_1(change));\n    $setWidget_0(algOut, newRowCount - 3, prevEquation);\n  }\n  $setWidget_0(algOut, newRowCount - 1, wrapperPanel);\n  prevEquation = new HTML_1($getTextOrHtml(mathML.directionalTextHelper));\n  $clear(wrapperPanel);\n  $add_1(wrapperPanel, new AlgebraManipulator_0(mathML, wrappers, wrapperPanel));\n  $scrollToBottom(spAlg_0);\n}\n\nvar algDragPanel, algOut, prevEquation = null, spAlg_0, wrapperPanel;\nfunction $makeWrappers(this$static, wrappers){\n  var algLeft, algTop, height, positionLeft, positionTop, width, wrap, wrap$iterator, wrapLeft, wrapTop;\n  algLeft = $getAbsoluteLeft(this$static.parentPanel.element_0);\n  algTop = $getAbsoluteTop(this$static.parentPanel.element_0);\n  for (wrap$iterator = $listIterator(wrappers, 0); wrap$iterator.currentNode != wrap$iterator.this$0.header;) {\n    wrap = dynamicCast($next_6(wrap$iterator), Q$MLElementWrapper);\n    if (!wrap) {\n      continue;\n    }\n    if (!wrap.element) {\n      severe('no element for: ' + $toString(wrap));\n      continue;\n    }\n    wrapLeft = $getAbsoluteLeft(wrap.element);\n    wrapTop = $getAbsoluteTop(wrap.element);\n    positionLeft = wrapLeft - algLeft;\n    positionTop = wrapTop - algTop;\n    width = round_int(0.75 * $getPropertyInt(this$static.draggableEquation.element_0, 'offsetHeight'));\n    height = $getPropertyInt(this$static.draggableEquation.element_0, 'offsetHeight');\n    setStyleAttribute(wrap.element_0, 'width', width + 'px');\n    setStyleAttribute(wrap.element_0, 'height', height + 'px');\n    $add_2(this$static.parentPanel, wrap, positionLeft, positionTop);\n  }\n}\n\nfunction AlgebraManipulator_0(draggableEquation, wrappers, parentPanel){\n  AbsolutePanel_0.call(this);\n  this.draggableEquation = draggableEquation;\n  this.parentPanel = parentPanel;\n  $clear(parentPanel);\n  $add_0(parentPanel, draggableEquation, parentPanel.element_0);\n  $makeWrappers(this, wrappers);\n}\n\nfunction AlgebraManipulator(){\n}\n\n_ = AlgebraManipulator_0.prototype = AlgebraManipulator.prototype = new AbsolutePanel;\n_.getClass$ = function getClass_215(){\n  return Lcom_sciencegadgets_client_algebramanipulation_AlgebraManipulator_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$AbsolutePanel, Q$HasVisibility, Q$InsertPanel, Q$IsWidget, Q$UIObject, Q$Widget]);\n_.draggableEquation = null;\n_.parentPanel = null;\nfunction parseJQMath(element){\n  $wnd.M.parseMath(element);\n}\n\nfunction selectEquation(mathML, changeComment){\n  var $e0, e;\n  info_0('EqTrans: ' + $getTextOrHtml(mathML.directionalTextHelper));\n  $clear(($clinit_TreeEntry() , apTree));\n  try {\n    $clinit_Log();\n    $info_0(log_0, '____New Tree, making____');\n    jTree_0 = new JohnTree_0(mathML, ($clinit_Boolean() , $clinit_Boolean() , TRUE));\n    new TreeCanvas_0(apTree, jTree_0);\n    $info_0(log_0, '====New Tree, made====');\n  }\n   catch ($e0) {\n    $e0 = caught_0($e0);\n    if (instanceOf($e0, Q$TopNodesNotFoundException)) {\n      e = $e0;\n      $printStackTrace(e);\n      $clinit_Log();\n      $severe_0(log_0, 'NEW TREE FAIL');\n    }\n     else \n      throw $e0;\n  }\n  updateAlgOut(jTree_0.mathML, jTree_0.wrappers, changeComment);\n  assign(jTree_0.wrappers, ($clinit_Boolean() , $clinit_Boolean() , TRUE));\n}\n\nfunction transport(mathML){\n  var $e0, e;\n  try {\n    $clinit_Log();\n    $info_0(log_0, '----Initial tree, making----');\n    jTree_0 = new JohnTree_0(mathML, ($clinit_Boolean() , $clinit_Boolean() , TRUE));\n    mathML = $toMathML(jTree_0);\n    $info_0(log_0, '----Initial tree, made----');\n    $clear_0(($clinit_AlgOutEntry() , algOut), true);\n    $resizeRows(algOut, 0);\n    selectEquation(mathML, 'firstComment');\n  }\n   catch ($e0) {\n    $e0 = caught_0($e0);\n    if (instanceOf($e0, Q$TopNodesNotFoundException)) {\n      e = $e0;\n      $printStackTrace(e);\n      $clinit_Log();\n      $severe_0(log_0, 'INITIAL TREE FAIL');\n    }\n     else \n      throw $e0;\n  }\n}\n\nvar jTree_0 = null;\nfunction $addDragController(this$static){\n  var dragC;\n  if (this$static.isDraggable.value_0) {\n    dragC = new WrapDragController_0(dynamicCast(this$static.parent_1, Q$AbsolutePanel));\n    this$static.dragController = dragC;\n    $makeDraggable(this$static.dragController, this$static);\n  }\n  return this$static.dragController;\n}\n\nfunction $select(this$static, select){\n  var dropC, dropC$iterator, style, style$index, style$max, styles;\n  if (select.value_0) {\n    this$static.element_0.id = 'selectedWrapper';\n    this$static.joinedWrapper.element_0.id = 'selectedWrapper';\n    for (dropC$iterator = $iterator($keySet(this$static.dragController.dropMap)); $hasNext_0(dropC$iterator.val$outerIter.iter);) {\n      dropC = dynamicCast($next_5(dropC$iterator), Q$DropController);\n      $equals('com.sciencegadgets.client.algebramanipulation.dropcontrollers.DropControllerAddition', dropC.getClass$().typeName)?(style = 'selectedDropWrapperAddition'):$equals('com.sciencegadgets.client.algebramanipulation.dropcontrollers.DropControllerMultiplication', dropC.getClass$().typeName)?(style = 'selectedDropWrapperMultiplication'):(style = 'selectedDropWrapperDefault');\n      dropC.getDropTarget().setStyleName(style);\n      $setStyleName_0(dynamicCast(dropC.getDropTarget(), Q$MLElementWrapper).joinedWrapper, style);\n    }\n  }\n   else {\n    this$static.element_0.removeAttribute('id');\n    this$static.joinedWrapper.element_0.removeAttribute('id');\n    for (dropC$iterator = $iterator($keySet(this$static.dragController.dropMap)); $hasNext_0(dropC$iterator.val$outerIter.iter);) {\n      dropC = dynamicCast($next_5(dropC$iterator), Q$DropController);\n      styles = $split($getPropertyString(dropC.getDropTarget().getStyleElement(), 'className'), ' ', 0);\n      for (style$index = 0 , style$max = styles.length; style$index < style$max; ++style$index) {\n        style = styles[style$index];\n        if (style.indexOf('selectedDropWrapper') == 0) {\n          $removeStyleName(dropC.getDropTarget(), style);\n          $removeStyleName(dynamicCast(dropC.getDropTarget(), Q$MLElementWrapper).joinedWrapper, style);\n        }\n      }\n    }\n  }\n}\n\nfunction MLElementWrapper_0(jNode, isDraggable, isJoined){\n  HTML_0.call(this);\n  this.element = jNode.domNode;\n  this.johnNode = jNode;\n  this.isDraggable = isDraggable;\n  $addDomHandler(this, new MLElementWrapper$ElementOverHandler_0(this), ($clinit_MouseOverEvent() , $clinit_MouseOverEvent() , TYPE_3));\n  $addDomHandler(this, new MLElementWrapper$ElementOutHandler_0(this), ($clinit_MouseOutEvent() , $clinit_MouseOutEvent() , TYPE_2));\n  $addDomHandler(this, new MLElementWrapper$ElementClickHandler_0(this), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE));\n  if (isJoined.value_0) {\n    this.joinedWrapper = new MLElementWrapper_0(jNode, isDraggable, ($clinit_Boolean() , $clinit_Boolean() , FALSE));\n    this.joinedWrapper.joinedWrapper = this;\n  }\n}\n\nfunction MLElementWrapper(){\n}\n\n_ = MLElementWrapper_0.prototype = MLElementWrapper.prototype = new HTML;\n_.getClass$ = function getClass_216(){\n  return Lcom_sciencegadgets_client_algebramanipulation_MLElementWrapper_2_classLit;\n}\n;\n_.onAttach = function onAttach_2(){\n  $onAttach(this);\n  $addDragController(this);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget, Q$MLElementWrapper]);\n_.dragController = null;\n_.element = null;\n_.isDraggable = null;\n_.johnNode = null;\n_.joinedWrapper = null;\nfunction MLElementWrapper$ElementClickHandler_0(this$0){\n  this.this$0 = this$0;\n}\n\nfunction MLElementWrapper$ElementClickHandler(){\n}\n\n_ = MLElementWrapper$ElementClickHandler_0.prototype = MLElementWrapper$ElementClickHandler.prototype = new Object_0;\n_.getClass$ = function getClass_217(){\n  return Lcom_sciencegadgets_client_algebramanipulation_MLElementWrapper$ElementClickHandler_2_classLit;\n}\n;\n_.onClick = function onClick_0(event_0){\n  $select(this.this$0, ($clinit_Boolean() , $clinit_Boolean() , TRUE));\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$ClickHandler, Q$EventHandler]);\n_.this$0 = null;\nfunction MLElementWrapper$ElementOutHandler_0(this$0){\n  this.this$0 = this$0;\n}\n\nfunction MLElementWrapper$ElementOutHandler(){\n}\n\n_ = MLElementWrapper$ElementOutHandler_0.prototype = MLElementWrapper$ElementOutHandler.prototype = new Object_0;\n_.getClass$ = function getClass_218(){\n  return Lcom_sciencegadgets_client_algebramanipulation_MLElementWrapper$ElementOutHandler_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$MouseOutHandler, Q$EventHandler, Q$MLElementWrapper$ElementOutHandler]);\n_.this$0 = null;\nfunction MLElementWrapper$ElementOverHandler_0(this$0){\n  this.this$0 = this$0;\n}\n\nfunction MLElementWrapper$ElementOverHandler(){\n}\n\n_ = MLElementWrapper$ElementOverHandler_0.prototype = MLElementWrapper$ElementOverHandler.prototype = new Object_0;\n_.getClass$ = function getClass_219(){\n  return Lcom_sciencegadgets_client_algebramanipulation_MLElementWrapper$ElementOverHandler_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$MouseOverHandler, Q$EventHandler, Q$MLElementWrapper$ElementOverHandler]);\n_.this$0 = null;\nfunction $registerDropController(this$static, dropController){\n  $add_10(this$static.dropControllerList, dropController);\n  if (instanceOf(dropController.dropTarget_0, Q$MLElementWrapper)) {\n    $put_0(this$static.dropMap, dropController, dynamicCast(dropController.dropTarget_0, Q$MLElementWrapper));\n  }\n   else if (!instanceOf(dropController.dropTarget_0, Q$AbsolutePanel)) {\n    severe(\"Didn't register \" + $toString(dropController.dropTarget_0));\n    throw new ClassCastException_1;\n  }\n}\n\nfunction WrapDragController_0(boundaryPanel){\n  $clinit_AbstractDragController();\n  this.boundaryPanel = boundaryPanel;\n  this.context = new DragContext_0(this);\n  this.mouseDragHandler = new MouseDragHandler_0(this.context);\n  this.dropControllerList = new ArrayList_0;\n  this.boundaryDropController = new BoundaryDropController_0(boundaryPanel);\n  this.registerDropController(this.boundaryDropController);\n  this.dropControllerCollection = new DropControllerCollection_0(this.dropControllerList);\n  this.dropMap = new HashMap_0;\n  this.dragStartSensitivityPixels = 5;\n}\n\nfunction WrapDragController(){\n}\n\n_ = WrapDragController_0.prototype = WrapDragController.prototype = new PickupDragController;\n_.dragEnd = function dragEnd_1(){\n  var wrap;\n  $dragEnd(this);\n  wrap = this.context.draggable;\n  $setTextOrHtml(wrap.directionalTextHelper, '', false);\n  $updateHorizontalAlignment(wrap);\n  $select(wrap, ($clinit_Boolean() , $clinit_Boolean() , FALSE));\n}\n;\n_.dragStart = function dragStart_1(){\n  var wrap;\n  $dragStart(this);\n  wrap = this.context.draggable;\n  $setText_1(wrap, wrap.johnNode.symbol);\n}\n;\n_.getClass$ = function getClass_220(){\n  return Lcom_sciencegadgets_client_algebramanipulation_WrapDragController_2_classLit;\n}\n;\n_.registerDropController = function registerDropController_0(dropController){\n  $registerDropController(this, dropController);\n}\n;\n_.dropMap = null;\nfunction AbstractMathDropController_0(dropTarget){\n  AbstractDropController_0.call(this, dropTarget);\n  this.target_0 = dropTarget;\n}\n\nfunction AbstractMathDropController(){\n}\n\n_ = AbstractMathDropController.prototype = new AbstractDropController;\n_.getClass$ = function getClass_221(){\n  return Lcom_sciencegadgets_client_algebramanipulation_dropcontrollers_AbstractMathDropController_2_classLit;\n}\n;\n_.onDrop = function onDrop_1(context){\n  var $e0, $e1, baseParent, e, mathML, sourceParent, wrap, wrap$iterator;\n  this.source = context.draggable;\n  this.sourceNode = this.source.johnNode;\n  this.targetNode = this.target_0.johnNode;\n  sourceParent = $getParent(this.sourceNode);\n  this.onChange();\n  try {\n    if (sourceParent.children.size == 1) {\n      try {\n        baseParent = $getParent(sourceParent);\n        $add_7(baseParent, $indexOf_0(sourceParent.parent_0.children, sourceParent), dynamicCast($get_1(sourceParent.children, 0), Q$JohnTree$JohnNode));\n        $remove_7(sourceParent);\n        info_0('removed obsolete parent: ' + sourceParent.symbol);\n      }\n       catch ($e1) {\n        $e1 = caught_0($e1);\n        if (instanceOf($e1, Q$NullPointerException)) {\n          e = $e1;\n          $printStackTrace(e);\n        }\n         else \n          throw $e1;\n      }\n    }\n  }\n   catch ($e0) {\n    $e0 = caught_0($e0);\n    if (instanceOf($e0, Q$NullPointerException)) {\n      e = $e0;\n      severe('source has no parent: ' + this.sourceNode.symbol);\n      $printStackTrace(e);\n    }\n     else \n      throw $e0;\n  }\n  for (wrap$iterator = $listIterator(this.targetNode.this$0.tree.wrappers, 0); wrap$iterator.currentNode != wrap$iterator.this$0.header;) {\n    wrap = dynamicCast($next_6(wrap$iterator), Q$MLElementWrapper);\n    setStyleName(wrap.element_0, 'selectedDropWrapper', false);\n    $removeStyleName(wrap.joinedWrapper, 'selectedDropWrapper');\n  }\n  mathML = $toMathML(this.targetNode.this$0.tree);\n  info_0('transporting: ' + $getTextOrHtml(mathML.directionalTextHelper));\n  selectEquation(mathML, this.changeComment());\n}\n;\n_.onEnter = function onEnter_1(context){\n  $addStyleName(this.target_0, 'mouseOverlay');\n}\n;\n_.onLeave = function onLeave_1(context){\n  $setStyleName(this.dropTarget_0, 'dragdrop-dropTarget-engage', false);\n  $removeStyleName(this.target_0, 'mouseOverlay');\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$DropController]);\n_.change = '';\n_.source = null;\n_.sourceNode = null;\n_.target_0 = null;\n_.targetNode = null;\nfunction DropControllerAddition_0(dropTarget){\n  AbstractMathDropController_0.call(this, dropTarget);\n}\n\nfunction DropControllerAddition(){\n}\n\n_ = DropControllerAddition_0.prototype = DropControllerAddition.prototype = new AbstractMathDropController;\n_.changeComment = function changeComment_0(){\n  return 'Simplify: ' + this.change;\n}\n;\n_.getClass$ = function getClass_222(){\n  return Lcom_sciencegadgets_client_algebramanipulation_dropcontrollers_DropControllerAddition_2_classLit;\n}\n;\n_.onChange = function onChange(){\n  var $e0, answer, leftNode, leftPerentheses, prevChild, rightNode, rightPerentheses, sourceValue, targetParent, targetValue;\n  sourceValue = __parseAndValidateInt(this.source.johnNode.symbol);\n  targetValue = __parseAndValidateInt(this.target_0.johnNode.symbol);\n  answer = sourceValue + targetValue;\n  this.change = targetValue + ' + ' + sourceValue + ' = ' + answer;\n  $setString(this.targetNode, '' + answer);\n  $setInnerText(this.targetNode.wrapper.element, '' + answer);\n  if ($getIndex(this.sourceNode) > 0) {\n    prevChild = $getSibling(this.sourceNode, -1);\n    $equals('+', prevChild.symbol) && $remove_7(prevChild);\n  }\n   else {\n    $equals('+', $getSibling(this.sourceNode, 1).symbol) && $remove_7($getSibling(this.sourceNode, 1));\n  }\n  leftPerentheses = null;\n  rightPerentheses = null;\n  try {\n    targetParent = $getParent(this.targetNode);\n    leftPerentheses = $getSibling(targetParent, -1);\n    rightPerentheses = $getSibling(targetParent, 1);\n  }\n   catch ($e0) {\n    $e0 = caught_0($e0);\n    if (!instanceOf($e0, Q$NullPointerException))\n      if (!instanceOf($e0, Q$IndexOutOfBoundsException))\n        throw $e0;\n  }\n  if (!!leftPerentheses && !!rightPerentheses) {\n    if ($equals('(', leftPerentheses.symbol) && $equals(')', rightPerentheses.symbol)) {\n      leftNode = null;\n      rightNode = null;\n      try {\n        leftNode = $getSibling(leftPerentheses, -1);\n      }\n       catch ($e0) {\n        $e0 = caught_0($e0);\n        if (!instanceOf($e0, Q$IndexOutOfBoundsException))\n          throw $e0;\n      }\n      try {\n        rightNode = $getSibling(rightPerentheses, 1);\n      }\n       catch ($e0) {\n        $e0 = caught_0($e0);\n        if (!instanceOf($e0, Q$IndexOutOfBoundsException))\n          throw $e0;\n      }\n      if ((!leftNode || $equals('mo', leftNode.tag)) && (!rightNode || $equals('mo', rightNode.tag))) {\n        $remove_7(leftPerentheses);\n        $remove_7(rightPerentheses);\n      }\n    }\n  }\n  $remove_7(this.sourceNode);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$DropController]);\nfunction DropControllerBothSides_Add_0(dropTarget){\n  AbstractMathDropController_0.call(this, dropTarget);\n}\n\nfunction DropControllerBothSides_Add(){\n}\n\n_ = DropControllerBothSides_Add_0.prototype = DropControllerBothSides_Add.prototype = new AbstractMathDropController;\n_.changeComment = function changeComment_1(){\n  return this.change.indexOf('-') == 0?this.change + ' &nbsp; &nbsp; &nbsp; &nbsp; ' + this.change:'+' + this.change + ' &nbsp; &nbsp; &nbsp; &nbsp; +' + this.change;\n}\n;\n_.getClass$ = function getClass_223(){\n  return Lcom_sciencegadgets_client_algebramanipulation_dropcontrollers_DropControllerBothSides_1Add_2_classLit;\n}\n;\n_.onChange = function onChange_0(){\n  var encasingSeriese, operatorToMove, prevChild, tree;\n  operatorToMove = null;\n  if ($getIndex(this.sourceNode) > 0) {\n    prevChild = $getSibling(this.sourceNode, -1);\n    if ($equals('mo', prevChild.tag)) {\n      operatorToMove = prevChild;\n      $remove_7(prevChild);\n    }\n  }\n   else {\n    if ($equals('mo', $getSibling(this.sourceNode, 1).tag)) {\n      operatorToMove = $getSibling(this.sourceNode, 1);\n      $remove_7($getSibling(this.sourceNode, 1));\n    }\n  }\n  $remove_7(this.sourceNode);\n  this.sourceNode.symbol.indexOf('-') == 0?(this.change = $replaceFirst(this.sourceNode.symbol, '-', '')):(this.change = '-' + this.sourceNode.symbol);\n  $setString(this.sourceNode, this.change);\n  if (($clinit_JohnTree$Type() , Series) == this.targetNode.type_0) {\n    $add_6(this.targetNode, operatorToMove);\n    $add_6(this.targetNode, this.sourceNode);\n  }\n   else {\n    tree = this.targetNode.this$0.tree;\n    encasingSeriese = $encase(this.targetNode, Series);\n    this.targetNode == tree.leftSide?(tree.leftSide = encasingSeriese):this.targetNode == tree.rightSide && (tree.rightSide = encasingSeriese);\n    $add_12(encasingSeriese.children, operatorToMove);\n    operatorToMove.parent_0 = encasingSeriese;\n    $add_6(encasingSeriese, this.sourceNode);\n  }\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$DropController]);\nfunction DropControllerMultiplication_0(dropTarget){\n  AbstractMathDropController_0.call(this, dropTarget);\n}\n\nfunction DropControllerMultiplication(){\n}\n\n_ = DropControllerMultiplication_0.prototype = DropControllerMultiplication.prototype = new AbstractMathDropController;\n_.changeComment = function changeComment_2(){\n  return 'Simplify: ' + this.change;\n}\n;\n_.getClass$ = function getClass_224(){\n  return Lcom_sciencegadgets_client_algebramanipulation_dropcontrollers_DropControllerMultiplication_2_classLit;\n}\n;\n_.onChange = function onChange_1(){\n  var answer, prevChild, sIndex, sourceValue, targetValue;\n  sourceValue = __parseAndValidateInt(this.source.johnNode.symbol);\n  targetValue = __parseAndValidateInt(this.target_0.johnNode.symbol);\n  answer = sourceValue * targetValue;\n  this.change = targetValue + ' * ' + sourceValue + ' = ' + answer;\n  $setString(this.targetNode, '' + answer);\n  $setInnerText(this.targetNode.wrapper.element, '' + answer);\n  sIndex = $getIndex(this.sourceNode);\n  if (sIndex > 0) {\n    prevChild = $getChildAt($getParent(this.sourceNode), sIndex - 1);\n    $equals('mo', prevChild.tag) && $remove_7(prevChild);\n  }\n   else \n    $equals('*', $getSibling(this.sourceNode, 1).symbol) && $remove_7($getSibling(this.sourceNode, 1));\n  $remove_7(this.sourceNode);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$DropController]);\nfunction ElementNotFoundExeption_0(s){\n  Exception_0.call(this, s);\n}\n\nfunction ElementNotFoundExeption(){\n}\n\n_ = ElementNotFoundExeption_0.prototype = ElementNotFoundExeption.prototype = new Exception;\n_.getClass$ = function getClass_225(){\n  return Lcom_sciencegadgets_client_equationbrowser_ElementNotFoundExeption_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$ElementNotFoundExeption, Q$Serializable, Q$Exception, Q$Throwable]);\nfunction $clinit_EquationBrowserEntry(){\n  $clinit_EquationBrowserEntry = nullMethod;\n  labelSumEq = new HTML_1('');\n}\n\nfunction $createAlgBrowser(this$static){\n  var algNameList, i, labelAlg, spAlg, vpAlg;\n  vpAlg = new VerticalPanel_0;\n  labelAlg = new Label_0('Algebra Practice');\n  spAlg = new ScrollPanel_1(this$static.algGrid);\n  $addDomHandler(this$static.algGrid, new EquationBrowserEntry$EqClickHandler_0(this$static, this$static.algGrid), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE));\n  $add_4(vpAlg, labelAlg);\n  $add_4(vpAlg, spAlg);\n  setStylePrimaryName(vpAlg.element_0, 'gridBox');\n  setStylePrimaryName(spAlg.element_0, 'sp');\n  setStylePrimaryName(labelAlg.element_0, 'rowHeader');\n  algNameList = $getAll(this$static.data, this$static.data.FLAG_ALGEBRA_NAME);\n  $resizeRows(this$static.algGrid, algNameList.length);\n  for (i = 0; i < algNameList.length; ++i) {\n    $setText_0(this$static.algGrid, i, algNameList[i]);\n  }\n  $add_3(this$static.browserPanel, vpAlg);\n}\n\nfunction $createSciBrowser(this$static){\n  var labelEq, labelSum, labelVar, spEq, spSum, spVar, vpEq, vpSum, vpVar;\n  vpVar = new VerticalPanel_0;\n  labelVar = new Label_0('Variables');\n  spVar = new ScrollPanel_1(this$static.varGrid);\n  $addDomHandler(this$static.varGrid, new EquationBrowserEntry$VarClickHandler_0(this$static, this$static.varGrid), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE));\n  $add_4(vpVar, labelVar);\n  $add_4(vpVar, spVar);\n  $add_4(vpVar, this$static.multiSwitch);\n  $addDomHandler(this$static.multiSwitch, new EquationBrowserEntry$MultiSwitchClickHandler_0(this$static), TYPE);\n  $fillVarList(this$static);\n  vpEq = new VerticalPanel_0;\n  labelEq = new Label_0('Equations');\n  spEq = new ScrollPanel_1(this$static.eqGrid);\n  $addDomHandler(this$static.eqGrid, new EquationBrowserEntry$EqClickHandler_0(this$static, this$static.eqGrid), TYPE);\n  $add_4(vpEq, labelEq);\n  $add_4(vpEq, spEq);\n  vpSum = new VerticalPanel_0;\n  labelSum = new Label_0('Summary');\n  spSum = new ScrollPanel_1(this$static.sumGrid);\n  $setHeight(labelSumEq, '2em');\n  $add_4(vpSum, labelSum);\n  $add_4(vpSum, labelSumEq);\n  $add_4(vpSum, spSum);\n  $add_3(this$static.browserPanel, vpVar);\n  $add_3(this$static.browserPanel, vpEq);\n  $add_3(this$static.browserPanel, vpSum);\n  setStylePrimaryName(vpVar.element_0, 'gridBox');\n  setStylePrimaryName(vpEq.element_0, 'gridBox');\n  setStylePrimaryName(vpSum.element_0, 'gridBox');\n  setStylePrimaryName(spVar.element_0, 'sp');\n  setStylePrimaryName(spEq.element_0, 'sp');\n  setStylePrimaryName(spSum.element_0, 'sp');\n  setStylePrimaryName(labelVar.element_0, 'rowHeader');\n  setStylePrimaryName(labelEq.element_0, 'rowHeader');\n  setStylePrimaryName(labelSum.element_0, 'rowHeader');\n  parseJQMath_0(this$static.varGrid.element_0);\n}\n\nfunction $fillSummary(this$static, equation){\n  var $e0, descHTML, e, row, var_$, var$array, var$index, var$max, varHTML, variables;\n  try {\n    variables = $getVariablesByEquation(this$static.data, equation);\n  }\n   catch ($e0) {\n    $e0 = caught_0($e0);\n    if (instanceOf($e0, Q$Exception)) {\n      e = $e0;\n      $printStackTrace(e);\n      return;\n    }\n     else \n      throw $e0;\n  }\n  row = 0;\n  $clear_0(this$static.sumGrid, true);\n  $resizeRows(this$static.sumGrid, variables.length);\n  for (var$array = variables , var$index = 0 , var$max = variables.length; var$index < var$max; ++var$index) {\n    var_$ = var$array[var$index];\n    varHTML = '<span class=\"var\">$' + var_$ + '$ <\\/span>';\n    try {\n      descHTML = '<span>$' + $getAttribute(this$static.data, this$static.data.FLAG_VARIABLE_DESCRIPTION, var_$) + '$<\\/span>';\n    }\n     catch ($e0) {\n      $e0 = caught_0($e0);\n      if (instanceOf($e0, Q$Exception)) {\n        e = $e0;\n        $printStackTrace(e);\n        descHTML = '<span><\\/span>';\n      }\n       else \n        throw $e0;\n    }\n    $setHTML(this$static.sumGrid, row, 0, varHTML);\n    $setHTML(this$static.sumGrid, row, 1, descHTML);\n    ++row;\n  }\n  parseJQMath_0(this$static.sumGrid.element_0);\n}\n\nfunction $fillVarList(this$static){\n  var desc, i, varHTML, vars;\n  vars = $getAll(this$static.data, this$static.data.FLAG_VARIABLE_LOOK);\n  desc = $getAll(this$static.data, this$static.data.FLAG_VARIABLE_DESCRIPTION);\n  $resizeRows(this$static.varGrid, vars.length);\n  for (i = 0; i < vars.length; ++i) {\n    varHTML = '<span style=\"cursor:pointer;\">$' + vars[i] + '$ ' + desc[i] + '<\\/span>';\n    $setHTML(this$static.varGrid, i, 0, varHTML);\n  }\n}\n\nfunction $onVarSelect(this$static, varSet){\n  var eqHTML, eqList, i;\n  eqList = $getEquationsByVariables(this$static.data, varSet);\n  $resizeRows(this$static.eqGrid, eqList.length);\n  $clear_0(this$static.sumGrid, false);\n  for (i = 0; i < eqList.length; ++i) {\n    eqHTML = '<span style=\"cursor:pointer;width:10em;\">$' + eqList[i] + '$<\\/span>';\n    $setHTML(this$static.eqGrid, i, 0, eqHTML);\n    $setAlignment(this$static.eqGrid.cellFormatter, i, ($clinit_HasHorizontalAlignment() , ALIGN_CENTER), ($clinit_HasVerticalAlignment() , ALIGN_MIDDLE));\n  }\n  parseJQMath_0(this$static.eqGrid.element_0);\n}\n\nfunction parseJQMath_0(element){\n  $clinit_EquationBrowserEntry();\n  $wnd.M.parseMath(element);\n}\n\nfunction EquationBrowserEntry(){\n}\n\n_ = EquationBrowserEntry.prototype = new Gadget;\n_.getClass$ = function getClass_226(){\n  return Lcom_sciencegadgets_client_equationbrowser_EquationBrowserEntry_2_classLit;\n}\n;\nvar labelSumEq;\nfunction EquationBrowserEntry$EqClickHandler_0(this$0, table){\n  this.this$0 = this$0;\n  this.table = table;\n}\n\nfunction EquationBrowserEntry$EqClickHandler(){\n}\n\n_ = EquationBrowserEntry$EqClickHandler_0.prototype = EquationBrowserEntry$EqClickHandler.prototype = new Object_0;\n_.getClass$ = function getClass_227(){\n  return Lcom_sciencegadgets_client_equationbrowser_EquationBrowserEntry$EqClickHandler_2_classLit;\n}\n;\n_.onClick = function onClick_1(event_0){\n  var clickedCell, clickedEl, element, equation, prevSel, draggableEquation;\n  clickedCell = $getCellForEvent(this.table, event_0);\n  if (clickedCell) {\n    clickedEl = $getElement(clickedCell.this$0.cellFormatter, clickedCell.rowIndex, clickedCell.cellIndex_0);\n    if (!$equals(clickedEl.id, 'selectedEq')) {\n      prevSel = $doc.getElementById('selectedEq');\n      !!prevSel && (prevSel.id = '' , undefined);\n      clickedEl.id = 'selectedEq';\n    }\n    equation = null;\n    if (this.table == this.this$0.algGrid) {\n      equation = clickedEl.textContent;\n    }\n     else if (this.table == this.this$0.eqGrid) {\n      element = clickedEl.getElementsByTagName('math')[0];\n      if (!element) {\n        $wnd.alert('Your browser may not show everything correctly. Try another browser');\n        element = clickedEl.getElementsByTagName('fmath')[0];\n      }\n      equation = element.getAttribute('alttext') || '';\n    }\n    $getValue(this.this$0.modeSelectSci).value_0 && $fillSummary(this.this$0, equation);\n    $setText_1(($clinit_EquationBrowserEntry() , labelSumEq), '$' + equation + '$');\n    parseJQMath_0(labelSumEq.element_0);\n    draggableEquation = new HTML_0;\n    $setTextOrHtml(draggableEquation.directionalTextHelper, '$' + equation + '$', true);\n    $updateHorizontalAlignment(draggableEquation);\n    parseJQMath(draggableEquation.element_0);\n    transport(draggableEquation);\n  }\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$ClickHandler, Q$EventHandler]);\n_.table = null;\n_.this$0 = null;\nfunction EquationBrowserEntry$ModeSelectHandler_0(this$0, mode){\n  this.this$0 = this$0;\n  this.mode = mode;\n}\n\nfunction EquationBrowserEntry$ModeSelectHandler(){\n}\n\n_ = EquationBrowserEntry$ModeSelectHandler_0.prototype = EquationBrowserEntry$ModeSelectHandler.prototype = new Object_0;\n_.getClass$ = function getClass_228(){\n  return Lcom_sciencegadgets_client_equationbrowser_EquationBrowserEntry$ModeSelectHandler_2_classLit;\n}\n;\n_.onClick = function onClick_2(event_0){\n  $clear(this.this$0.browserPanel);\n  $clear(($clinit_AlgOutEntry() , algDragPanel));\n  $clear_0(algOut, true);\n  $resizeRows(algOut, 0);\n  $clear(($clinit_TreeEntry() , apTree));\n  if ($equals('algebra', this.mode)) {\n    $createAlgBrowser(this.this$0);\n  }\n   else if ($equals('science', this.mode)) {\n    $createSciBrowser(this.this$0);\n    $clear_0(this.this$0.sumGrid, true);\n  }\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$ClickHandler, Q$EventHandler]);\n_.mode = 'algebra';\n_.this$0 = null;\nfunction EquationBrowserEntry$MultiSwitchClickHandler_0(this$0){\n  this.this$0 = this$0;\n}\n\nfunction EquationBrowserEntry$MultiSwitchClickHandler(){\n}\n\n_ = EquationBrowserEntry$MultiSwitchClickHandler_0.prototype = EquationBrowserEntry$MultiSwitchClickHandler.prototype = new Object_0;\n_.getClass$ = function getClass_229(){\n  return Lcom_sciencegadgets_client_equationbrowser_EquationBrowserEntry$MultiSwitchClickHandler_2_classLit;\n}\n;\n_.onClick = function onClick_3(event_0){\n  var el, elm, i;\n  if ($getValue(this.this$0.multiSwitch).value_0) {\n    el = $doc.getElementById('selectedVar');\n    if (el) {\n      el.className = 'selectedVar';\n      el.id = '';\n    }\n  }\n   else {\n    $clear_0(this.this$0.eqGrid, true);\n    elm = this.this$0.varGrid.cellFormatter;\n    for (i = 0; i < this.this$0.varGrid.numRows; ++i) {\n      ($checkCellBounds(elm.this$0, i, 0) , $getCellElement(elm.this$0.bodyElem, i, 0)).className = '';\n    }\n  }\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$ClickHandler, Q$EventHandler]);\n_.this$0 = null;\nfunction EquationBrowserEntry$VarClickHandler_0(this$0, table){\n  this.this$0 = this$0;\n  this.table = table;\n}\n\nfunction EquationBrowserEntry$VarClickHandler(){\n}\n\n_ = EquationBrowserEntry$VarClickHandler_0.prototype = EquationBrowserEntry$VarClickHandler.prototype = new Object_0;\n_.getClass$ = function getClass_230(){\n  return Lcom_sciencegadgets_client_equationbrowser_EquationBrowserEntry$VarClickHandler_2_classLit;\n}\n;\n_.onClick = function onClick_4(event_0){\n  var clicked, clickedCell, prevSel, prevSelect, varName;\n  clickedCell = $getCellForEvent(this.table, event_0);\n  if (clickedCell) {\n    clicked = $getElement(clickedCell.this$0.cellFormatter, clickedCell.rowIndex, clickedCell.cellIndex_0);\n    varName = $split(clicked.textContent, ' ', 0)[0];\n    if ($getValue(this.this$0.multiSwitch).value_0) {\n      if ($equals(clicked.className, 'selectedVar')) {\n        clicked.className = '';\n        $remove_14(this.this$0.selectedVars, varName);\n      }\n       else {\n        clicked.className = 'selectedVar';\n        $add_11(this.this$0.selectedVars, varName);\n      }\n    }\n     else {\n      if ($equals(clicked.id, 'selectedVar'))\n      ;\n      else {\n        prevSelect = $doc.getElementById('selectedVar');\n        !!prevSelect && (prevSelect.id = '' , undefined);\n        $clearImpl(this.this$0.selectedVars.map);\n        clicked.id = 'selectedVar';\n        $add_11(this.this$0.selectedVars, varName);\n      }\n    }\n    $clear_0(this.this$0.sumGrid, true);\n    $setText_1(($clinit_EquationBrowserEntry() , labelSumEq), '');\n    $clear_0(($clinit_AlgOutEntry() , algOut), true);\n    $onVarSelect(this.this$0, this.this$0.selectedVars);\n    prevSel = $doc.getElementById('selectedEq');\n    !!prevSel && (prevSel.id = '' , undefined);\n  }\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$ClickHandler, Q$EventHandler]);\n_.table = null;\n_.this$0 = null;\nfunction EquationBrowserEntryGadgetImpl_0(){\n  $clinit_EquationBrowserEntry();\n  this.data = new EquationDatabase_0;\n  this.browserPanel = new HorizontalPanel_0;\n  this.eqGrid = new Grid_0(1, 1);\n  this.varGrid = new Grid_0(1, 1);\n  this.sumGrid = new Grid_0(1, 2);\n  this.algGrid = new Grid_0(1, 1);\n  this.multiSwitch = new CheckBox_0;\n  this.selectedVars = new HashSet_0;\n  this.modeSelectAlg = new RadioButton_0('Algebra');\n  this.modeSelectSci = new RadioButton_0('Science');\n  $setSize(this.modeSelectAlg);\n  $setSize(this.modeSelectSci);\n  setStylePrimaryName(this.browserPanel.element_0, 'browserPanel');\n  $add_1(($clinit_RootPanel() , get()), this.modeSelectAlg);\n  $add_1(get(), this.modeSelectSci);\n  $add_1(get(), this.browserPanel);\n  $addDomHandler(this.modeSelectAlg, new EquationBrowserEntry$ModeSelectHandler_0(this, 'algebra'), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE));\n  $addDomHandler(this.modeSelectSci, new EquationBrowserEntry$ModeSelectHandler_0(this, 'science'), TYPE);\n  $setValue_0(this.modeSelectAlg, ($clinit_Boolean() , $clinit_Boolean() , TRUE), true);\n  $createAlgBrowser(this);\n}\n\nfunction EquationBrowserEntryGadgetImpl(){\n}\n\n_ = EquationBrowserEntryGadgetImpl_0.prototype = EquationBrowserEntryGadgetImpl.prototype = new EquationBrowserEntry;\n_.getClass$ = function getClass_231(){\n  return Lcom_sciencegadgets_client_equationbrowser_EquationBrowserEntryGadgetImpl_2_classLit;\n}\n;\nfunction $getAll(this$static, attributeFlag){\n  var array, i, list;\n  array = null;\n  attributeFlag[0] == 1?(array = this$static.EQUATIONS):attributeFlag[0] == 2?(array = this$static.VARIABLES):attributeFlag[0] == 3?(array = this$static.QUANTITIES):attributeFlag[0] == 4?(array = this$static.UNITS):attributeFlag[0] == 5 && (array = this$static.ALGEBRA);\n  list = initDim(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, array.length, 0);\n  for (i = 0; i < array.length; ++i) {\n    list[i] = array[i][attributeFlag[1]];\n  }\n  return list;\n}\n\nfunction $getAttribute(this$static, attributeFlag, element){\n  var $e0, array, attribute, e, index;\n  array = null;\n  attributeFlag[0] == 1?(array = this$static.EQUATIONS):attributeFlag[0] == 2?(array = this$static.VARIABLES):attributeFlag[0] == 5 && (array = this$static.ALGEBRA);\n  try {\n    index = $getElementIndex(this$static, attributeFlag[0], element);\n  }\n   catch ($e0) {\n    $e0 = caught_0($e0);\n    if (instanceOf($e0, Q$ElementNotFoundExeption)) {\n      e = $e0;\n      $printStackTrace(e);\n      throw new ElementNotFoundExeption_0('no such element: ' + element);\n    }\n     else \n      throw $e0;\n  }\n  attribute = array[index][attributeFlag[1]];\n  return attribute;\n}\n\nfunction $getElementIndex(this$static, typeOfElementFlag, element){\n  var array, i;\n  array = null;\n  typeOfElementFlag == 1?(array = this$static.EQUATIONS):typeOfElementFlag == 2?(array = this$static.VARIABLES):typeOfElementFlag == 3?(array = this$static.QUANTITIES):typeOfElementFlag == 4?(array = this$static.UNITS):typeOfElementFlag == 5 && (array = this$static.ALGEBRA);\n  for (i = 0; i < array.length; ++i) {\n    if ($equals(element, array[i][0])) {\n      return i;\n    }\n  }\n  throw new ElementNotFoundExeption_0('element not found');\n}\n\nfunction $getEquationsByVariables(this$static, varStringsSet){\n  var $e0, count, currentEqIndex, e, eqStrings, i, map, varCurrentIndex, varsIterator;\n  eqStrings = new LinkedList_0;\n  map = new HashMap_0;\n  varsIterator = $iterator($keySet(varStringsSet.map));\n  outerLoop: while ($hasNext_0(varsIterator.val$outerIter.iter)) {\n    try {\n      varCurrentIndex = $getElementIndex(this$static, 2, dynamicCast($next_5(varsIterator), Q$String));\n    }\n     catch ($e0) {\n      $e0 = caught_0($e0);\n      if (instanceOf($e0, Q$Exception)) {\n        e = $e0;\n        $printStackTrace(e);\n        continue outerLoop;\n      }\n       else \n        throw $e0;\n    }\n    for (i = 0; i < this$static.ASS_EQ_VAR.length; ++i) {\n      if (this$static.ASS_EQ_VAR[i][1] == varCurrentIndex) {\n        currentEqIndex = this$static.ASS_EQ_VAR[i][0];\n        if ($containsKey(map, valueOf_0(currentEqIndex))) {\n          count = dynamicCast($get_0(map, valueOf_0(currentEqIndex)), Q$Byte);\n          count = valueOf(count.value_0 + 1);\n          $put_0(map, valueOf_0(currentEqIndex), count);\n          varStringsSet.map.size == count.value_0 && $add_12(eqStrings, this$static.EQUATIONS[currentEqIndex][0]);\n        }\n         else {\n          $put_0(map, valueOf_0(currentEqIndex), valueOf(1));\n          varStringsSet.map.size == 1 && $add_12(eqStrings, this$static.EQUATIONS[currentEqIndex][0]);\n        }\n      }\n    }\n  }\n  return dynamicCast($toArray(eqStrings, initDim(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, 0, 0)), Q$String_$1);\n}\n\nfunction $getVariablesByEquation(this$static, equation){\n  var $e0, e, i, indexOfEq, varIndexes, varStrings;\n  try {\n    indexOfEq = $getElementIndex(this$static, 1, equation);\n  }\n   catch ($e0) {\n    $e0 = caught_0($e0);\n    if (instanceOf($e0, Q$ElementNotFoundExeption)) {\n      e = $e0;\n      $printStackTrace(e);\n      throw new ElementNotFoundExeption_0('no such equation:' + equation);\n    }\n     else \n      throw $e0;\n  }\n  varIndexes = new LinkedList_0;\n  for (i = 0; i < this$static.ASS_EQ_VAR.length; ++i) {\n    this$static.ASS_EQ_VAR[i][0] == indexOfEq && $add_12(varIndexes, valueOf_0(this$static.ASS_EQ_VAR[i][1]));\n  }\n  varStrings = initDim(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, varIndexes.size, 0);\n  for (i = 0; i < varIndexes.size; ++i) {\n    varStrings[i] = this$static.VARIABLES[dynamicCast($get_1(varIndexes, i), Q$Short).value_0][0];\n  }\n  return varStrings;\n}\n\nfunction EquationDatabase_0(){\n  this.FLAG_VARIABLE_LOOK = initValues(_3B_classLit, makeCastMap([Q$Serializable]), -1, [2, 0]);\n  this.FLAG_VARIABLE_DESCRIPTION = initValues(_3B_classLit, makeCastMap([Q$Serializable]), -1, [2, 1]);\n  this.FLAG_ALGEBRA_NAME = initValues(_3B_classLit, makeCastMap([Q$Serializable]), -1, [5, 0]);\n  this.EQUATIONS = initValues(_3_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$String_$1, [initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['\\u03BD=\\u03BD_0 + at', '']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['x=x_0 + \\u03BD_0t + 1/2at^2', '']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['\\u03BD^2=\\u03BD_0^2 + 2a(x - x_0)', '']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['F_\\\\net = ma', '']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['F_\\\\fric \\u2264 \\u03BCN', '']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['a_c = \\u03BD^2/r', '']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['\\u03C4=rF{\\\\sin\\u03B8}', '']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['p=m\\u03BD', '']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['J=F{\\u0394t}', '']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['K=1/2m\\u03BD^2', '']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['\\\\U_g=mgh', '']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['W=F{\\u0394r}{\\\\cos\\u03B8}', '']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['P_\\\\avg=W/{\\u0394t}', '']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['P=F\\u03BD{\\\\cos\\u03B8}', '']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['F_s=-kx', '']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['U_s=1/2kx^2', '']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['T_s=2\\u03C0\\u221A{m/k}', '']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['T_p=2\\u03C0\\u221A{l/g}', '']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['T=1/f', '']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['F_G=-{Gm_1m_2}/{r^2}', '']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['U_G=-{Gm_1m_2}/{r}', ''])]);\n  this.VARIABLES = initValues(_3_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$String_$1, [initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['a', 'Acceleration']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['F', 'Force']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['f', 'Frequency']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['h', 'Height']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['J', 'Impulse']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['K', 'Kinetic Energy']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['k', 'Spring Constant']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['l', 'Length']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['m', 'Mass']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['N', 'Normal Force']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['P', 'Power']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['p', 'Momentum']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['r', 'Radius']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['T', 'period']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['t', 'Time']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['U', 'Potential Energy']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['\\u03BD', 'Velocity']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['W', 'Work Done On System']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['x', 'Position']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['\\u03BC', 'Coefficient Of Friction']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['\\u03B8', 'Angle']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['\\u03C4', 'Torque'])]);\n  this.ALGEBRA = initValues(_3_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$String_$1, [initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['(1+2)*(3+4) = (5+6)*(8+9)']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['3+x = 5*6']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['3+x-4 = 5*6+7']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['3+4 = 5*6']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['1+2+3+4 = 5-6*7*8*9']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['1+2+3-4 = 5-6*7*8*9']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['1-2+3-4 = 5-6*7*8*9']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['-a(c+d) = -(e+f)']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['-a(-c+d) = -(e-f)']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['a=x+b', 'vara=x+varb']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['a=x-b', 'vara=x+(-varb)']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['a=x/b', 'vara=x / varb']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['a=b*x', 'vara=varb * x']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['a=b*x*c', 'vara=varb * x']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['a=b*x/c', 'vara=varb * x']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['a=b+x/c', 'vara=varb * x']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['a={b+x}/c', 'vara=varb * x']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['a=c/{b*x}', 'vara=varb * x']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['a=b*x^c', 'vara=varb * x']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['a={\\\\cos\\u03B8}*x', 'vara=varb * x']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['a={\\\\cos\\u03B8*x}', 'vara=varb * x']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['a=b*c*d*e', 'vara=varb * x']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['a+bc=de+fg+jo+hn+j'])]);\n  this.QUANTITIES = initValues(_3_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$String_$1, [initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['a', 'Acceleration']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['F', 'Force']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['f', 'Frequency']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['J', 'Impulse']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['K', 'Energy']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['k', 'Spring Constant']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['l', 'Length']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['m', 'Mass']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['N', 'Normal Force']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['P', 'Power']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['p', 'Momentum']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['r', 'Radius']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['T', 'period']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['t', 'Time']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['U', 'Potential Energy']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['\\u03BD', 'Velocity']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['W', 'Work Done On System']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['x', 'Position']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['\\u03BC', 'Coefficient Of Friction']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['\\u03B8', 'Angle']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['\\u03C4', 'Torque'])]);\n  this.UNITS = initValues(_3_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$String_$1, [initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['0', '?']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['1', '?']), initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['2', '?'])]);\n  this.ASS_EQ_VAR = initValues(_3_3S_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$short_$1, [initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [0, ($clinit_EquationDatabase$V() , \u03BD).i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [0, a_0.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [0, t_0.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [1, x_0.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [1, a_0.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [1, \u03BD.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [1, t_0.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [2, \u03BD.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [2, a_0.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [2, x_0.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [3, F.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [3, m_1.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [3, a_0.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [4, F.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [4, \u03BC.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [4, N.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [5, a_0.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [5, \u03BD.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [5, r.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [6, \u03C4.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [6, r.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [6, F.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [6, \u03B8.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [7, p_0.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [7, m_1.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [7, \u03BD.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [8, J.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [8, F.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [8, t_0.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [8, p_0.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [9, K.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [9, m_1.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [9, \u03BD.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [10, U.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [10, m_1.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [10, h_1.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [11, W.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [11, F.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [11, r.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [11, \u03B8.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [12, P.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [12, W.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [12, t_0.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [13, P.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [13, F.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [13, \u03BD.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [13, \u03B8.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [14, F.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [14, k_0.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [14, x_0.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [15, U.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [15, k_0.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [15, x_0.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [16, T.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [16, m_1.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [16, k_0.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [17, T.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [17, l_1.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [18, T.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [18, f.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [19, F.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [19, m_1.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [19, r.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [20, U.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [20, m_1.i]), initValues(_3S_classLit, makeCastMap([Q$Serializable, Q$short_$1]), -1, [20, r.i])]);\n}\n\nfunction EquationDatabase(){\n}\n\n_ = EquationDatabase_0.prototype = EquationDatabase.prototype = new Object_0;\n_.getClass$ = function getClass_232(){\n  return Lcom_sciencegadgets_client_equationbrowser_EquationDatabase_2_classLit;\n}\n;\nfunction $clinit_EquationDatabase$V(){\n  $clinit_EquationDatabase$V = nullMethod;\n  a_0 = new EquationDatabase$V_0('a', 0);\n  F = new EquationDatabase$V_0('F', 1);\n  f = new EquationDatabase$V_0('f', 2);\n  h_1 = new EquationDatabase$V_0('h', 3);\n  J = new EquationDatabase$V_0('J', 4);\n  K = new EquationDatabase$V_0('K', 5);\n  k_0 = new EquationDatabase$V_0('k', 6);\n  l_1 = new EquationDatabase$V_0('l', 7);\n  m_1 = new EquationDatabase$V_0('m', 8);\n  N = new EquationDatabase$V_0('N', 9);\n  P = new EquationDatabase$V_0('P', 10);\n  p_0 = new EquationDatabase$V_0('p', 11);\n  r = new EquationDatabase$V_0('r', 12);\n  T = new EquationDatabase$V_0('T', 13);\n  t_0 = new EquationDatabase$V_0('t', 14);\n  U = new EquationDatabase$V_0('U', 15);\n  \u03BD = new EquationDatabase$V_0('\\u03BD', 16);\n  W = new EquationDatabase$V_0('W', 17);\n  x_0 = new EquationDatabase$V_0('x', 18);\n  \u03BC = new EquationDatabase$V_0('\\u03BC', 19);\n  \u03B8 = new EquationDatabase$V_0('\\u03B8', 20);\n  \u03C4 = new EquationDatabase$V_0('\\u03C4', 21);\n  $VALUES_5 = initValues(_3Lcom_sciencegadgets_client_equationbrowser_EquationDatabase$V_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$EquationDatabase$V, [a_0, F, f, h_1, J, K, k_0, l_1, m_1, N, P, p_0, r, T, t_0, U, \u03BD, W, x_0, \u03BC, \u03B8, \u03C4]);\n}\n\nfunction EquationDatabase$V_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n  this.i = this.ordinal << 16 >> 16;\n}\n\nfunction values_5(){\n  $clinit_EquationDatabase$V();\n  return $VALUES_5;\n}\n\nfunction EquationDatabase$V(){\n}\n\n_ = EquationDatabase$V_0.prototype = EquationDatabase$V.prototype = new Enum;\n_.getClass$ = function getClass_233(){\n  return Lcom_sciencegadgets_client_equationbrowser_EquationDatabase$V_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$EquationDatabase$V, Q$Serializable, Q$Comparable, Q$Enum]);\n_.i = 0;\nvar $VALUES_5, F, J, K, N, P, T, U, W, a_0, f, h_1, k_0, l_1, m_1, p_0, r, t_0, x_0, \u03B8, \u03BC, \u03BD, \u03C4;\nfunction addDropTarget(source, target, dropType, hasJoiner){\n  var $e0, dropCtrl;\n  dropCtrl = null;\n  switch (dropType.ordinal) {\n    case 0:\n      dropCtrl = new DropControllerAddition_0(target);\n      break;\n    case 1:\n      dropCtrl = new DropControllerMultiplication_0(target);\n      break;\n    case 2:\n      dropCtrl = new DropControllerBothSides_Add_0(target);\n      break;\n    case 3:\n      dropCtrl = new DropControllerBothSides_Add_0(target);\n  }\n  try {\n    $registerDropController(source.dragController, dropCtrl);\n  }\n   catch ($e0) {\n    $e0 = caught_0($e0);\n    if (!instanceOf($e0, Q$NullPointerException))\n      throw $e0;\n  }\n  hasJoiner.value_0 && addDropTarget(source.joinedWrapper, target.joinedWrapper, dropType, ($clinit_Boolean() , $clinit_Boolean() , FALSE));\n  return dropCtrl;\n}\n\nfunction assign(wrappers, hasJoiner){\n  var $e0, bothSideDropType, dropType, e, jNode, jParent, parentType, sib, sib$iterator, siblings, tree, wrap, wrap$iterator;\n  wrapFor: for (wrap$iterator = $listIterator(wrappers, 0); wrap$iterator.currentNode != wrap$iterator.this$0.header;) {\n    wrap = dynamicCast($next_6(wrap$iterator), Q$MLElementWrapper);\n    jNode = wrap.johnNode;\n    jParent = $getParent(jNode);\n    bothSideDropType = null;\n    try {\n      parentType = jParent.type_0;\n    }\n     catch ($e0) {\n      $e0 = caught_0($e0);\n      if (instanceOf($e0, Q$NullPointerException)) {\n        e = $e0;\n        severe('No Type for: ' + jParent.symbol);\n        $printStackTrace(e);\n      }\n       else \n        throw $e0;\n    }\n    if (!parentType) {\n      continue wrapFor;\n    }\n    assignments: switch (jNode.type_0.ordinal) {\n      case 6:\n        siblings = jParent.children;\n        dropType = null;\n        sipmlifySiblings: switch (parentType.ordinal) {\n          case 1:\n            dropType = ($clinit_DropControllAssigner$DropType() , AddSimplify);\n            bothSideDropType = AddBothSides;\n            break sipmlifySiblings;\n          case 0:\n            dropType = ($clinit_DropControllAssigner$DropType() , MultiplySimplify);\n            bothSideDropType = MultiplyBothSides;\n            break sipmlifySiblings;\n        }\n\n        for (sib$iterator = $listIterator(siblings, 0); sib$iterator.currentNode != sib$iterator.this$0.header;) {\n          sib = dynamicCast($next_6(sib$iterator), Q$JohnTree$JohnNode);\n          ($clinit_JohnTree$Type() , Number_0) == sib.type_0 && jNode != sib && !!dropType && addDropTarget(wrap, sib.wrapper, dropType, hasJoiner);\n        }\n\n    }\n    if (bothSideDropType) {\n      tree = jNode.this$0.tree;\n      tree.leftSide == jParent?addDropTarget(wrap, tree.rightSide.wrapper, bothSideDropType, hasJoiner):tree.rightSide == jParent && addDropTarget(wrap, tree.leftSide.wrapper, bothSideDropType, hasJoiner);\n    }\n  }\n}\n\nfunction $clinit_DropControllAssigner$DropType(){\n  $clinit_DropControllAssigner$DropType = nullMethod;\n  AddSimplify = new DropControllAssigner$DropType_0('AddSimplify', 0);\n  MultiplySimplify = new DropControllAssigner$DropType_0('MultiplySimplify', 1);\n  AddBothSides = new DropControllAssigner$DropType_0('AddBothSides', 2);\n  MultiplyBothSides = new DropControllAssigner$DropType_0('MultiplyBothSides', 3);\n  $VALUES_6 = initValues(_3Lcom_sciencegadgets_client_equationtree_DropControllAssigner$DropType_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$DropControllAssigner$DropType, [AddSimplify, MultiplySimplify, AddBothSides, MultiplyBothSides]);\n}\n\nfunction DropControllAssigner$DropType_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_6(){\n  $clinit_DropControllAssigner$DropType();\n  return $VALUES_6;\n}\n\nfunction DropControllAssigner$DropType(){\n}\n\n_ = DropControllAssigner$DropType_0.prototype = DropControllAssigner$DropType.prototype = new Enum;\n_.getClass$ = function getClass_234(){\n  return Lcom_sciencegadgets_client_equationtree_DropControllAssigner$DropType_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$DropControllAssigner$DropType, Q$Serializable, Q$Comparable, Q$Enum]);\nvar $VALUES_6, AddBothSides, AddSimplify, MultiplyBothSides, MultiplySimplify;\nfunction $toMathML(this$static){\n  var mathTreeToML;\n  mathTreeToML = new JohnTree$MathTreeToML_0(this$static, ($clinit_Boolean() , $clinit_Boolean() , TRUE));\n  this$static.mathML = mathTreeToML.mlHTML;\n  return this$static.mathML;\n}\n\nfunction $wrapChildren(this$static, jNode){\n  var child, child$iterator, children, wrap;\n  children = jNode.children;\n  for (child$iterator = $listIterator(children, 0); child$iterator.currentNode != child$iterator.this$0.header;) {\n    child = dynamicCast($next_6(child$iterator), Q$JohnTree$JohnNode);\n    if (!child.isHidden.value_0) {\n      wrap = new MLElementWrapper_0(child, ($clinit_Boolean() , $clinit_Boolean() , TRUE), TRUE);\n      child.wrapper = wrap;\n      $addLast(this$static.wrappers, wrap);\n    }\n    child.children.size > 0 && $wrapChildren(this$static, child);\n  }\n}\n\nfunction JohnTree_0(mathML, isParsedForMath){\n  this.tree = this;\n  this.wrappers = new LinkedList_0;\n  this.mathML = mathML;\n  $change_0(new JohnTree$MLtoMLTree_0(this, mathML), this);\n  isParsedForMath.value_0 && $change(new JohnTree$MLTreeToMathTree_0(this), this);\n  $clear_2(this.wrappers);\n  $wrapChildren(this, this.root);\n}\n\nfunction JohnTree(){\n}\n\n_ = JohnTree_0.prototype = JohnTree.prototype = new Object_0;\n_.getClass$ = function getClass_235(){\n  return Lcom_sciencegadgets_client_equationtree_JohnTree_2_classLit;\n}\n;\n_.equals = null;\n_.leftSide = null;\n_.mathML = null;\n_.rightSide = null;\n_.root = null;\nfunction $$init(this$static){\n  this$static.children = new LinkedList_0;\n  this$static.isHidden = ($clinit_Boolean() , $clinit_Boolean() , FALSE);\n}\n\nfunction $add_6(this$static, johnNode){\n  $add_12(this$static.children, johnNode);\n  johnNode.parent_0 = this$static;\n}\n\nfunction $add_7(this$static, index, johnNode){\n  $add_9(this$static.children, index, johnNode);\n  johnNode.parent_0 = this$static;\n}\n\nfunction $encase(this$static, type){\n  var encasing, newDomNode;\n  newDomNode = $doc.createElement('mrow');\n  $insertAfter($getParentElement(this$static.domNode), newDomNode, this$static.domNode);\n  $appendChild(newDomNode, this$static.domNode);\n  encasing = new JohnTree$JohnNode_0(this$static.this$0, newDomNode, 'mrow', type, this$static.symbol);\n  $add_7($getParent(this$static), $indexOf_0(this$static.parent_0.children, this$static), encasing);\n  $remove_7(this$static);\n  $add_12(encasing.children, this$static);\n  this$static.parent_0 = encasing;\n  return encasing;\n}\n\nfunction $getChildAt(this$static, index){\n  return dynamicCast($get_1(this$static.children, index), Q$JohnTree$JohnNode);\n}\n\nfunction $getIndex(this$static){\n  return $indexOf_0(this$static.parent_0.children, this$static);\n}\n\nfunction $getParent(this$static){\n  if (!this$static.parent_0) {\n    throw new NullPointerException_1('There is no parent for:\\n' + this$static.symbol + '\\n' + this$static);\n  }\n  return this$static.parent_0;\n}\n\nfunction $getSibling(this$static, indexesAway){\n  var $e0, sibling, siblingIndex;\n  siblingIndex = $indexOf_0($getParent(this$static).children, this$static) + indexesAway;\n  try {\n    sibling = $getChildAt($getParent(this$static), siblingIndex);\n    return sibling;\n  }\n   catch ($e0) {\n    $e0 = caught_0($e0);\n    if (instanceOf($e0, Q$IndexOutOfBoundsException)) {\n      throw new IndexOutOfBoundsException_1('there is no child at index ' + siblingIndex + ', ' + indexesAway + 'indexes away from sibling: \\n' + this$static.symbol + '\\n' + this$static);\n    }\n     else \n      throw $e0;\n  }\n}\n\nfunction $remove_7(this$static){\n  var sibs;\n  sibs = this$static.parent_0.children;\n  $remove_11(sibs, $indexOf_0(sibs, this$static));\n}\n\nfunction $setString(this$static, string){\n  this$static.symbol = string;\n}\n\nfunction $toMathML_0(this$static){\n  var mathML;\n  !this$static.type_0?(mathML = new HTML_1(this$static.tag + ' $' + this$static.symbol + '$')):(mathML = new HTML_1(this$static.type_0.name_0.substr(0, 2 - 0) + ' $' + this$static.symbol + '$'));\n  parseJQMath_0(mathML.element_0);\n  return mathML;\n}\n\nfunction JohnTree$JohnNode_0(this$0, domNode, tag, type, symbol){\n  this.this$0 = this$0;\n  $$init(this);\n  this.domNode = domNode;\n  this.tag = tag;\n  this.type_0 = type;\n  this.symbol = symbol;\n}\n\nfunction JohnTree$JohnNode_1(this$0, node){\n  this.this$0 = this$0;\n  $$init(this);\n  this.domNode = node;\n  this.tag = node.nodeName;\n  this.type_0 = null;\n  this.symbol = node.textContent;\n}\n\nfunction JohnTree$JohnNode(){\n}\n\n_ = JohnTree$JohnNode_1.prototype = JohnTree$JohnNode_0.prototype = JohnTree$JohnNode.prototype = new Object_0;\n_.getClass$ = function getClass_236(){\n  return Lcom_sciencegadgets_client_equationtree_JohnTree$JohnNode_2_classLit;\n}\n;\n_.toString$ = function toString_12(){\n  return this.symbol;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$JohnTree$JohnNode]);\n_.domNode = null;\n_.parent_0 = null;\n_.symbol = null;\n_.tag = null;\n_.this$0 = null;\n_.type_0 = null;\n_.wrapper = null;\nfunction $assignComplexChildMrow(this$static, kid){\n  var baby, baby$iterator;\n  if (kid.children.size == 0) {\n    $clinit_Log();\n    $severe_0(log_0, 'mrow without children: ' + kid);\n    $remove_7(kid);\n  }\n   else {\n    kid.type_0 = ($clinit_JohnTree$Type() , Term);\n    for (baby$iterator = $listIterator(kid.children, 0); baby$iterator.currentNode != baby$iterator.this$0.header;) {\n      baby = dynamicCast($next_6(baby$iterator), Q$JohnTree$JohnNode);\n      if ($equalsIgnoreCase('mo', baby.tag)) {\n        if ($equals('\\u2212', baby.symbol) || $equals('+', baby.symbol)) {\n          $indexOf_0(baby.parent_0.children, baby) > 0 && (kid.type_0 = Series);\n          if ($equals('\\u2212', baby.symbol)) {\n            baby.symbol = '+';\n            $negatePropagate(this$static, $getSibling(baby, 1));\n          }\n        }\n      }\n       else if ($equals('\\u0394', baby.symbol)) {\n        kid.type_0 = Variable;\n        kid.children = new LinkedList_0;\n      }\n       else \n        $isFunction(baby.symbol).value_0 && (kid.type_0 = Function_0);\n    }\n  }\n}\n\nfunction $change(this$static, jTree){\n  $parseTree(this$static, jTree.root);\n  $rearrangeNestedMrows(this$static);\n  $rearrangeNegatives(this$static);\n}\n\nfunction $checkIsHidden(jNode){\n  if ($equals('(', jNode.symbol) || $equals(')', jNode.symbol)) {\n    return $clinit_Boolean() , $clinit_Boolean() , TRUE;\n  }\n   else if ($equals('mo', jNode.tag)) {\n    return $clinit_Boolean() , $clinit_Boolean() , TRUE;\n  }\n   else if ($isFunction(jNode.symbol).value_0) {\n    return $clinit_Boolean() , $clinit_Boolean() , TRUE;\n  }\n   else if ($equals('msub', $getParent(jNode).tag) || $equals('msubsup', $getParent(jNode).tag) && $indexOf_0(jNode.parent_0.children, jNode) == 1) {\n    return $clinit_Boolean() , $clinit_Boolean() , TRUE;\n  }\n  return $clinit_Boolean() , $clinit_Boolean() , FALSE;\n}\n\nfunction $isFunction(nodeString){\n  return $equals('cos', nodeString) || $equals('sin', nodeString) || $equals('tan', nodeString) || $equals('sec', nodeString) || $equals('csc', nodeString) || $equals('cot', nodeString) || $equals('sinh', nodeString) || $equals('cosh', nodeString) || $equals('tanh', nodeString) || $equals('log', nodeString) || $equals('ln', nodeString)?($clinit_Boolean() , $clinit_Boolean() , TRUE):($clinit_Boolean() , $clinit_Boolean() , FALSE);\n}\n\nfunction $negatePropagate(this$static, node){\n  node.symbol = '-' + node.symbol;\n  node.children.size > 0 && $negatePropagate(this$static, dynamicCast($get_1(node.children, 0), Q$JohnTree$JohnNode));\n}\n\nfunction $parseTree(this$static, jNode){\n  var kid, kid$iterator, kids;\n  kids = jNode.children;\n  if (!kids) {\n    return;\n  }\n  for (kid$iterator = $listIterator(kids, 0); kid$iterator.currentNode != kid$iterator.this$0.header;) {\n    kid = dynamicCast($next_6(kid$iterator), Q$JohnTree$JohnNode);\n    $equalsIgnoreCase('mrow', kid.tag)?$assignComplexChildMrow(this$static, kid):$equalsIgnoreCase('mi', kid.tag)?(kid.type_0 = ($clinit_JohnTree$Type() , Variable)):$equalsIgnoreCase('mn', kid.tag)?(kid.type_0 = ($clinit_JohnTree$Type() , Number_0)):$equalsIgnoreCase('msub', kid.tag)?(kid.type_0 = ($clinit_JohnTree$Type() , Variable)):$equalsIgnoreCase('msup', kid.tag) || $equalsIgnoreCase('msubsup', kid.tag) || $equalsIgnoreCase('msqrt', kid.tag)?(kid.type_0 = ($clinit_JohnTree$Type() , Exponent)):$equalsIgnoreCase('mfrac', kid.tag) && (kid.type_0 = ($clinit_JohnTree$Type() , Fraction));\n    (($clinit_JohnTree$Type() , Series) == kid.type_0 && Series == jNode.type_0 || Term == kid.type_0 && Term == jNode.type_0) && $add_12(this$static.nestedMrows, kid);\n    kid.isHidden = $checkIsHidden(kid);\n    kid.children.size > 0 && $parseTree(this$static, kid);\n  }\n}\n\nfunction $rearrangeNegatives(this$static){\n  var encasingTerm, neg, neg$iterator, negArg, negOne;\n  for (neg$iterator = $listIterator(this$static.negatives, 0); neg$iterator.currentNode != neg$iterator.this$0.header;) {\n    neg = dynamicCast($next_6(neg$iterator), Q$JohnTree$JohnNode);\n    negOne = new JohnTree$JohnNode_0(this$static.this$0, neg.domNode, 'mn', ($clinit_JohnTree$Type() , Number_0), '-1');\n    if ($getParent(neg).type_0 == Series) {\n      negArg = $getSibling(neg, 1);\n      encasingTerm = new JohnTree$JohnNode_0(this$static.this$0, negArg.domNode, 'mrow', Term, '-' + negArg.symbol);\n      $add_7($getParent(neg), $indexOf_0(negArg.parent_0.children, negArg), encasingTerm);\n      $add_12(encasingTerm.children, negOne);\n      negOne.parent_0 = encasingTerm;\n      $remove_7(negArg);\n      $add_12(encasingTerm.children, negArg);\n      negArg.parent_0 = encasingTerm;\n      info_0('neg: ' + neg + ', tag: ' + neg.tag + ', type: ' + neg.type_0 + ', parent: ' + $getParent(neg));\n      $clinit_Log();\n      $info_0(log_0, 'Rearranging the negative for: ' + negArg);\n    }\n     else {\n      $add_7($getParent(neg), $indexOf_0(neg.parent_0.children, neg) + 1, negOne);\n      $clinit_Log();\n      $info_0(log_0, 'Adding -1 node to the term');\n    }\n  }\n}\n\nfunction $rearrangeNestedMrows(this$static){\n  var kid, kid$iterator, nest, nest$iterator, nests;\n  if (!this$static.nestedMrows) {\n    return;\n  }\n  for (kid$iterator = $listIterator(this$static.nestedMrows, 0); kid$iterator.currentNode != kid$iterator.this$0.header;) {\n    kid = dynamicCast($next_6(kid$iterator), Q$JohnTree$JohnNode);\n    nests = kid.children;\n    for (nest$iterator = $listIterator(nests, 0); nest$iterator.currentNode != nest$iterator.this$0.header;) {\n      nest = dynamicCast($next_6(nest$iterator), Q$JohnTree$JohnNode);\n      $add_7($getParent(kid), $indexOf_0(kid.parent_0.children, kid), nest);\n    }\n    $remove_7(kid);\n    $clinit_Log();\n    $info_0(log_0, 'Removing nested mrow :' + kid);\n  }\n}\n\nfunction JohnTree$MLTreeToMathTree_0(this$0){\n  this.this$0 = this$0;\n  this.nestedMrows = new LinkedList_0;\n  this.negatives = new LinkedList_0;\n}\n\nfunction JohnTree$MLTreeToMathTree(){\n}\n\n_ = JohnTree$MLTreeToMathTree_0.prototype = JohnTree$MLTreeToMathTree.prototype = new Object_0;\n_.getClass$ = function getClass_237(){\n  return Lcom_sciencegadgets_client_equationtree_JohnTree$MLTreeToMathTree_2_classLit;\n}\n;\n_.this$0 = null;\nfunction $addChildren(this$static, mathMLNode, isLeft){\n  var currentNode, i, mathMLChildren;\n  mathMLChildren = mathMLNode.childNodes;\n  for (i = 0; i < mathMLChildren.length; ++i) {\n    currentNode = mathMLChildren[i];\n    if (currentNode.childNodes.length > 0) {\n      $onVisitNode(this$static, currentNode, isLeft, i);\n      $addChildren(this$static, currentNode, isLeft);\n      this$static.prevSibling = dynamicCast($get_0(this$static.nodeMap, currentNode), Q$JohnTree$JohnNode);\n    }\n  }\n}\n\nfunction MathMLParser_0(mathMLequation){\n  var middleString, rootNode, sideEqSide;\n  rootNode = mathMLequation.element_0;\n  middleString = '';\n  while (!$equals('=', middleString)) {\n    switch (rootNode.childNodes.length) {\n      case 0:\n        throw new TopNodesNotFoundException_0;\n      case 1:\n        rootNode = $getFirstChildElement(rootNode);\n        break;\n      default:middleString = rootNode.childNodes[1].textContent;\n        $equals('=', middleString) || (rootNode = $getFirstChildElement(rootNode));\n    }\n  }\n  sideEqSide = rootNode.childNodes;\n  this.elLeft = sideEqSide[0];\n  this.elEquals = sideEqSide[1];\n  this.elRight = sideEqSide[2];\n  $onRootsFound(this, this.elLeft, this.elEquals, this.elRight);\n  $addChildren(this, this.elLeft, ($clinit_Boolean() , $clinit_Boolean() , TRUE));\n  $addChildren(this, this.elRight, FALSE);\n}\n\nfunction MathMLParser(){\n}\n\n_ = MathMLParser.prototype = new Object_0;\n_.getClass$ = function getClass_238(){\n  return Lcom_sciencegadgets_client_equationtree_MathMLParser_2_classLit;\n}\n;\n_.elEquals = null;\n_.elLeft = null;\n_.elRight = null;\nfunction $change_0(this$static, jTree){\n  jTree.root = new JohnTree$JohnNode_0(this$static.this$0, null, null, null, null);\n  jTree.leftSide = this$static.nLeft;\n  jTree.equals = this$static.nEq;\n  jTree.rightSide = this$static.nRight;\n  $add_6(jTree.root, jTree.leftSide);\n  $add_6(jTree.root, jTree.equals);\n  $add_6(jTree.root, jTree.rightSide);\n}\n\nfunction $onRootsFound(this$static, nodeLeft, nodeEquals, nodeRight){\n  this$static.nodeMap = new HashMap_0;\n  this$static.nEq = new JohnTree$JohnNode_1(this$static.this$0, nodeEquals);\n  this$static.nLeft = new JohnTree$JohnNode_1(this$static.this$0, nodeLeft);\n  this$static.nRight = new JohnTree$JohnNode_1(this$static.this$0, nodeRight);\n  this$static.prevLeftNode = this$static.nLeft;\n  this$static.prevRightNode = this$static.nRight;\n}\n\nfunction $onVisitNode(this$static, currentNode, isLeft, indexOfChildren){\n  this$static.curNode = new JohnTree$JohnNode_1(this$static.this$0, currentNode);\n  if (isLeft.value_0) {\n    indexOfChildren == 0?$add_6(this$static.prevLeftNode, this$static.curNode):$add_6($getParent(this$static.prevSibling), this$static.curNode);\n    this$static.prevLeftNode = this$static.curNode;\n  }\n   else {\n    indexOfChildren == 0?$add_6(this$static.prevRightNode, this$static.curNode):$add_6($getParent(this$static.prevSibling), this$static.curNode);\n    this$static.prevRightNode = this$static.curNode;\n  }\n  $put_0(this$static.nodeMap, currentNode, this$static.curNode);\n}\n\nfunction JohnTree$MLtoMLTree_0(this$0, mathMLequation){\n  this.this$0 = this$0;\n  MathMLParser_0.call(this, mathMLequation);\n}\n\nfunction JohnTree$MLtoMLTree(){\n}\n\n_ = JohnTree$MLtoMLTree_0.prototype = JohnTree$MLtoMLTree.prototype = new MathMLParser;\n_.getClass$ = function getClass_239(){\n  return Lcom_sciencegadgets_client_equationtree_JohnTree$MLtoMLTree_2_classLit;\n}\n;\n_.curNode = null;\n_.nEq = null;\n_.nLeft = null;\n_.nRight = null;\n_.nodeMap = null;\n_.prevLeftNode = null;\n_.prevRightNode = null;\n_.prevSibling = null;\n_.this$0 = null;\nfunction $addChild(this$static, from, to){\n  var child, child$iterator, childTo, children;\n  children = from.children;\n  for (child$iterator = $listIterator(children, 0); child$iterator.currentNode != child$iterator.this$0.header;) {\n    child = dynamicCast($next_6(child$iterator), Q$JohnTree$JohnNode);\n    childTo = $appendChild(to, child.domNode.cloneNode(false));\n    this$static.changeDomNodes.value_0 && (child.domNode = childTo);\n    $equals('mi', child.tag) | $equals('mn', child.tag) | $equals('mo', child.tag) && $setInnerText(childTo, child.symbol);\n    child.children.size >= 0 && $addChild(this$static, child, childTo);\n  }\n}\n\nfunction JohnTree$MathTreeToML_0(sourceTree, changeDomNodes){\n  var firstNode;\n  this.mlHTML = new HTML_1('<math><\\/math>');\n  this.changeDomNodes = ($clinit_Boolean() , $clinit_Boolean() , FALSE);\n  this.changeDomNodes = changeDomNodes;\n  firstNode = $getFirstChildElement(this.mlHTML.element_0);\n  $addChild(this, sourceTree.root, firstNode);\n}\n\nfunction JohnTree$MathTreeToML(){\n}\n\n_ = JohnTree$MathTreeToML_0.prototype = JohnTree$MathTreeToML.prototype = new Object_0;\n_.getClass$ = function getClass_240(){\n  return Lcom_sciencegadgets_client_equationtree_JohnTree$MathTreeToML_2_classLit;\n}\n;\nfunction $clinit_JohnTree$Type(){\n  $clinit_JohnTree$Type = nullMethod;\n  Term = new JohnTree$Type_0('Term', 0);\n  Series = new JohnTree$Type_0('Series', 1);\n  Function_0 = new JohnTree$Type_0('Function', 2);\n  Exponent = new JohnTree$Type_0('Exponent', 3);\n  Fraction = new JohnTree$Type_0('Fraction', 4);\n  Variable = new JohnTree$Type_0('Variable', 5);\n  Number_0 = new JohnTree$Type_0('Number', 6);\n  $VALUES_7 = initValues(_3Lcom_sciencegadgets_client_equationtree_JohnTree$Type_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$JohnTree$Type, [Term, Series, Function_0, Exponent, Fraction, Variable, Number_0]);\n}\n\nfunction JohnTree$Type_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_7(){\n  $clinit_JohnTree$Type();\n  return $VALUES_7;\n}\n\nfunction JohnTree$Type(){\n}\n\n_ = JohnTree$Type_0.prototype = JohnTree$Type.prototype = new Enum;\n_.getClass$ = function getClass_241(){\n  return Lcom_sciencegadgets_client_equationtree_JohnTree$Type_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$JohnTree$Type, Q$Serializable, Q$Comparable, Q$Enum]);\nvar $VALUES_7, Exponent, Fraction, Function_0, Number_0, Series, Term, Variable;\nfunction $add_8(this$static, vo){\n  $appendChild(this$static.root, vo.element_0);\n  $setParent_1(vo, this$static);\n  $add_10(this$static.childrens, vo);\n  return vo;\n}\n\nfunction $setHeight_0(this$static, height){\n  $setHeight_1(this$static.root, height);\n}\n\nfunction $setWidth_0(this$static, width){\n  $setWidth_1(this$static.root, width);\n}\n\nfunction DrawingArea(){\n}\n\n_ = DrawingArea.prototype = new Widget;\n_.doAttachChildren = function doAttachChildren_1(){\n  var vo, vo$iterator;\n  for (vo$iterator = new AbstractList$IteratorImpl_0(this.childrens); vo$iterator.i < vo$iterator.this$0_0.size_0();) {\n    vo = dynamicCast($next_4(vo$iterator), Q$VectorObject);\n    $onAttach(vo);\n  }\n}\n;\n_.doDetachChildren = function doDetachChildren_1(){\n  var vo, vo$iterator;\n  for (vo$iterator = new AbstractList$IteratorImpl_0(this.childrens); vo$iterator.i < vo$iterator.this$0_0.size_0();) {\n    vo = dynamicCast($next_4(vo$iterator), Q$VectorObject);\n    $onDetach(vo);\n  }\n}\n;\n_.getClass$ = function getClass_242(){\n  return Lorg_vaadin_gwtgraphics_client_DrawingArea_2_classLit;\n}\n;\n_.setHeight = function setHeight_2(height){\n  var $e0, successful;\n  successful = false;\n  if (height != null && $endsWith(height, 'px')) {\n    try {\n      $setHeight_0(this, __parseAndValidateInt($substring_0(height, 0, height.length - 2)));\n      successful = true;\n    }\n     catch ($e0) {\n      $e0 = caught_0($e0);\n      if (!instanceOf($e0, Q$NumberFormatException))\n        throw $e0;\n    }\n  }\n  if (!successful) {\n    throw new IllegalArgumentException_0('Only pixel units (px) are supported');\n  }\n}\n;\n_.setStyleName = function setStyleName_1(style){\n  $setClassName(this.element_0, style + ' ' + style + '-svg');\n}\n;\n_.setWidth = function setWidth_2(width){\n  var $e0, successful;\n  successful = false;\n  if (width != null && $endsWith(width, 'px')) {\n    try {\n      $setWidth_0(this, __parseAndValidateInt($substring_0(width, 0, width.length - 2)));\n      successful = true;\n    }\n     catch ($e0) {\n      $e0 = caught_0($e0);\n      if (!instanceOf($e0, Q$NumberFormatException))\n        throw $e0;\n    }\n  }\n  if (!successful) {\n    throw new IllegalArgumentException_0('Only pixel units (px) are supported');\n  }\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]);\n_.root = null;\nfunction $addFirstLayer(this$static, jTree, lHTML, rHTML){\n  var a, lHeight, lLeft, lWidth, lWrap, lbox, rHeight, rLeft, rWidth, rWrap, rbox;\n  $add_2(this$static.panel, lHTML, ~~(this$static.sideLengthLeft / 2), 0);\n  $add_2(this$static.panel, new HTML_1('='), this$static.sideLengthLeft, 0);\n  $add_2(this$static.panel, rHTML, this$static.sideLengthLeft + ~~(this$static.sideLengthRight / 2), 0);\n  lHeight = $getPropertyInt(lHTML.element_0, 'offsetHeight');\n  lWidth = $getPropertyInt(lHTML.element_0, 'offsetWidth');\n  lLeft = ~~(this$static.sideLengthLeft / 2);\n  rHeight = $getPropertyInt(rHTML.element_0, 'offsetHeight');\n  rWidth = $getPropertyInt(rHTML.element_0, 'offsetWidth');\n  rLeft = this$static.sideLengthLeft + ~~(this$static.sideLengthRight / 2);\n  lbox = new Rectangle_0(lLeft - 5, 0, lWidth + 10, ~~(lHeight * 4 / 3));\n  $setFillColor(lbox, dynamicCast($get_0(this$static.palette, jTree.leftSide.type_0), Q$String));\n  lbox.element_0.setAttributeNS(null, 'stroke-opacity', '0.0');\n  $add_8(this$static, lbox);\n  if (jTree.leftSide.wrapper) {\n    lWrap = jTree.leftSide.wrapper.joinedWrapper;\n    $setHeight(lWrap, parseIntValue(lbox.element_0.getAttribute('height') || '') + 'px');\n    $setWidth(lWrap, parseIntValue(lbox.element_0.getAttribute('width') || '') + 'px');\n    $add_2(this$static.panel, lWrap, lLeft - 5, 0);\n  }\n  rbox = new Rectangle_0(rLeft - 5, 0, rWidth + 10, ~~(rHeight * 4 / 3));\n  $setFillColor(rbox, dynamicCast($get_0(this$static.palette, jTree.rightSide.type_0), Q$String));\n  rbox.element_0.setAttributeNS(null, 'stroke-opacity', '0.0');\n  $add_8(this$static, rbox);\n  if (jTree.rightSide.wrapper) {\n    rWrap = jTree.rightSide.wrapper.joinedWrapper;\n    $setHeight(rWrap, parseIntValue(rbox.element_0.getAttribute('height') || '') + 'px');\n    $setWidth(rWrap, parseIntValue(rbox.element_0.getAttribute('width') || '') + 'px');\n    $add_2(this$static.panel, rWrap, rLeft - 5, 0);\n  }\n  a = initValues(_3I_classLit, makeCastMap([Q$Serializable]), -1, [parseIntValue(lbox.element_0.getAttribute('height') || ''), parseIntValue(rbox.element_0.getAttribute('height') || '')]);\n  return a;\n}\n\nfunction $draw(this$static, jTree){\n  var i, lHTML, leftMemberCount, rHTML, rightMemberCount, topLayerHeights;\n  this$static.palette = new HashMap_0;\n  $put_0(this$static.palette, ($clinit_JohnTree$Type() , Term), '#7FFFD4');\n  $put_0(this$static.palette, Series, '#87CEFA');\n  $put_0(this$static.palette, Function_0, '#FFD700');\n  $put_0(this$static.palette, Exponent, '#E6E6FA');\n  $put_0(this$static.palette, Fraction, '#FAEBD7');\n  $put_0(this$static.palette, Variable, '#F0F8FF');\n  $put_0(this$static.palette, Number_0, '#F0FFF0');\n  this$static.leftLayerCounts = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, 20, 1);\n  this$static.rightLayerCounts = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, 20, 1);\n  this$static.leftCounters = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, 20, 1);\n  this$static.rightCounters = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, 20, 1);\n  ++this$static.leftLayerCounts[0];\n  ++this$static.rightLayerCounts[0];\n  $getNextLayerCounts(this$static, jTree.leftSide, 1, ($clinit_Boolean() , $clinit_Boolean() , TRUE));\n  $getNextLayerCounts(this$static, jTree.rightSide, 1, FALSE);\n  leftMemberCount = 0;\n  rightMemberCount = 0;\n  for (i = 0; i < this$static.leftLayerCounts.length; ++i) {\n    leftMemberCount += ~~(this$static.leftLayerCounts[i] * 100 / (i + 1));\n  }\n  for (i = 0; i < this$static.rightLayerCounts.length; ++i) {\n    rightMemberCount += ~~(this$static.rightLayerCounts[i] * 100 / (i + 1));\n  }\n  this$static.sideLengthLeft = ~~(parseIntValue(this$static.root.getAttribute('width') || '') * leftMemberCount / (rightMemberCount + leftMemberCount));\n  this$static.sideLengthRight = parseIntValue(this$static.root.getAttribute('width') || '') - this$static.sideLengthLeft;\n  this$static.rowHeight = ~~(parseIntValue(this$static.root.getAttribute('height') || '') / 6);\n  lHTML = $toMathML_0(jTree.leftSide);\n  rHTML = $toMathML_0(jTree.rightSide);\n  $add_1(this$static.panel, this$static);\n  topLayerHeights = $addFirstLayer(this$static, jTree, lHTML, rHTML);\n  jTree.leftSide.children.size > 1 && $drawChildren(this$static, jTree.leftSide, ~~(this$static.sideLengthLeft / 2), topLayerHeights[0], 1, TRUE);\n  jTree.rightSide.children.size > 1 && $drawChildren(this$static, jTree.rightSide, this$static.sideLengthLeft + ~~(this$static.sideLengthRight / 2), topLayerHeights[1], 1, FALSE);\n}\n\nfunction $drawChildren(this$static, pNode, parentX, parentY, layer, isLeft){\n  var box, child, child$iterator, childHTML, childLeft, childTop, childWidth, children, layerHeight, line, lineX, placement, wrap;\n  children = pNode.children;\n  layerHeight = this$static.rowHeight * layer;\n  for (child$iterator = $listIterator(children, 0); child$iterator.currentNode != child$iterator.this$0.header;) {\n    child = dynamicCast($next_6(child$iterator), Q$JohnTree$JohnNode);\n    if (child.isHidden.value_0) {\n      $clinit_Log();\n      $info_0(log_0, 'Skip drawing isHidden: ' + child);\n      continue;\n    }\n    isLeft.value_0?(this$static.childSpace = ~~(this$static.sideLengthLeft / this$static.leftLayerCounts[layer])):(this$static.childSpace = ~~(this$static.sideLengthRight / this$static.rightLayerCounts[layer]));\n    childHTML = $toMathML_0(child);\n    childWidth = $getPropertyInt(childHTML.element_0, 'offsetWidth');\n    if (isLeft.value_0) {\n      placement = this$static.childSpace * this$static.leftCounters[layer];\n      ++this$static.leftCounters[layer];\n    }\n     else {\n      placement = this$static.childSpace * this$static.rightCounters[layer];\n      ++this$static.rightCounters[layer];\n      placement += this$static.sideLengthLeft;\n    }\n    placement += ~~(this$static.childSpace / 4);\n    childWidth >= this$static.childSpace && (placement -= ~~(this$static.childSpace / 4));\n    $add_2(this$static.panel, childHTML, placement, layerHeight);\n    childLeft = $getAbsoluteLeft(childHTML.element_0) - $getAbsoluteLeft(this$static.panel.element_0);\n    childTop = $getAbsoluteTop(childHTML.element_0) - $getAbsoluteTop(this$static.panel.element_0);\n    lineX = childLeft + ~~(childWidth / 2) + 5;\n    box = new Rectangle_0(childLeft - 5, childTop, $getPropertyInt(childHTML.element_0, 'offsetWidth') + 10, ~~($getPropertyInt(childHTML.element_0, 'offsetHeight') * 4 / 3));\n    $setFillColor(box, dynamicCast($get_0(this$static.palette, child.type_0), Q$String));\n    box.element_0.setAttributeNS(null, 'stroke-opacity', '0.0');\n    line = new Line_0(parentX, parentY, lineX, childTop);\n    $add_8(this$static, line);\n    $add_8(this$static, box);\n    if (child.wrapper) {\n      wrap = child.wrapper.joinedWrapper;\n      $setHeight(wrap, parseIntValue(box.element_0.getAttribute('height') || '') + 'px');\n      $setWidth(wrap, parseIntValue(box.element_0.getAttribute('width') || '') + 'px');\n      $add_2(this$static.panel, wrap, childLeft - 5, childTop);\n    }\n    child.children.size > 0 && $drawChildren(this$static, child, lineX, childTop + parseIntValue(box.element_0.getAttribute('height') || ''), layer + 1 << 24 >> 24, isLeft);\n  }\n}\n\nfunction $getNextLayerCounts(this$static, pNode, layer, isLeft){\n  var child, child$iterator, children;\n  children = pNode.children;\n  for (child$iterator = $listIterator(children, 0); child$iterator.currentNode != child$iterator.this$0.header;) {\n    child = dynamicCast($next_6(child$iterator), Q$JohnTree$JohnNode);\n    if (child.isHidden.value_0) {\n      continue;\n    }\n    isLeft.value_0?++this$static.leftLayerCounts[layer]:++this$static.rightLayerCounts[layer];\n    child.children.size > 0 && $getNextLayerCounts(this$static, child, layer + 1 << 24 >> 24, isLeft);\n  }\n}\n\nfunction TreeCanvas_0(panel, jTree){\n  TreeCanvas_1.call(this, $getPropertyInt(panel.element_0, 'offsetWidth'), $getPropertyInt(panel.element_0, 'offsetHeight'));\n  this.panel = panel;\n  $draw(this, jTree);\n}\n\nfunction TreeCanvas_1(width, height){\n  var container, defs, root;\n  this.childrens = new ArrayList_0;\n  container = $doc.createElement('div');\n  this.element_0 = container;\n  this.root = (root = $doc.createElementNS('http://www.w3.org/2000/svg', 'svg') , root.setAttribute('overflow', 'hidden') , container.appendChild(root) , root.setAttributeNS(null, 'width', '' + width) , $equalsIgnoreCase(root.tagName, 'svg') && ($getParentElement(root).style['width'] = width + ($clinit_Style$Unit() , 'px') , undefined) , root.setAttributeNS(null, 'height', '' + height) , $equalsIgnoreCase(root.tagName, 'svg') && ($getParentElement(root).style['height'] = height + ($clinit_Style$Unit() , 'px') , undefined) , defs = $doc.createElementNS('http://www.w3.org/2000/svg', 'defs') , root.appendChild(defs) , root);\n}\n\nfunction TreeCanvas(){\n}\n\n_ = TreeCanvas_0.prototype = TreeCanvas.prototype = new DrawingArea;\n_.getClass$ = function getClass_243(){\n  return Lcom_sciencegadgets_client_equationtree_TreeCanvas_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]);\n_.childSpace = 0;\n_.leftCounters = null;\n_.leftLayerCounts = null;\n_.palette = null;\n_.panel = null;\n_.rightCounters = null;\n_.rightLayerCounts = null;\n_.rowHeight = 0;\n_.sideLengthLeft = 0;\n_.sideLengthRight = 0;\nfunction $clinit_TreeEntry(){\n  $clinit_TreeEntry = nullMethod;\n  new AbsolutePanel_0;\n  apTree = new AbsolutePanel_0;\n}\n\nvar apTree;\nfunction ArrayStoreException_0(){\n  $fillInStackTrace(this);\n}\n\nfunction ArrayStoreException(){\n}\n\n_ = ArrayStoreException_0.prototype = ArrayStoreException.prototype = new RuntimeException;\n_.getClass$ = function getClass_244(){\n  return Ljava_lang_ArrayStoreException_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable]);\nfunction $clinit_Boolean(){\n  $clinit_Boolean = nullMethod;\n  FALSE = new Boolean_1(false);\n  TRUE = new Boolean_1(true);\n}\n\nfunction $compareTo_1(this$static, other){\n  return this$static.value_0 == other.value_0?0:this$static.value_0?1:-1;\n}\n\nfunction Boolean_1(value){\n  this.value_0 = value;\n}\n\nfunction Boolean_0(){\n}\n\n_ = Boolean_1.prototype = Boolean_0.prototype = new Object_0;\n_.compareTo$ = function compareTo_1(other){\n  return $compareTo_1(this, dynamicCast(other, Q$Boolean));\n}\n;\n_.equals$ = function equals_3(o){\n  return instanceOf(o, Q$Boolean) && dynamicCast(o, Q$Boolean).value_0 == this.value_0;\n}\n;\n_.getClass$ = function getClass_245(){\n  return Ljava_lang_Boolean_2_classLit;\n}\n;\n_.hashCode$ = function hashCode_5(){\n  return this.value_0?1231:1237;\n}\n;\n_.toString$ = function toString_13(){\n  return this.value_0?'true':'false';\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable, Q$Boolean, Q$Comparable]);\n_.value_0 = false;\nvar FALSE, TRUE;\nfunction __parseAndValidateInt(s){\n  var i, length_0, startIndex, toReturn;\n  if (s == null) {\n    throw new NumberFormatException_0('null');\n  }\n  length_0 = s.length;\n  startIndex = length_0 > 0 && s.charCodeAt(0) == 45?1:0;\n  for (i = startIndex; i < length_0; ++i) {\n    if (digit(s.charCodeAt(i)) == -1) {\n      throw new NumberFormatException_0('For input string: \"' + s + '\"');\n    }\n  }\n  toReturn = parseInt(s, 10);\n  if (isNaN(toReturn)) {\n    throw new NumberFormatException_0('For input string: \"' + s + '\"');\n  }\n   else if (toReturn < -2147483648 || toReturn > 2147483647) {\n    throw new NumberFormatException_0('For input string: \"' + s + '\"');\n  }\n  return toReturn;\n}\n\nfunction Number_1(){\n}\n\n_ = Number_1.prototype = new Object_0;\n_.getClass$ = function getClass_246(){\n  return Ljava_lang_Number_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable, Q$Number]);\nfunction $compareTo_2(this$static, b){\n  return this$static.value_0 < b.value_0?-1:this$static.value_0 > b.value_0?1:0;\n}\n\nfunction Byte_0(value){\n  this.value_0 = value;\n}\n\nfunction valueOf(b){\n  var rebase, result;\n  rebase = b + 128;\n  result = ($clinit_Byte$BoxedValues() , boxedValues_0)[rebase];\n  !result && (result = boxedValues_0[rebase] = new Byte_0(b));\n  return result;\n}\n\nfunction Byte(){\n}\n\n_ = Byte_0.prototype = Byte.prototype = new Number_1;\n_.compareTo$ = function compareTo_2(b){\n  return $compareTo_2(this, dynamicCast(b, Q$Byte));\n}\n;\n_.equals$ = function equals_4(o){\n  return instanceOf(o, Q$Byte) && dynamicCast(o, Q$Byte).value_0 == this.value_0;\n}\n;\n_.getClass$ = function getClass_247(){\n  return Ljava_lang_Byte_2_classLit;\n}\n;\n_.hashCode$ = function hashCode_6(){\n  return this.value_0;\n}\n;\n_.toString$ = function toString_14(){\n  return '' + this.value_0;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable, Q$Byte, Q$Comparable, Q$Number]);\n_.value_0 = 0;\nfunction $clinit_Byte$BoxedValues(){\n  $clinit_Byte$BoxedValues = nullMethod;\n  boxedValues_0 = initDim(_3Ljava_lang_Byte_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$Byte, 256, 0);\n}\n\nvar boxedValues_0;\nfunction digit(c){\n  if (c >= 48 && c < 58) {\n    return c - 48;\n  }\n  if (c >= 97 && c < 97) {\n    return c - 97 + 10;\n  }\n  if (c >= 65 && c < 65) {\n    return c - 65 + 10;\n  }\n  return -1;\n}\n\nfunction Class_0(){\n}\n\nfunction createForArray(packageName, className){\n  var clazz;\n  clazz = new Class_0;\n  clazz.typeName = packageName + className;\n  clazz.modifiers = 4;\n  return clazz;\n}\n\nfunction createForClass(packageName, className){\n  var clazz;\n  clazz = new Class_0;\n  clazz.typeName = packageName + className;\n  return clazz;\n}\n\nfunction createForEnum(packageName, className, enumConstantsFunc){\n  var clazz;\n  clazz = new Class_0;\n  clazz.typeName = packageName + className;\n  clazz.modifiers = enumConstantsFunc?8:0;\n  return clazz;\n}\n\nfunction Class(){\n}\n\n_ = Class_0.prototype = Class.prototype = new Object_0;\n_.getClass$ = function getClass_248(){\n  return Ljava_lang_Class_2_classLit;\n}\n;\n_.toString$ = function toString_15(){\n  return ((this.modifiers & 2) != 0?'interface ':(this.modifiers & 1) != 0?'':'class ') + this.typeName;\n}\n;\n_.modifiers = 0;\n_.typeName = null;\nfunction ClassCastException_0(){\n  $fillInStackTrace(this);\n}\n\nfunction ClassCastException_1(){\n  RuntimeException_0.call(this, 'The Drop controller must have an MLElementWrapper as a target');\n}\n\nfunction ClassCastException(){\n}\n\n_ = ClassCastException_1.prototype = ClassCastException_0.prototype = ClassCastException.prototype = new RuntimeException;\n_.getClass$ = function getClass_249(){\n  return Ljava_lang_ClassCastException_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable]);\nfunction IllegalArgumentException_0(message){\n  RuntimeException_0.call(this, message);\n}\n\nfunction IllegalArgumentException(){\n}\n\n_ = IllegalArgumentException_0.prototype = IllegalArgumentException.prototype = new RuntimeException;\n_.getClass$ = function getClass_250(){\n  return Ljava_lang_IllegalArgumentException_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable]);\nfunction IllegalStateException_0(){\n  $fillInStackTrace(this);\n}\n\nfunction IllegalStateException_1(s){\n  RuntimeException_0.call(this, s);\n}\n\nfunction IllegalStateException(){\n}\n\n_ = IllegalStateException_1.prototype = IllegalStateException_0.prototype = IllegalStateException.prototype = new RuntimeException;\n_.getClass$ = function getClass_251(){\n  return Ljava_lang_IllegalStateException_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable]);\nfunction IndexOutOfBoundsException_0(){\n  $fillInStackTrace(this);\n}\n\nfunction IndexOutOfBoundsException_1(message){\n  RuntimeException_0.call(this, message);\n}\n\nfunction IndexOutOfBoundsException(){\n}\n\n_ = IndexOutOfBoundsException_1.prototype = IndexOutOfBoundsException_0.prototype = IndexOutOfBoundsException.prototype = new RuntimeException;\n_.getClass$ = function getClass_252(){\n  return Ljava_lang_IndexOutOfBoundsException_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable, Q$Exception, Q$IndexOutOfBoundsException, Q$RuntimeException, Q$Throwable]);\nfunction toPowerOfTwoString(value){\n  var buf, digits, pos;\n  buf = initDim(_3C_classLit, makeCastMap([Q$Serializable]), -1, 8, 1);\n  digits = ($clinit_Number$__Digits() , digits_0);\n  pos = 7;\n  if (value >= 0) {\n    while (value > 15) {\n      buf[pos--] = digits[value & 15];\n      value >>= 4;\n    }\n  }\n   else {\n    while (pos > 0) {\n      buf[pos--] = digits[value & 15];\n      value >>= 4;\n    }\n  }\n  buf[pos] = digits[value & 15];\n  return __valueOf(buf, pos, 8);\n}\n\nfunction signum(i){\n  return eq(i, P0_longLit)?0:lt(i, P0_longLit)?-1:1;\n}\n\nfunction abs(x){\n  return x <= 0?0 - x:x;\n}\n\nfunction abs_0(x){\n  return x < 0?-x:x;\n}\n\nfunction max(x, y){\n  return x > y?x:y;\n}\n\nfunction min(x, y){\n  return x < y?x:y;\n}\n\nfunction NullPointerException_0(){\n  $fillInStackTrace(this);\n}\n\nfunction NullPointerException_1(message){\n  RuntimeException_0.call(this, message);\n}\n\nfunction NullPointerException(){\n}\n\n_ = NullPointerException_1.prototype = NullPointerException_0.prototype = NullPointerException.prototype = new RuntimeException;\n_.getClass$ = function getClass_253(){\n  return Ljava_lang_NullPointerException_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable, Q$Exception, Q$NullPointerException, Q$RuntimeException, Q$Throwable]);\nfunction $clinit_Number$__Digits(){\n  $clinit_Number$__Digits = nullMethod;\n  digits_0 = initValues(_3C_classLit, makeCastMap([Q$Serializable]), -1, [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122]);\n}\n\nvar digits_0;\nfunction NumberFormatException_0(message){\n  IllegalArgumentException_0.call(this, message);\n}\n\nfunction NumberFormatException(){\n}\n\n_ = NumberFormatException_0.prototype = NumberFormatException.prototype = new IllegalArgumentException;\n_.getClass$ = function getClass_254(){\n  return Ljava_lang_NumberFormatException_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable, Q$Exception, Q$NumberFormatException, Q$RuntimeException, Q$Throwable]);\nfunction $compareTo_3(this$static, b){\n  return this$static.value_0 < b.value_0?-1:this$static.value_0 > b.value_0?1:0;\n}\n\nfunction Short_0(value){\n  this.value_0 = value;\n}\n\nfunction valueOf_0(s){\n  var rebase, result;\n  if (s > -129 && s < 128) {\n    rebase = s + 128;\n    result = ($clinit_Short$BoxedValues() , boxedValues_1)[rebase];\n    !result && (result = boxedValues_1[rebase] = new Short_0(s));\n    return result;\n  }\n  return new Short_0(s);\n}\n\nfunction Short(){\n}\n\n_ = Short_0.prototype = Short.prototype = new Number_1;\n_.compareTo$ = function compareTo_3(b){\n  return $compareTo_3(this, dynamicCast(b, Q$Short));\n}\n;\n_.equals$ = function equals_5(o){\n  return instanceOf(o, Q$Short) && dynamicCast(o, Q$Short).value_0 == this.value_0;\n}\n;\n_.getClass$ = function getClass_255(){\n  return Ljava_lang_Short_2_classLit;\n}\n;\n_.hashCode$ = function hashCode_7(){\n  return this.value_0;\n}\n;\n_.toString$ = function toString_16(){\n  return '' + this.value_0;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable, Q$Comparable, Q$Number, Q$Short]);\n_.value_0 = 0;\nfunction $clinit_Short$BoxedValues(){\n  $clinit_Short$BoxedValues = nullMethod;\n  boxedValues_1 = initDim(_3Ljava_lang_Short_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$Comparable_$1, Q$Object_$1]), Q$Short, 256, 0);\n}\n\nvar boxedValues_1;\nfunction $toString_0(this$static){\n  return this$static.className_0 + '.' + this$static.methodName + '(Unknown Source' + (this$static.lineNumber >= 0?':' + this$static.lineNumber:'') + ')';\n}\n\nfunction StackTraceElement_0(methodName){\n  this.className_0 = 'Unknown';\n  this.methodName = methodName;\n  this.lineNumber = -1;\n}\n\nfunction StackTraceElement(){\n}\n\n_ = StackTraceElement_0.prototype = StackTraceElement.prototype = new Object_0;\n_.getClass$ = function getClass_256(){\n  return Ljava_lang_StackTraceElement_2_classLit;\n}\n;\n_.toString$ = function toString_17(){\n  return $toString_0(this);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable, Q$StackTraceElement]);\n_.className_0 = null;\n_.lineNumber = 0;\n_.methodName = null;\nfunction $charAt(this$static, index){\n  return this$static.charCodeAt(index);\n}\n\nfunction $endsWith(this$static, suffix){\n  return this$static.lastIndexOf(suffix) != -1 && this$static.lastIndexOf(suffix) == this$static.length - suffix.length;\n}\n\nfunction $equals(this$static, other){\n  if (!instanceOf(other, Q$String)) {\n    return false;\n  }\n  return String(this$static) == other;\n}\n\nfunction $equalsIgnoreCase(this$static, other){\n  if (other == null)\n    return false;\n  return this$static == other || this$static.toLowerCase() == other.toLowerCase();\n}\n\nfunction $lastIndexOf(this$static, str){\n  return this$static.lastIndexOf(str);\n}\n\nfunction $replaceAll(this$static, regex, replace){\n  replace = __translateReplaceString(replace);\n  return this$static.replace(RegExp(regex, 'g'), replace);\n}\n\nfunction $replaceFirst(this$static, regex, replace){\n  replace = __translateReplaceString(replace);\n  return this$static.replace(RegExp(regex), replace);\n}\n\nfunction $split(this$static, regex, maxMatch){\n  var compiled = new RegExp(regex, 'g');\n  var out = [];\n  var count = 0;\n  var trail = this$static;\n  var lastTrail = null;\n  while (true) {\n    var matchObj = compiled.exec(trail);\n    if (matchObj == null || trail == '' || count == maxMatch - 1 && maxMatch > 0) {\n      out[count] = trail;\n      break;\n    }\n     else {\n      out[count] = trail.substring(0, matchObj.index);\n      trail = trail.substring(matchObj.index + matchObj[0].length, trail.length);\n      compiled.lastIndex = 0;\n      if (lastTrail == trail) {\n        out[count] = trail.substring(0, 1);\n        trail = trail.substring(1);\n      }\n      lastTrail = trail;\n      count++;\n    }\n  }\n  if (maxMatch == 0 && this$static.length > 0) {\n    var lastNonEmpty = out.length;\n    while (lastNonEmpty > 0 && out[lastNonEmpty - 1] == '') {\n      --lastNonEmpty;\n    }\n    lastNonEmpty < out.length && out.splice(lastNonEmpty, out.length - lastNonEmpty);\n  }\n  var jr = __createArray(out.length);\n  for (var i = 0; i < out.length; ++i) {\n    jr[i] = out[i];\n  }\n  return jr;\n}\n\nfunction $substring(this$static, beginIndex){\n  return this$static.substr(beginIndex, this$static.length - beginIndex);\n}\n\nfunction $substring_0(this$static, beginIndex, endIndex){\n  return this$static.substr(beginIndex, endIndex - beginIndex);\n}\n\nfunction $trim(this$static){\n  if (this$static.length == 0 || this$static[0] > ' ' && this$static[this$static.length - 1] > ' ') {\n    return this$static;\n  }\n  var r1 = this$static.replace(/^(\\s*)/, '');\n  var r2 = r1.replace(/\\s*$/, '');\n  return r2;\n}\n\nfunction __createArray(numElements){\n  return initDim(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, numElements, 0);\n}\n\nfunction __translateReplaceString(replaceStr){\n  var pos;\n  pos = 0;\n  while (0 <= (pos = replaceStr.indexOf('\\\\', pos))) {\n    replaceStr.charCodeAt(pos + 1) == 36?(replaceStr = replaceStr.substr(0, pos - 0) + '$' + $substring(replaceStr, ++pos)):(replaceStr = replaceStr.substr(0, pos - 0) + $substring(replaceStr, ++pos));\n  }\n  return replaceStr;\n}\n\nfunction __valueOf(x, start, end){\n  x = x.slice(start, end);\n  return String.fromCharCode.apply(null, x);\n}\n\nfunction compareTo_4(thisStr, otherStr){\n  thisStr = String(thisStr);\n  if (thisStr == otherStr) {\n    return 0;\n  }\n  return thisStr < otherStr?-1:1;\n}\n\n_ = String.prototype;\n_.compareTo$ = function compareTo_5(other){\n  return compareTo_4(this, dynamicCast(other, Q$String));\n}\n;\n_.equals$ = function equals_6(other){\n  return $equals(this, other);\n}\n;\n_.getClass$ = function getClass_257(){\n  return Ljava_lang_String_2_classLit;\n}\n;\n_.hashCode$ = function hashCode_8(){\n  return getHashCode_0(this);\n}\n;\n_.toString$ = function toString_18(){\n  return this;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$String, Q$Serializable, Q$CharSequence, Q$Comparable]);\nfunction $clinit_String$HashCache(){\n  $clinit_String$HashCache = nullMethod;\n  back_0 = {};\n  front = {};\n}\n\nfunction compute(str){\n  var hashCode, i, n, nBatch;\n  hashCode = 0;\n  n = str.length;\n  nBatch = n - 4;\n  i = 0;\n  while (i < nBatch) {\n    hashCode = str.charCodeAt(i + 3) + 31 * (str.charCodeAt(i + 2) + 31 * (str.charCodeAt(i + 1) + 31 * (str.charCodeAt(i) + 31 * hashCode))) | 0;\n    i += 4;\n  }\n  while (i < n) {\n    hashCode = hashCode * 31 + $charAt(str, i++);\n  }\n  return hashCode | 0;\n}\n\nfunction getHashCode_0(str){\n  $clinit_String$HashCache();\n  var key = ':' + str;\n  var result = front[key];\n  if (result != null) {\n    return result;\n  }\n  result = back_0[key];\n  result == null && (result = compute(str));\n  increment();\n  return front[key] = result;\n}\n\nfunction increment(){\n  if (count_0 == 256) {\n    back_0 = front;\n    front = {};\n    count_0 = 0;\n  }\n  ++count_0;\n}\n\nvar back_0, count_0 = 0, front;\nfunction $$init_0(this$static){\n  this$static.impl = new StringBufferImplAppend_0;\n}\n\nfunction $append_0(this$static, x){\n  $append(this$static.impl, x);\n  return this$static;\n}\n\nfunction StringBuffer_0(){\n  $$init_0(this);\n}\n\nfunction StringBuffer_1(s){\n  $$init_0(this);\n  $append(this.impl, s);\n}\n\nfunction StringBuffer(){\n}\n\n_ = StringBuffer_1.prototype = StringBuffer_0.prototype = StringBuffer.prototype = new Object_0;\n_.getClass$ = function getClass_258(){\n  return Ljava_lang_StringBuffer_2_classLit;\n}\n;\n_.toString$ = function toString_19(){\n  return this.impl.string;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$CharSequence]);\nfunction $$init_1(this$static){\n  this$static.impl = new StringBufferImplAppend_0;\n}\n\nfunction $append_1(this$static, x){\n  $append(this$static.impl, x);\n  return this$static;\n}\n\nfunction StringBuilder_0(){\n  $$init_1(this);\n}\n\nfunction StringBuilder_1(s){\n  $$init_1(this);\n  $append(this.impl, s);\n}\n\nfunction StringBuilder(){\n}\n\n_ = StringBuilder_1.prototype = StringBuilder_0.prototype = StringBuilder.prototype = new Object_0;\n_.getClass$ = function getClass_259(){\n  return Ljava_lang_StringBuilder_2_classLit;\n}\n;\n_.toString$ = function toString_20(){\n  return this.impl.string;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$CharSequence]);\nfunction currentTimeMillis0(){\n  return (new Date).getTime();\n}\n\nfunction UnsupportedOperationException_0(message){\n  RuntimeException_0.call(this, message);\n}\n\nfunction UnsupportedOperationException(){\n}\n\n_ = UnsupportedOperationException_0.prototype = UnsupportedOperationException.prototype = new RuntimeException;\n_.getClass$ = function getClass_260(){\n  return Ljava_lang_UnsupportedOperationException_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable]);\nfunction $advanceToFind(iter, o){\n  var t;\n  while (iter.hasNext()) {\n    t = iter.next_0();\n    if (o == null?t == null:equals__devirtual$(o, t)) {\n      return iter;\n    }\n  }\n  return null;\n}\n\nfunction $toArray(this$static, a){\n  var i, it, size;\n  size = this$static.size_0();\n  a.length < size && (a = createFrom(a, size));\n  it = this$static.iterator_0();\n  for (i = 0; i < size; ++i) {\n    setCheck(a, i, it.next_0());\n  }\n  a.length > size && setCheck(a, size, null);\n  return a;\n}\n\nfunction $toString_1(this$static){\n  var comma, iter, sb, value;\n  sb = new StringBuffer_0;\n  comma = null;\n  sb.impl.string += '[';\n  iter = this$static.iterator_0();\n  while (iter.hasNext()) {\n    comma != null?($append(sb.impl, comma) , sb):(comma = ', ');\n    value = iter.next_0();\n    $append(sb.impl, value === this$static?'(this Collection)':'' + value);\n  }\n  sb.impl.string += ']';\n  return sb.impl.string;\n}\n\nfunction AbstractCollection(){\n}\n\n_ = AbstractCollection.prototype = new Object_0;\n_.add = function add_0(o){\n  throw new UnsupportedOperationException_0('Add not supported on this collection');\n}\n;\n_.contains_0 = function contains(o){\n  var iter;\n  iter = $advanceToFind(this.iterator_0(), o);\n  return !!iter;\n}\n;\n_.getClass$ = function getClass_261(){\n  return Ljava_util_AbstractCollection_2_classLit;\n}\n;\n_.isEmpty = function isEmpty(){\n  return this.size_0() == 0;\n}\n;\n_.remove_1 = function remove_9(o){\n  var iter;\n  iter = $advanceToFind(this.iterator_0(), o);\n  if (iter) {\n    iter.remove_0();\n    return true;\n  }\n   else {\n    return false;\n  }\n}\n;\n_.toArray = function toArray(a){\n  return $toArray(this, a);\n}\n;\n_.toString$ = function toString_21(){\n  return $toString_1(this);\n}\n;\nfunction $keySet(this$static){\n  var entrySet;\n  entrySet = new AbstractHashMap$EntrySet_0(this$static);\n  return new AbstractMap$1_0(this$static, entrySet);\n}\n\nfunction AbstractMap(){\n}\n\n_ = AbstractMap.prototype = new Object_0;\n_.equals$ = function equals_7(obj){\n  var entry, entry$iterator, otherKey, otherMap, otherValue;\n  if (obj === this) {\n    return true;\n  }\n  if (!instanceOf(obj, Q$Map)) {\n    return false;\n  }\n  otherMap = dynamicCast(obj, Q$Map);\n  if (this.size != otherMap.size) {\n    return false;\n  }\n  for (entry$iterator = new AbstractHashMap$EntrySetIterator_0((new AbstractHashMap$EntrySet_0(otherMap)).this$0); $hasNext_0(entry$iterator.iter);) {\n    entry = entry$iterator.last = dynamicCast($next_4(entry$iterator.iter), Q$Map$Entry);\n    otherKey = entry.getKey();\n    otherValue = entry.getValue();\n    if (!(otherKey == null?this.nullSlotLive:instanceOf(otherKey, Q$String)?':' + dynamicCast(otherKey, Q$String) in this.stringMap:$hasHashValue(this, otherKey, ~~hashCode__devirtual$(otherKey)))) {\n      return false;\n    }\n    if (!equalsWithNullCheck(otherValue, otherKey == null?this.nullSlot:instanceOf(otherKey, Q$String)?$getStringValue(this, dynamicCast(otherKey, Q$String)):$getHashValue(this, otherKey, ~~hashCode__devirtual$(otherKey)))) {\n      return false;\n    }\n  }\n  return true;\n}\n;\n_.getClass$ = function getClass_262(){\n  return Ljava_util_AbstractMap_2_classLit;\n}\n;\n_.hashCode$ = function hashCode_9(){\n  var entry, entry$iterator, hashCode;\n  hashCode = 0;\n  for (entry$iterator = new AbstractHashMap$EntrySetIterator_0((new AbstractHashMap$EntrySet_0(this)).this$0); $hasNext_0(entry$iterator.iter);) {\n    entry = entry$iterator.last = dynamicCast($next_4(entry$iterator.iter), Q$Map$Entry);\n    hashCode += entry.hashCode$();\n    hashCode = ~~hashCode;\n  }\n  return hashCode;\n}\n;\n_.toString$ = function toString_22(){\n  var comma, entry, iter, s;\n  s = '{';\n  comma = false;\n  for (iter = new AbstractHashMap$EntrySetIterator_0((new AbstractHashMap$EntrySet_0(this)).this$0); $hasNext_0(iter.iter);) {\n    entry = iter.last = dynamicCast($next_4(iter.iter), Q$Map$Entry);\n    comma?(s += ', '):(comma = true);\n    s += '' + entry.getKey();\n    s += '=';\n    s += '' + entry.getValue();\n  }\n  return s + '}';\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Map]);\nfunction $addAllHashEntries(this$static, dest){\n  var hashCodeMap = this$static.hashCodeMap;\n  for (var hashCode in hashCodeMap) {\n    var hashCodeInt = parseInt(hashCode, 10);\n    if (hashCode == hashCodeInt) {\n      var array = hashCodeMap[hashCodeInt];\n      for (var i = 0, c = array.length; i < c; ++i) {\n        dest.add(array[i]);\n      }\n    }\n  }\n}\n\nfunction $addAllStringEntries(this$static, dest){\n  var stringMap = this$static.stringMap;\n  for (var key in stringMap) {\n    if (key.charCodeAt(0) == 58) {\n      var entry = new AbstractHashMap$MapEntryString_0(this$static, key.substring(1));\n      dest.add(entry);\n    }\n  }\n}\n\nfunction $clearImpl(this$static){\n  this$static.hashCodeMap = [];\n  this$static.stringMap = {};\n  this$static.nullSlotLive = false;\n  this$static.nullSlot = null;\n  this$static.size = 0;\n}\n\nfunction $containsKey(this$static, key){\n  return key == null?this$static.nullSlotLive:instanceOf(key, Q$String)?$hasStringValue(this$static, dynamicCast(key, Q$String)):$hasHashValue(this$static, key, ~~hashCode__devirtual$(key));\n}\n\nfunction $get_0(this$static, key){\n  return key == null?this$static.nullSlot:instanceOf(key, Q$String)?$getStringValue(this$static, dynamicCast(key, Q$String)):$getHashValue(this$static, key, ~~hashCode__devirtual$(key));\n}\n\nfunction $getHashValue(this$static, key, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        return entry.getValue();\n      }\n    }\n  }\n  return null;\n}\n\nfunction $getStringValue(this$static, key){\n  return this$static.stringMap[':' + key];\n}\n\nfunction $hasHashValue(this$static, key, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction $hasStringValue(this$static, key){\n  return ':' + key in this$static.stringMap;\n}\n\nfunction $put_0(this$static, key, value){\n  return key == null?$putNullSlot(this$static, value):instanceOf(key, Q$String)?$putStringValue(this$static, dynamicCast(key, Q$String), value):$putHashValue(this$static, key, value, ~~hashCode__devirtual$(key));\n}\n\nfunction $putHashValue(this$static, key, value, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        var previous = entry.getValue();\n        entry.setValue(value);\n        return previous;\n      }\n    }\n  }\n   else {\n    array = this$static.hashCodeMap[hashCode] = [];\n  }\n  var entry = new MapEntryImpl_0(key, value);\n  array.push(entry);\n  ++this$static.size;\n  return null;\n}\n\nfunction $putNullSlot(this$static, value){\n  var result;\n  result = this$static.nullSlot;\n  this$static.nullSlot = value;\n  if (!this$static.nullSlotLive) {\n    this$static.nullSlotLive = true;\n    ++this$static.size;\n  }\n  return result;\n}\n\nfunction $putStringValue(this$static, key, value){\n  var result, stringMap = this$static.stringMap;\n  key = ':' + key;\n  key in stringMap?(result = stringMap[key]):++this$static.size;\n  stringMap[key] = value;\n  return result;\n}\n\nfunction $remove_8(this$static, key){\n  return key == null?$removeNullSlot(this$static):instanceOf(key, Q$String)?$removeStringValue(this$static, dynamicCast(key, Q$String)):$removeHashValue(this$static, key, ~~hashCode__devirtual$(key));\n}\n\nfunction $removeHashValue(this$static, key, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        array.length == 1?delete this$static.hashCodeMap[hashCode]:array.splice(i, 1);\n        --this$static.size;\n        return entry.getValue();\n      }\n    }\n  }\n  return null;\n}\n\nfunction $removeNullSlot(this$static){\n  var result;\n  result = this$static.nullSlot;\n  this$static.nullSlot = null;\n  if (this$static.nullSlotLive) {\n    this$static.nullSlotLive = false;\n    --this$static.size;\n  }\n  return result;\n}\n\nfunction $removeStringValue(this$static, key){\n  var result, stringMap = this$static.stringMap;\n  key = ':' + key;\n  if (key in stringMap) {\n    result = stringMap[key];\n    --this$static.size;\n    delete stringMap[key];\n  }\n  return result;\n}\n\nfunction AbstractHashMap(){\n}\n\n_ = AbstractHashMap.prototype = new AbstractMap;\n_.equalsBridge = function equalsBridge(value1, value2){\n  return maskUndefined(value1) === maskUndefined(value2) || value1 != null && equals__devirtual$(value1, value2);\n}\n;\n_.getClass$ = function getClass_263(){\n  return Ljava_util_AbstractHashMap_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Map]);\n_.hashCodeMap = null;\n_.nullSlot = null;\n_.nullSlotLive = false;\n_.size = 0;\n_.stringMap = null;\nfunction AbstractSet(){\n}\n\n_ = AbstractSet.prototype = new AbstractCollection;\n_.equals$ = function equals_8(o){\n  var iter, other, otherItem;\n  if (o === this) {\n    return true;\n  }\n  if (!instanceOf(o, Q$Set)) {\n    return false;\n  }\n  other = dynamicCast(o, Q$Set);\n  if (other.size_0() != this.size_0()) {\n    return false;\n  }\n  for (iter = other.iterator_0(); iter.hasNext();) {\n    otherItem = iter.next_0();\n    if (!this.contains_0(otherItem)) {\n      return false;\n    }\n  }\n  return true;\n}\n;\n_.getClass$ = function getClass_264(){\n  return Ljava_util_AbstractSet_2_classLit;\n}\n;\n_.hashCode$ = function hashCode_10(){\n  var hashCode, iter, next;\n  hashCode = 0;\n  for (iter = this.iterator_0(); iter.hasNext();) {\n    next = iter.next_0();\n    if (next != null) {\n      hashCode += hashCode__devirtual$(next);\n      hashCode = ~~hashCode;\n    }\n  }\n  return hashCode;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Set]);\nfunction $contains(this$static, o){\n  var entry, key, value;\n  if (instanceOf(o, Q$Map$Entry)) {\n    entry = dynamicCast(o, Q$Map$Entry);\n    key = entry.getKey();\n    if ($containsKey(this$static.this$0, key)) {\n      value = $get_0(this$static.this$0, key);\n      return $equals_0(entry.getValue(), value);\n    }\n  }\n  return false;\n}\n\nfunction AbstractHashMap$EntrySet_0(this$0){\n  this.this$0 = this$0;\n}\n\nfunction AbstractHashMap$EntrySet(){\n}\n\n_ = AbstractHashMap$EntrySet_0.prototype = AbstractHashMap$EntrySet.prototype = new AbstractSet;\n_.contains_0 = function contains_0(o){\n  return $contains(this, o);\n}\n;\n_.getClass$ = function getClass_265(){\n  return Ljava_util_AbstractHashMap$EntrySet_2_classLit;\n}\n;\n_.iterator_0 = function iterator_4(){\n  return new AbstractHashMap$EntrySetIterator_0(this.this$0);\n}\n;\n_.remove_1 = function remove_10(entry){\n  var key;\n  if ($contains(this, entry)) {\n    key = dynamicCast(entry, Q$Map$Entry).getKey();\n    $remove_8(this.this$0, key);\n    return true;\n  }\n  return false;\n}\n;\n_.size_0 = function size_0(){\n  return this.this$0.size;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Set]);\n_.this$0 = null;\nfunction $next_3(this$static){\n  return this$static.last = dynamicCast($next_4(this$static.iter), Q$Map$Entry);\n}\n\nfunction $remove_9(this$static){\n  if (!this$static.last) {\n    throw new IllegalStateException_1('Must call next() before remove().');\n  }\n   else {\n    $remove_10(this$static.iter);\n    $remove_8(this$static.this$0, this$static.last.getKey());\n    this$static.last = null;\n  }\n}\n\nfunction AbstractHashMap$EntrySetIterator_0(this$0){\n  var list;\n  this.this$0 = this$0;\n  list = new ArrayList_0;\n  this$0.nullSlotLive && $add_10(list, new AbstractHashMap$MapEntryNull_0(this$0));\n  $addAllStringEntries(this$0, list);\n  $addAllHashEntries(this$0, list);\n  this.iter = new AbstractList$IteratorImpl_0(list);\n}\n\nfunction AbstractHashMap$EntrySetIterator(){\n}\n\n_ = AbstractHashMap$EntrySetIterator_0.prototype = AbstractHashMap$EntrySetIterator.prototype = new Object_0;\n_.getClass$ = function getClass_266(){\n  return Ljava_util_AbstractHashMap$EntrySetIterator_2_classLit;\n}\n;\n_.hasNext = function hasNext_3(){\n  return $hasNext_0(this.iter);\n}\n;\n_.next_0 = function next_4(){\n  return $next_3(this);\n}\n;\n_.remove_0 = function remove_11(){\n  $remove_9(this);\n}\n;\n_.iter = null;\n_.last = null;\n_.this$0 = null;\nfunction AbstractMapEntry(){\n}\n\n_ = AbstractMapEntry.prototype = new Object_0;\n_.equals$ = function equals_9(other){\n  var entry;\n  if (instanceOf(other, Q$Map$Entry)) {\n    entry = dynamicCast(other, Q$Map$Entry);\n    if (equalsWithNullCheck(this.getKey(), entry.getKey()) && equalsWithNullCheck(this.getValue(), entry.getValue())) {\n      return true;\n    }\n  }\n  return false;\n}\n;\n_.getClass$ = function getClass_267(){\n  return Ljava_util_AbstractMapEntry_2_classLit;\n}\n;\n_.hashCode$ = function hashCode_11(){\n  var keyHash, valueHash;\n  keyHash = 0;\n  valueHash = 0;\n  this.getKey() != null && (keyHash = hashCode__devirtual$(this.getKey()));\n  this.getValue() != null && (valueHash = hashCode__devirtual$(this.getValue()));\n  return keyHash ^ valueHash;\n}\n;\n_.toString$ = function toString_23(){\n  return this.getKey() + '=' + this.getValue();\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Map$Entry]);\nfunction AbstractHashMap$MapEntryNull_0(this$0){\n  this.this$0 = this$0;\n}\n\nfunction AbstractHashMap$MapEntryNull(){\n}\n\n_ = AbstractHashMap$MapEntryNull_0.prototype = AbstractHashMap$MapEntryNull.prototype = new AbstractMapEntry;\n_.getClass$ = function getClass_268(){\n  return Ljava_util_AbstractHashMap$MapEntryNull_2_classLit;\n}\n;\n_.getKey = function getKey(){\n  return null;\n}\n;\n_.getValue = function getValue(){\n  return this.this$0.nullSlot;\n}\n;\n_.setValue = function setValue(object){\n  return $putNullSlot(this.this$0, object);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Map$Entry]);\n_.this$0 = null;\nfunction AbstractHashMap$MapEntryString_0(this$0, key){\n  this.this$0 = this$0;\n  this.key = key;\n}\n\nfunction AbstractHashMap$MapEntryString(){\n}\n\n_ = AbstractHashMap$MapEntryString_0.prototype = AbstractHashMap$MapEntryString.prototype = new AbstractMapEntry;\n_.getClass$ = function getClass_269(){\n  return Ljava_util_AbstractHashMap$MapEntryString_2_classLit;\n}\n;\n_.getKey = function getKey_0(){\n  return this.key;\n}\n;\n_.getValue = function getValue_0(){\n  return $getStringValue(this.this$0, this.key);\n}\n;\n_.setValue = function setValue_0(object){\n  return $putStringValue(this.this$0, this.key, object);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Map$Entry]);\n_.key = null;\n_.this$0 = null;\nfunction $indexOf_0(this$static, toFind){\n  var i, n;\n  for (i = 0 , n = this$static.size; i < n; ++i) {\n    if (!toFind?$get_1(this$static, i) == null:toFind === $get_1(this$static, i)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction checkIndex(index, size){\n  (index < 0 || index >= size) && indexOutOfBounds(index, size);\n}\n\nfunction indexOutOfBounds(index, size){\n  throw new IndexOutOfBoundsException_1('Index: ' + index + ', Size: ' + size);\n}\n\nfunction AbstractList(){\n}\n\n_ = AbstractList.prototype = new AbstractCollection;\n_.add = function add_1(obj){\n  this.add_0(this.size_0(), obj);\n  return true;\n}\n;\n_.add_0 = function add_2(index, element){\n  throw new UnsupportedOperationException_0('Add not supported on this list');\n}\n;\n_.equals$ = function equals_10(o){\n  var elem, elemOther, iter, iterOther, other;\n  if (o === this) {\n    return true;\n  }\n  if (!instanceOf(o, Q$List)) {\n    return false;\n  }\n  other = dynamicCast(o, Q$List);\n  if (this.size_0() != other.size_0()) {\n    return false;\n  }\n  iter = this.iterator_0();\n  iterOther = other.iterator_0();\n  while (iter.hasNext()) {\n    elem = iter.next_0();\n    elemOther = iterOther.next_0();\n    if (!(elem == null?elemOther == null:equals__devirtual$(elem, elemOther))) {\n      return false;\n    }\n  }\n  return true;\n}\n;\n_.getClass$ = function getClass_270(){\n  return Ljava_util_AbstractList_2_classLit;\n}\n;\n_.hashCode$ = function hashCode_12(){\n  var iter, k, obj;\n  k = 1;\n  iter = this.iterator_0();\n  while (iter.hasNext()) {\n    obj = iter.next_0();\n    k = 31 * k + (obj == null?0:hashCode__devirtual$(obj));\n    k = ~~k;\n  }\n  return k;\n}\n;\n_.iterator_0 = function iterator_5(){\n  return new AbstractList$IteratorImpl_0(this);\n}\n;\n_.listIterator = function listIterator(){\n  return this.listIterator_0(0);\n}\n;\n_.listIterator_0 = function listIterator_0(from){\n  return new AbstractList$ListIteratorImpl_0(this, from);\n}\n;\n_.remove_2 = function remove_12(index){\n  throw new UnsupportedOperationException_0('Remove not supported on this list');\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$List]);\nfunction $hasNext_0(this$static){\n  return this$static.i < this$static.this$0_0.size_0();\n}\n\nfunction $next_4(this$static){\n  if (this$static.i >= this$static.this$0_0.size_0()) {\n    throw new NoSuchElementException_0;\n  }\n  return this$static.this$0_0.get(this$static.last = this$static.i++);\n}\n\nfunction $remove_10(this$static){\n  if (this$static.last < 0) {\n    throw new IllegalStateException_0;\n  }\n  this$static.this$0_0.remove_2(this$static.last);\n  this$static.i = this$static.last;\n  this$static.last = -1;\n}\n\nfunction AbstractList$IteratorImpl_0(this$0){\n  this.this$0_0 = this$0;\n}\n\nfunction AbstractList$IteratorImpl(){\n}\n\n_ = AbstractList$IteratorImpl_0.prototype = AbstractList$IteratorImpl.prototype = new Object_0;\n_.getClass$ = function getClass_271(){\n  return Ljava_util_AbstractList$IteratorImpl_2_classLit;\n}\n;\n_.hasNext = function hasNext_4(){\n  return $hasNext_0(this);\n}\n;\n_.next_0 = function next_5(){\n  return $next_4(this);\n}\n;\n_.remove_0 = function remove_13(){\n  $remove_10(this);\n}\n;\n_.i = 0;\n_.last = -1;\n_.this$0_0 = null;\nfunction AbstractList$ListIteratorImpl_0(this$0, start){\n  var size;\n  this.this$0 = this$0;\n  this.this$0_0 = this$0;\n  size = this$0.size_0();\n  (start < 0 || start > size) && indexOutOfBounds(start, size);\n  this.i = start;\n}\n\nfunction AbstractList$ListIteratorImpl(){\n}\n\n_ = AbstractList$ListIteratorImpl_0.prototype = AbstractList$ListIteratorImpl.prototype = new AbstractList$IteratorImpl;\n_.getClass$ = function getClass_272(){\n  return Ljava_util_AbstractList$ListIteratorImpl_2_classLit;\n}\n;\n_.hasPrevious = function hasPrevious(){\n  return this.i > 0;\n}\n;\n_.previous = function previous_0(){\n  if (this.i <= 0) {\n    throw new NoSuchElementException_0;\n  }\n  return this.this$0.get(this.last = --this.i);\n}\n;\n_.this$0 = null;\nfunction $iterator(this$static){\n  var outerIter;\n  outerIter = new AbstractHashMap$EntrySetIterator_0(this$static.val$entrySet.this$0);\n  return new AbstractMap$1$1_0(outerIter);\n}\n\nfunction AbstractMap$1_0(this$0, val$entrySet){\n  this.this$0 = this$0;\n  this.val$entrySet = val$entrySet;\n}\n\nfunction AbstractMap$1(){\n}\n\n_ = AbstractMap$1_0.prototype = AbstractMap$1.prototype = new AbstractSet;\n_.contains_0 = function contains_1(key){\n  return $containsKey(this.this$0, key);\n}\n;\n_.getClass$ = function getClass_273(){\n  return Ljava_util_AbstractMap$1_2_classLit;\n}\n;\n_.iterator_0 = function iterator_6(){\n  return $iterator(this);\n}\n;\n_.size_0 = function size_1(){\n  return this.val$entrySet.this$0.size;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Set]);\n_.this$0 = null;\n_.val$entrySet = null;\nfunction $next_5(this$static){\n  var entry;\n  entry = $next_3(this$static.val$outerIter);\n  return entry.getKey();\n}\n\nfunction AbstractMap$1$1_0(val$outerIter){\n  this.val$outerIter = val$outerIter;\n}\n\nfunction AbstractMap$1$1(){\n}\n\n_ = AbstractMap$1$1_0.prototype = AbstractMap$1$1.prototype = new Object_0;\n_.getClass$ = function getClass_274(){\n  return Ljava_util_AbstractMap$1$1_2_classLit;\n}\n;\n_.hasNext = function hasNext_5(){\n  return $hasNext_0(this.val$outerIter.iter);\n}\n;\n_.next_0 = function next_6(){\n  return $next_5(this);\n}\n;\n_.remove_0 = function remove_14(){\n  $remove_9(this.val$outerIter);\n}\n;\n_.val$outerIter = null;\nfunction $add_9(this$static, index, element){\n  var iter;\n  iter = $listIterator(this$static, index);\n  $addBefore(iter.this$0, element, iter.currentNode);\n  ++iter.currentIndex;\n  iter.lastNode = null;\n}\n\nfunction $get_1(this$static, index){\n  var $e0, iter;\n  iter = $listIterator(this$static, index);\n  try {\n    return $next_6(iter);\n  }\n   catch ($e0) {\n    $e0 = caught_0($e0);\n    if (instanceOf($e0, Q$NoSuchElementException)) {\n      throw new IndexOutOfBoundsException_1(\"Can't get element \" + index);\n    }\n     else \n      throw $e0;\n  }\n}\n\nfunction $remove_11(this$static, index){\n  var $e0, iter, old;\n  iter = $listIterator(this$static, index);\n  try {\n    old = $next_6(iter);\n  }\n   catch ($e0) {\n    $e0 = caught_0($e0);\n    if (instanceOf($e0, Q$NoSuchElementException)) {\n      throw new IndexOutOfBoundsException_1(\"Can't remove element \" + index);\n    }\n     else \n      throw $e0;\n  }\n  $remove_15(iter);\n  return old;\n}\n\nfunction AbstractSequentialList(){\n}\n\n_ = AbstractSequentialList.prototype = new AbstractList;\n_.add_0 = function add_3(index, element){\n  $add_9(this, index, element);\n}\n;\n_.get = function get_0(index){\n  return $get_1(this, index);\n}\n;\n_.getClass$ = function getClass_275(){\n  return Ljava_util_AbstractSequentialList_2_classLit;\n}\n;\n_.iterator_0 = function iterator_7(){\n  return $listIterator(this, 0);\n}\n;\n_.remove_2 = function remove_15(index){\n  return $remove_11(this, index);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$List]);\nfunction $add_10(this$static, o){\n  setCheck(this$static.array, this$static.size++, o);\n  return true;\n}\n\nfunction $clear_1(this$static){\n  this$static.array = initDim(_3Ljava_lang_Object_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$Object, 0, 0);\n  this$static.size = 0;\n}\n\nfunction $get_2(this$static, index){\n  checkIndex(index, this$static.size);\n  return this$static.array[index];\n}\n\nfunction $indexOf_1(this$static, o, index){\n  for (; index < this$static.size; ++index) {\n    if (equalsWithNullCheck(o, this$static.array[index])) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nfunction $remove_12(this$static, index){\n  var previous;\n  previous = (checkIndex(index, this$static.size) , this$static.array[index]);\n  splice_0(this$static.array, index, 1);\n  --this$static.size;\n  return previous;\n}\n\nfunction $remove_13(this$static, o){\n  var i;\n  i = $indexOf_1(this$static, o, 0);\n  if (i == -1) {\n    return false;\n  }\n  $remove_12(this$static, i);\n  return true;\n}\n\nfunction $set(this$static, index, o){\n  var previous;\n  previous = (checkIndex(index, this$static.size) , this$static.array[index]);\n  setCheck(this$static.array, index, o);\n  return previous;\n}\n\nfunction $toArray_0(this$static, out){\n  var i;\n  out.length < this$static.size && (out = createFrom(out, this$static.size));\n  for (i = 0; i < this$static.size; ++i) {\n    setCheck(out, i, this$static.array[i]);\n  }\n  out.length > this$static.size && setCheck(out, this$static.size, null);\n  return out;\n}\n\nfunction ArrayList_0(){\n  this.array = initDim(_3Ljava_lang_Object_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$Object, 0, 0);\n}\n\nfunction splice_0(array, index, deleteCount){\n  array.splice(index, deleteCount);\n}\n\nfunction splice_1(array, index, deleteCount, value){\n  array.splice(index, deleteCount, value);\n}\n\nfunction ArrayList(){\n}\n\n_ = ArrayList_0.prototype = ArrayList.prototype = new AbstractList;\n_.add = function add_4(o){\n  return $add_10(this, o);\n}\n;\n_.add_0 = function add_5(index, o){\n  (index < 0 || index > this.size) && indexOutOfBounds(index, this.size);\n  splice_1(this.array, index, 0, o);\n  ++this.size;\n}\n;\n_.contains_0 = function contains_2(o){\n  return $indexOf_1(this, o, 0) != -1;\n}\n;\n_.get = function get_1(index){\n  return $get_2(this, index);\n}\n;\n_.getClass$ = function getClass_276(){\n  return Ljava_util_ArrayList_2_classLit;\n}\n;\n_.isEmpty = function isEmpty_0(){\n  return this.size == 0;\n}\n;\n_.remove_2 = function remove_16(index){\n  return $remove_12(this, index);\n}\n;\n_.remove_1 = function remove_17(o){\n  return $remove_13(this, o);\n}\n;\n_.size_0 = function size_2(){\n  return this.size;\n}\n;\n_.toArray = function toArray_0(out){\n  return $toArray_0(this, out);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable, Q$List]);\n_.size = 0;\nfunction insertionSort(array, low, high){\n  var i, j, t;\n  for (i = low + 1; i < high; ++i) {\n    for (j = i; j > low && dynamicCast(array[j - 1], Q$Comparable).compareTo$(array[j]) > 0; --j) {\n      t = array[j];\n      setCheck(array, j, array[j - 1]);\n      setCheck(array, j - 1, t);\n    }\n  }\n}\n\nfunction merge(src, srcLow, srcMid, srcHigh, dest, destLow, destHigh){\n  var topIdx;\n  topIdx = srcMid;\n  while (destLow < destHigh) {\n    topIdx >= srcHigh || srcLow < srcMid && dynamicCast(src[srcLow], Q$Comparable).compareTo$(src[topIdx]) <= 0?setCheck(dest, destLow++, src[srcLow++]):setCheck(dest, destLow++, src[topIdx++]);\n  }\n}\n\nfunction mergeSort(x, fromIndex, toIndex){\n  var temp, a, result;\n  temp = (a = x , result = a.slice(fromIndex, toIndex) , initValues(a.arrayClass$, a.castableTypeMap$, a.queryId$, result) , result);\n  mergeSort_0(temp, x, fromIndex, toIndex, -fromIndex);\n}\n\nfunction mergeSort_0(temp, array, low, high, ofs){\n  var length_0, tempHigh, tempLow, tempMid;\n  length_0 = high - low;\n  if (length_0 < 7) {\n    insertionSort(array, low, high);\n    return;\n  }\n  tempLow = low + ofs;\n  tempHigh = high + ofs;\n  tempMid = tempLow + (tempHigh - tempLow >> 1);\n  mergeSort_0(array, temp, tempLow, tempMid, -ofs);\n  mergeSort_0(array, temp, tempMid, tempHigh, -ofs);\n  if (dynamicCast(temp[tempMid - 1], Q$Comparable).compareTo$(temp[tempMid]) <= 0) {\n    while (low < high) {\n      setCheck(array, low++, temp[tempLow++]);\n    }\n    return;\n  }\n  merge(temp, tempLow, tempMid, tempHigh, array, low, high);\n}\n\nfunction sort(array){\n  mergeSort(array, 0, array.length);\n}\n\nfunction $clinit_Collections(){\n  $clinit_Collections = nullMethod;\n  EMPTY_LIST = new Collections$EmptyList_0;\n}\n\nvar EMPTY_LIST;\nfunction Collections$EmptyList_0(){\n}\n\nfunction Collections$EmptyList(){\n}\n\n_ = Collections$EmptyList_0.prototype = Collections$EmptyList.prototype = new AbstractList;\n_.contains_0 = function contains_3(object){\n  return false;\n}\n;\n_.get = function get_2(location_0){\n  throw new IndexOutOfBoundsException_0;\n}\n;\n_.getClass$ = function getClass_277(){\n  return Ljava_util_Collections$EmptyList_2_classLit;\n}\n;\n_.size_0 = function size_3(){\n  return 0;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable, Q$List]);\nfunction $compareTo_4(this$static, other){\n  return signum(sub(fromDouble(this$static.jsdate.getTime()), fromDouble(other.jsdate.getTime())));\n}\n\nfunction $toString_2(this$static){\n  var hourOffset, minuteOffset, offset;\n  offset = -this$static.jsdate.getTimezoneOffset();\n  hourOffset = (offset >= 0?'+':'') + ~~(offset / 60);\n  minuteOffset = (offset < 0?-offset:offset) % 60 < 10?'0' + (offset < 0?-offset:offset) % 60:'' + (offset < 0?-offset:offset) % 60;\n  return ($clinit_Date$StringData() , DAYS)[this$static.jsdate.getDay()] + ' ' + MONTHS[this$static.jsdate.getMonth()] + ' ' + padTwo(this$static.jsdate.getDate()) + ' ' + padTwo(this$static.jsdate.getHours()) + ':' + padTwo(this$static.jsdate.getMinutes()) + ':' + padTwo(this$static.jsdate.getSeconds()) + ' GMT' + hourOffset + minuteOffset + ' ' + this$static.jsdate.getFullYear();\n}\n\nfunction Date_1(){\n  this.jsdate = new Date;\n}\n\nfunction Date_2(date){\n  this.jsdate = create(toDouble(date));\n}\n\nfunction padTwo(number){\n  return number < 10?'0' + number:'' + number;\n}\n\nfunction Date_0(){\n}\n\n_ = Date_2.prototype = Date_1.prototype = Date_0.prototype = new Object_0;\n_.compareTo$ = function compareTo_6(other){\n  return $compareTo_4(this, dynamicCast(other, Q$Date));\n}\n;\n_.equals$ = function equals_11(obj){\n  return instanceOf(obj, Q$Date) && eq(fromDouble(this.jsdate.getTime()), fromDouble(dynamicCast(obj, Q$Date).jsdate.getTime()));\n}\n;\n_.getClass$ = function getClass_278(){\n  return Ljava_util_Date_2_classLit;\n}\n;\n_.hashCode$ = function hashCode_13(){\n  var time;\n  time = fromDouble(this.jsdate.getTime());\n  return toInt(xor(time, shru(time, 32)));\n}\n;\n_.toString$ = function toString_24(){\n  return $toString_2(this);\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable, Q$Comparable, Q$Date]);\n_.jsdate = null;\nfunction $clinit_Date$StringData(){\n  $clinit_Date$StringData = nullMethod;\n  DAYS = initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']);\n  MONTHS = initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Serializable_$1, Q$CharSequence_$1, Q$Comparable_$1, Q$Object_$1, Q$String_$1]), Q$String, ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']);\n}\n\nvar DAYS, MONTHS;\nfunction $equals_0(value1, value2){\n  return maskUndefined(value1) === maskUndefined(value2) || value1 != null && equals__devirtual$(value1, value2);\n}\n\nfunction HashMap_0(){\n  $clearImpl(this);\n}\n\nfunction HashMap(){\n}\n\n_ = HashMap_0.prototype = HashMap.prototype = new AbstractHashMap;\n_.getClass$ = function getClass_279(){\n  return Ljava_util_HashMap_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable, Q$Map]);\nfunction $add_11(this$static, o){\n  var old;\n  old = $put_0(this$static.map, o, this$static);\n  return old == null;\n}\n\nfunction $contains_0(this$static, o){\n  return $containsKey(this$static.map, o);\n}\n\nfunction $remove_14(this$static, o){\n  return $remove_8(this$static.map, o) != null;\n}\n\nfunction HashSet_0(){\n  this.map = new HashMap_0;\n}\n\nfunction HashSet(){\n}\n\n_ = HashSet_0.prototype = HashSet.prototype = new AbstractSet;\n_.add = function add_6(o){\n  return $add_11(this, o);\n}\n;\n_.contains_0 = function contains_4(o){\n  return $containsKey(this.map, o);\n}\n;\n_.getClass$ = function getClass_280(){\n  return Ljava_util_HashSet_2_classLit;\n}\n;\n_.isEmpty = function isEmpty_1(){\n  return this.map.size == 0;\n}\n;\n_.iterator_0 = function iterator_8(){\n  return $iterator($keySet(this.map));\n}\n;\n_.remove_1 = function remove_18(o){\n  return $remove_14(this, o);\n}\n;\n_.size_0 = function size_4(){\n  return this.map.size;\n}\n;\n_.toString$ = function toString_25(){\n  return $toString_1($keySet(this.map));\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable, Q$Set]);\n_.map = null;\nfunction $add_12(this$static, o){\n  new LinkedList$Node_1(o, this$static.header);\n  ++this$static.size;\n  return true;\n}\n\nfunction $addBefore(this$static, o, target){\n  new LinkedList$Node_1(o, target);\n  ++this$static.size;\n}\n\nfunction $addLast(this$static, o){\n  new LinkedList$Node_1(o, this$static.header);\n  ++this$static.size;\n}\n\nfunction $clear_2(this$static){\n  this$static.header = new LinkedList$Node_0;\n  this$static.size = 0;\n}\n\nfunction $listIterator(this$static, index){\n  var i, node;\n  (index < 0 || index > this$static.size) && indexOutOfBounds(index, this$static.size);\n  if (index >= this$static.size >> 1) {\n    node = this$static.header;\n    for (i = this$static.size; i > index; --i) {\n      node = node.prev;\n    }\n  }\n   else {\n    node = this$static.header.next;\n    for (i = 0; i < index; ++i) {\n      node = node.next;\n    }\n  }\n  return new LinkedList$ListIteratorImpl_0(this$static, index, node);\n}\n\nfunction LinkedList_0(){\n  this.header = new LinkedList$Node_0;\n  this.size = 0;\n}\n\nfunction LinkedList(){\n}\n\n_ = LinkedList_0.prototype = LinkedList.prototype = new AbstractSequentialList;\n_.add = function add_7(o){\n  return $add_12(this, o);\n}\n;\n_.getClass$ = function getClass_281(){\n  return Ljava_util_LinkedList_2_classLit;\n}\n;\n_.listIterator_0 = function listIterator_1(index){\n  return $listIterator(this, index);\n}\n;\n_.size_0 = function size_5(){\n  return this.size;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable, Q$List]);\n_.header = null;\n_.size = 0;\nfunction $next_6(this$static){\n  if (this$static.currentNode == this$static.this$0.header) {\n    throw new NoSuchElementException_0;\n  }\n  this$static.lastNode = this$static.currentNode;\n  this$static.currentNode = this$static.currentNode.next;\n  ++this$static.currentIndex;\n  return this$static.lastNode.value_0;\n}\n\nfunction $remove_15(this$static){\n  $verifyCurrentElement(this$static);\n  this$static.currentNode == this$static.lastNode?(this$static.currentNode = this$static.lastNode.next):--this$static.currentIndex;\n  $remove_16(this$static.lastNode);\n  this$static.lastNode = null;\n  --this$static.this$0.size;\n}\n\nfunction $verifyCurrentElement(this$static){\n  if (!this$static.lastNode) {\n    throw new IllegalStateException_0;\n  }\n}\n\nfunction LinkedList$ListIteratorImpl_0(this$0, index, startNode){\n  this.this$0 = this$0;\n  this.currentNode = startNode;\n  this.currentIndex = index;\n}\n\nfunction LinkedList$ListIteratorImpl(){\n}\n\n_ = LinkedList$ListIteratorImpl_0.prototype = LinkedList$ListIteratorImpl.prototype = new Object_0;\n_.getClass$ = function getClass_282(){\n  return Ljava_util_LinkedList$ListIteratorImpl_2_classLit;\n}\n;\n_.hasNext = function hasNext_6(){\n  return this.currentNode != this.this$0.header;\n}\n;\n_.hasPrevious = function hasPrevious_0(){\n  return this.currentNode.prev != this.this$0.header;\n}\n;\n_.next_0 = function next_7(){\n  return $next_6(this);\n}\n;\n_.previous = function previous_1(){\n  if (this.currentNode.prev == this.this$0.header) {\n    throw new NoSuchElementException_0;\n  }\n  this.lastNode = this.currentNode = this.currentNode.prev;\n  --this.currentIndex;\n  return this.lastNode.value_0;\n}\n;\n_.remove_0 = function remove_19(){\n  $remove_15(this);\n}\n;\n_.currentIndex = 0;\n_.currentNode = null;\n_.lastNode = null;\n_.this$0 = null;\nfunction $remove_16(this$static){\n  this$static.next.prev = this$static.prev;\n  this$static.prev.next = this$static.next;\n  this$static.next = this$static.prev = this$static;\n}\n\nfunction LinkedList$Node_0(){\n  this.next = this.prev = this;\n}\n\nfunction LinkedList$Node_1(value, nextNode){\n  this.value_0 = value;\n  this.next = nextNode;\n  this.prev = nextNode.prev;\n  nextNode.prev.next = this;\n  nextNode.prev = this;\n}\n\nfunction LinkedList$Node(){\n}\n\n_ = LinkedList$Node_1.prototype = LinkedList$Node_0.prototype = LinkedList$Node.prototype = new Object_0;\n_.getClass$ = function getClass_283(){\n  return Ljava_util_LinkedList$Node_2_classLit;\n}\n;\n_.next = null;\n_.prev = null;\n_.value_0 = null;\nfunction MapEntryImpl_0(key, value){\n  this.key = key;\n  this.value_0 = value;\n}\n\nfunction MapEntryImpl(){\n}\n\n_ = MapEntryImpl_0.prototype = MapEntryImpl.prototype = new AbstractMapEntry;\n_.getClass$ = function getClass_284(){\n  return Ljava_util_MapEntryImpl_2_classLit;\n}\n;\n_.getKey = function getKey_1(){\n  return this.key;\n}\n;\n_.getValue = function getValue_1(){\n  return this.value_0;\n}\n;\n_.setValue = function setValue_1(value){\n  var old;\n  old = this.value_0;\n  this.value_0 = value;\n  return old;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Map$Entry]);\n_.key = null;\n_.value_0 = null;\nfunction NoSuchElementException_0(){\n  $fillInStackTrace(this);\n}\n\nfunction NoSuchElementException(){\n}\n\n_ = NoSuchElementException_0.prototype = NoSuchElementException.prototype = new RuntimeException;\n_.getClass$ = function getClass_285(){\n  return Ljava_util_NoSuchElementException_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable, Q$Exception, Q$RuntimeException, Q$Throwable, Q$NoSuchElementException]);\nfunction equalsWithNullCheck(a, b){\n  return maskUndefined(a) === maskUndefined(b) || a != null && equals__devirtual$(a, b);\n}\n\nfunction $addLogger(this$static, logger){\n  if ($getLogger(this$static, logger.impl.name_0)) {\n    return false;\n  }\n  $addLoggerWithoutDuplicationChecking(this$static, logger);\n  return true;\n}\n\nfunction $addLoggerWithoutDuplicationChecking(this$static, logger){\n  var name_0, parent_0, parentName;\n  name_0 = logger.impl.name_0;\n  parentName = $substring_0(name_0, 0, max(0, $lastIndexOf(name_0, String.fromCharCode(46))));\n  parent_0 = $getOrAddLogger(this$static, parentName);\n  $put_0(this$static.loggerList, logger.impl.name_0, logger);\n  $setParent_0(logger.impl, parent_0);\n}\n\nfunction $getLogger(this$static, name_0){\n  return dynamicCast($get_0(this$static.loggerList, name_0), Q$Logger);\n}\n\nfunction $getOrAddLogger(this$static, name_0){\n  var logger, newLogger;\n  logger = dynamicCast($get_0(this$static.loggerList, name_0), Q$Logger);\n  if (!logger) {\n    newLogger = new Logger_0(name_0);\n    $addLoggerWithoutDuplicationChecking(this$static, newLogger);\n    return newLogger;\n  }\n  return logger;\n}\n\nfunction LogManager_0(){\n  this.loggerList = new HashMap_0;\n  this.rootLogger = new LogManager$RootLogger_0;\n  $put_0(this.loggerList, '', this.rootLogger);\n}\n\nfunction LogManager(){\n}\n\n_ = LogManager_0.prototype = LogManager.prototype = new Object_0;\n_.getClass$ = function getClass_286(){\n  return Ljava_util_logging_LogManager_2_classLit;\n}\n;\n_.loggerList = null;\n_.rootLogger = null;\nvar singleton_0 = null;\nfunction LogManager$RootLogger_0(){\n  $clinit_Logger();\n  Logger_0.call(this, '');\n  $setLevel_1(this, ($clinit_Level() , ALL_0));\n}\n\nfunction LogManager$RootLogger(){\n}\n\n_ = LogManager$RootLogger_0.prototype = LogManager$RootLogger.prototype = new Logger;\n_.getClass$ = function getClass_287(){\n  return Ljava_util_logging_LogManager$RootLogger_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Logger]);\nfunction $setLoggerName(this$static, newName){\n  this$static.loggerName = newName;\n}\n\nfunction LogRecord_0(level, msg){\n  this.level = level;\n  this.msg = msg;\n  this.millis = fromDouble((new Date_1).jsdate.getTime());\n}\n\nfunction LogRecord(){\n}\n\n_ = LogRecord_0.prototype = LogRecord.prototype = new Object_0;\n_.getClass$ = function getClass_288(){\n  return Ljava_util_logging_LogRecord_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Serializable]);\n_.level = null;\n_.loggerName = '';\n_.millis = P0_longLit;\n_.msg = null;\n_.thrown = null;\nfunction $setParent_1(this$static, parent_0){\n  var oldParent;\n  oldParent = this$static.parent_0;\n  if (!parent_0) {\n    !!oldParent && oldParent.attached && $onDetach(this$static);\n    this$static.parent_0 = null;\n  }\n   else {\n    if (oldParent) {\n      throw new IllegalStateException_1('Cannot set a new parent without first clearing the old parent');\n    }\n    this$static.parent_0 = parent_0;\n    parent_0.attached && ($onAttach(this$static) , undefined);\n  }\n}\n\nfunction VectorObject_0(){\n  $setElement(this, $createElement_0(this.getType()));\n}\n\nfunction VectorObject(){\n}\n\n_ = VectorObject.prototype = new Widget;\n_.getClass$ = function getClass_289(){\n  return Lorg_vaadin_gwtgraphics_client_VectorObject_2_classLit;\n}\n;\n_.getParent = function getParent_0(){\n  return this.parent_0;\n}\n;\n_.onAttach = function onAttach_3(){\n  $onAttach(this);\n}\n;\n_.onDetach = function onDetach_1(){\n  $onDetach(this);\n}\n;\n_.setHeight = function setHeight_3(height){\n  throw new UnsupportedOperationException_0(\"VectorObject doesn't support setHeight\");\n}\n;\n_.setStyleName = function setStyleName_2(style){\n  setClassName(this.element_0, style + '-svg');\n}\n;\n_.setWidth = function setWidth_3(width){\n  throw new UnsupportedOperationException_0(\"VectorObject doesn't support setWidth\");\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget, Q$VectorObject]);\n_.parent_0 = null;\nfunction Line_0(x1, y1, x2, y2){\n  VectorObject_0.call(this);\n  $setXY(this.element_0, true, x1, this.attached);\n  $setXY(this.element_0, false, y1, this.attached);\n  setAttributeNS(null, this.element_0, 'x2', '' + x2);\n  setAttributeNS(null, this.element_0, 'y2', '' + y2);\n  this.element_0.setAttributeNS(null, 'stroke-width', '1');\n  this.element_0.setAttributeNS(null, 'stroke-opacity', '1.0');\n  this.element_0.setAttributeNS(null, 'stroke', 'black');\n}\n\nfunction Line(){\n}\n\n_ = Line_0.prototype = Line.prototype = new VectorObject;\n_.getClass$ = function getClass_290(){\n  return Lorg_vaadin_gwtgraphics_client_Line_2_classLit;\n}\n;\n_.getType = function getType(){\n  return Lorg_vaadin_gwtgraphics_client_Line_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget, Q$VectorObject]);\nfunction $setFillColor(this$static, color){\n  $setFillColor_0(this$static.element_0, color);\n}\n\nfunction Shape(){\n}\n\n_ = Shape.prototype = new VectorObject;\n_.getClass$ = function getClass_291(){\n  return Lorg_vaadin_gwtgraphics_client_Shape_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget, Q$VectorObject]);\nfunction $createElement_0(type){\n  var element;\n  element = null;\n  if (type == Lorg_vaadin_gwtgraphics_client_shape_Rectangle_2_classLit) {\n    element = $doc.createElementNS('http://www.w3.org/2000/svg', 'rect');\n  }\n   else if (type == Lorg_vaadin_gwtgraphics_client_shape_Circle_2_classLit) {\n    element = $doc.createElementNS('http://www.w3.org/2000/svg', 'circle');\n  }\n   else if (type == Lorg_vaadin_gwtgraphics_client_shape_Ellipse_2_classLit) {\n    element = $doc.createElementNS('http://www.w3.org/2000/svg', 'ellipse');\n  }\n   else if (type == Lorg_vaadin_gwtgraphics_client_shape_Path_2_classLit) {\n    element = $doc.createElementNS('http://www.w3.org/2000/svg', 'path');\n  }\n   else if (type == Lorg_vaadin_gwtgraphics_client_shape_Text_2_classLit) {\n    element = $doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n    element.setAttribute('text-anchor', 'start');\n  }\n   else if (type == Lorg_vaadin_gwtgraphics_client_Image_2_classLit) {\n    element = $doc.createElementNS('http://www.w3.org/2000/svg', 'image');\n    element.setAttribute('preserveAspectRatio', 'none');\n  }\n   else \n    type == Lorg_vaadin_gwtgraphics_client_Line_2_classLit?(element = $doc.createElementNS('http://www.w3.org/2000/svg', 'line')):type == Lorg_vaadin_gwtgraphics_client_Group_2_classLit && (element = $doc.createElementNS('http://www.w3.org/2000/svg', 'g'));\n  return element;\n}\n\nfunction $getPosAttribute(element, x){\n  var attr, tagName;\n  tagName = element.tagName;\n  attr = '';\n  if ($equals(tagName, 'rect') || $equals(tagName, 'text') || $equals(tagName, 'image')) {\n    attr = x?'x':'y';\n  }\n   else if ($equals(tagName, 'circle') || $equals(tagName, 'ellipse')) {\n    attr = x?'cx':'cy';\n  }\n   else if ($equals(tagName, 'path'))\n  ;\n  else \n    $equals(tagName, 'line') && (attr = x?'x1':'y1');\n  return attr;\n}\n\nfunction $setFillColor_0(element, color){\n  color == null && (color = 'none');\n  element.setAttributeNS(null, 'fill', color);\n}\n\nfunction $setHeight_1(element, height){\n  element.setAttributeNS(null, 'height', '' + height);\n  $equalsIgnoreCase(element.tagName, 'svg') && ($getParentElement(element).style['height'] = height + ($clinit_Style$Unit() , 'px') , undefined);\n}\n\nfunction $setRotateTransform(element, degree, attached){\n  var box, x, y;\n  box = getBBBox(element, attached);\n  x = box.x + ~~(box.width / 2);\n  y = box.y + ~~(box.height / 2);\n  element.setAttributeNS(null, 'transform', 'rotate(' + degree + ' ' + x + ' ' + y + ')');\n}\n\nfunction $setWidth_1(element, width){\n  element.setAttributeNS(null, 'width', '' + width);\n  $equalsIgnoreCase(element.tagName, 'svg') && ($getParentElement(element).style['width'] = width + ($clinit_Style$Unit() , 'px') , undefined);\n}\n\nfunction $setXY(element, x, value, attached){\n  var posAttr, rotation;\n  rotation = $getPropertyInt(element, '_rotation');\n  posAttr = $getPosAttribute(element, x);\n  element.setAttributeNS(null, posAttr, '' + value);\n  rotation != 0 && addCommand(new SVGImpl$1_0(element, posAttr, value, rotation, attached));\n}\n\nfunction $execute_0(this$static){\n  this$static.val$element.setAttributeNS(null, 'transform', '');\n  setAttributeNS(null, this$static.val$element, this$static.val$posAttr, '' + this$static.val$value);\n  $setRotateTransform(this$static.val$element, this$static.val$rotation, this$static.val$attached);\n}\n\nfunction SVGImpl$1_0(val$element, val$posAttr, val$value, val$rotation, val$attached){\n  this.val$element = val$element;\n  this.val$posAttr = val$posAttr;\n  this.val$value = val$value;\n  this.val$rotation = val$rotation;\n  this.val$attached = val$attached;\n}\n\nfunction SVGImpl$1(){\n}\n\n_ = SVGImpl$1_0.prototype = SVGImpl$1.prototype = new Object_0;\n_.execute = function execute_11(){\n  $execute_0(this);\n}\n;\n_.getClass$ = function getClass_292(){\n  return Lorg_vaadin_gwtgraphics_client_impl_SVGImpl$1_2_classLit;\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$Command]);\n_.val$attached = false;\n_.val$element = null;\n_.val$posAttr = null;\n_.val$rotation = 0;\n_.val$value = 0;\nfunction parseIntValue(value){\n  var $e0;\n  if (value == null) {\n    return 0;\n  }\n  $endsWith(value, 'px') && (value = $substring_0(value, 0, value.length - 2));\n  try {\n    return __parseAndValidateInt(value);\n  }\n   catch ($e0) {\n    $e0 = caught_0($e0);\n    if (instanceOf($e0, Q$NumberFormatException)) {\n      return 0;\n    }\n     else \n      throw $e0;\n  }\n}\n\nfunction getBBBox(element, attached){\n  var bbox = null;\n  if (attached) {\n    bbox = element.getBBox();\n  }\n   else {\n    var ns = 'http://www.w3.org/2000/svg';\n    var svg = $doc.createElementNS(ns, 'svg');\n    var parent_0 = element.parentNode;\n    svg.appendChild(element);\n    $doc.documentElement.appendChild(svg);\n    bbox = element.getBBox();\n    $doc.documentElement.removeChild(svg);\n    parent_0 != null && parent_0.appendChild(element);\n  }\n  return bbox;\n}\n\nfunction setAttributeNS(uri, elem, attr, value){\n  elem.setAttributeNS(uri, attr, value);\n}\n\nfunction setClassName(element, name_0){\n  element.className.baseVal = name_0;\n}\n\nfunction $setHeight_2(this$static, height){\n  $setHeight_1(this$static.element_0, height);\n}\n\nfunction $setWidth_2(this$static, width){\n  $setWidth_1(this$static.element_0, width);\n}\n\nfunction Rectangle_0(x, y, width, height){\n  VectorObject_0.call(this);\n  $setFillColor_0(this.element_0, 'white');\n  this.element_0.setAttributeNS(null, 'fill-opacity', '1.0');\n  this.element_0.setAttributeNS(null, 'stroke', 'black');\n  this.element_0.setAttributeNS(null, 'stroke-opacity', '1.0');\n  this.element_0.setAttributeNS(null, 'stroke-width', '1');\n  $setXY(this.element_0, true, x, this.attached);\n  $setXY(this.element_0, false, y, this.attached);\n  $setWidth_1(this.element_0, width);\n  $setHeight_1(this.element_0, height);\n}\n\nfunction Rectangle(){\n}\n\n_ = Rectangle_0.prototype = Rectangle.prototype = new Shape;\n_.getClass$ = function getClass_293(){\n  return Lorg_vaadin_gwtgraphics_client_shape_Rectangle_2_classLit;\n}\n;\n_.getType = function getType_0(){\n  return Lorg_vaadin_gwtgraphics_client_shape_Rectangle_2_classLit;\n}\n;\n_.setHeight = function setHeight_4(height){\n  var $e0, successful;\n  successful = false;\n  if (height != null && $endsWith(height, 'px')) {\n    try {\n      $setHeight_2(this, __parseAndValidateInt($substring_0(height, 0, height.length - 2)));\n      successful = true;\n    }\n     catch ($e0) {\n      $e0 = caught_0($e0);\n      if (!instanceOf($e0, Q$NumberFormatException))\n        throw $e0;\n    }\n  }\n  if (!successful) {\n    throw new IllegalArgumentException_0('Only pixel units (px) are supported');\n  }\n}\n;\n_.setWidth = function setWidth_4(width){\n  var $e0, successful;\n  successful = false;\n  if (width != null && $endsWith(width, 'px')) {\n    try {\n      $setWidth_2(this, __parseAndValidateInt($substring_0(width, 0, width.length - 2)));\n      successful = true;\n    }\n     catch ($e0) {\n      $e0 = caught_0($e0);\n      if (!instanceOf($e0, Q$NumberFormatException))\n        throw $e0;\n    }\n  }\n  if (!successful) {\n    throw new IllegalArgumentException_0('Only pixel units (px) are supported');\n  }\n}\n;\n_.castableTypeMap$ = makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget, Q$VectorObject]);\nvar $entry = entry_0;\nfunction gwtOnLoad(errFn, modName, modBase, softPermutationId){\n  $moduleName = modName;\n  $moduleBase = modBase;\n  if (errFn)\n    try {\n      $entry(init)();\n    }\n     catch (e) {\n      errFn(modName);\n    }\n   else {\n    $entry(init)();\n  }\n}\n\nvar Ljava_lang_Object_2_classLit = createForClass('java.lang.', 'Object'), Lcom_allen_1sauer_gwt_dnd_client_AbstractDragController_2_classLit = createForClass('com.allen_sauer.gwt.dnd.client.', 'AbstractDragController'), Lcom_allen_1sauer_gwt_dnd_client_DragContext_2_classLit = createForClass('com.allen_sauer.gwt.dnd.client.', 'DragContext'), Ljava_util_AbstractCollection_2_classLit = createForClass('java.util.', 'AbstractCollection'), Ljava_util_AbstractList_2_classLit = createForClass('java.util.', 'AbstractList'), Ljava_util_ArrayList_2_classLit = createForClass('java.util.', 'ArrayList'), Lcom_allen_1sauer_gwt_dnd_client_DropControllerCollection_2_classLit = createForClass('com.allen_sauer.gwt.dnd.client.', 'DropControllerCollection'), Lcom_allen_1sauer_gwt_dnd_client_DropControllerCollection$Candidate_2_classLit = createForClass('com.allen_sauer.gwt.dnd.client.', 'DropControllerCollection$Candidate'), _3Lcom_allen_1sauer_gwt_dnd_client_DropControllerCollection$Candidate_2_classLit = createForArray('[Lcom.allen_sauer.gwt.dnd.client.', 'DropControllerCollection$Candidate;'), Lcom_allen_1sauer_gwt_dnd_client_MouseDragHandler_2_classLit = createForClass('com.allen_sauer.gwt.dnd.client.', 'MouseDragHandler'), Lcom_allen_1sauer_gwt_dnd_client_MouseDragHandler$1_2_classLit = createForClass('com.allen_sauer.gwt.dnd.client.', 'MouseDragHandler$1'), Lcom_allen_1sauer_gwt_dnd_client_MouseDragHandler$RegisteredDraggable_2_classLit = createForClass('com.allen_sauer.gwt.dnd.client.', 'MouseDragHandler$RegisteredDraggable'), Lcom_allen_1sauer_gwt_dnd_client_PickupDragController_2_classLit = createForClass('com.allen_sauer.gwt.dnd.client.', 'PickupDragController'), Lcom_allen_1sauer_gwt_dnd_client_PickupDragController$SavedWidgetInfo_2_classLit = createForClass('com.allen_sauer.gwt.dnd.client.', 'PickupDragController$SavedWidgetInfo'), Ljava_lang_Throwable_2_classLit = createForClass('java.lang.', 'Throwable'), Ljava_lang_Exception_2_classLit = createForClass('java.lang.', 'Exception'), Lcom_allen_1sauer_gwt_dnd_client_VetoDragException_2_classLit = createForClass('com.allen_sauer.gwt.dnd.client.', 'VetoDragException'), Lcom_allen_1sauer_gwt_dnd_client_drop_AbstractDropController_2_classLit = createForClass('com.allen_sauer.gwt.dnd.client.drop.', 'AbstractDropController'), Lcom_allen_1sauer_gwt_dnd_client_drop_AbstractPositioningDropController_2_classLit = createForClass('com.allen_sauer.gwt.dnd.client.drop.', 'AbstractPositioningDropController'), Lcom_allen_1sauer_gwt_dnd_client_drop_AbsolutePositionDropController_2_classLit = createForClass('com.allen_sauer.gwt.dnd.client.drop.', 'AbsolutePositionDropController'), Lcom_allen_1sauer_gwt_dnd_client_drop_AbsolutePositionDropController$Draggable_2_classLit = createForClass('com.allen_sauer.gwt.dnd.client.drop.', 'AbsolutePositionDropController$Draggable'), Lcom_allen_1sauer_gwt_dnd_client_drop_BoundaryDropController_2_classLit = createForClass('com.allen_sauer.gwt.dnd.client.drop.', 'BoundaryDropController'), Lcom_allen_1sauer_gwt_dnd_client_util_AbstractArea_2_classLit = createForClass('com.allen_sauer.gwt.dnd.client.util.', 'AbstractArea'), Lcom_allen_1sauer_gwt_dnd_client_util_AbstractLocation_2_classLit = createForClass('com.allen_sauer.gwt.dnd.client.util.', 'AbstractLocation'), Lcom_allen_1sauer_gwt_dnd_client_util_CoordinateLocation_2_classLit = createForClass('com.allen_sauer.gwt.dnd.client.util.', 'CoordinateLocation'), Lcom_allen_1sauer_gwt_dnd_client_util_WidgetArea_2_classLit = createForClass('com.allen_sauer.gwt.dnd.client.util.', 'WidgetArea'), Lcom_allen_1sauer_gwt_dnd_client_util_WidgetLocation_2_classLit = createForClass('com.allen_sauer.gwt.dnd.client.util.', 'WidgetLocation'), Lcom_allen_1sauer_gwt_dnd_client_util_impl_DOMUtilImpl_2_classLit = createForClass('com.allen_sauer.gwt.dnd.client.util.impl.', 'DOMUtilImpl'), Lcom_allen_1sauer_gwt_dnd_client_util_impl_DOMUtilImplStandard_2_classLit = createForClass('com.allen_sauer.gwt.dnd.client.util.impl.', 'DOMUtilImplStandard'), Lcom_allen_1sauer_gwt_dnd_client_util_impl_DOMUtilImplOpera_2_classLit = createForClass('com.allen_sauer.gwt.dnd.client.util.impl.', 'DOMUtilImplOpera'), Lcom_google_gwt_animation_client_Animation_2_classLit = createForClass('com.google.gwt.animation.client.', 'Animation'), Lcom_google_gwt_animation_client_Animation$1_2_classLit = createForClass('com.google.gwt.animation.client.', 'Animation$1'), Lcom_google_gwt_animation_client_AnimationScheduler_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationScheduler'), Lcom_google_gwt_animation_client_AnimationScheduler$AnimationHandle_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationScheduler$AnimationHandle'), Lcom_google_gwt_animation_client_AnimationSchedulerImpl_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImpl'), Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImplTimer'), Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$AnimationHandleImpl_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImplTimer$AnimationHandleImpl'), _3Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$AnimationHandleImpl_2_classLit = createForArray('[Lcom.google.gwt.animation.client.', 'AnimationSchedulerImplTimer$AnimationHandleImpl;'), Lcom_google_gwt_user_client_Timer_2_classLit = createForClass('com.google.gwt.user.client.', 'Timer'), Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$1_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImplTimer$1'), Ljava_lang_Enum_2_classLit = createForClass('java.lang.', 'Enum'), Lcom_google_gwt_core_client_Duration_2_classLit = createForClass('com.google.gwt.core.client.', 'Duration'), Ljava_lang_RuntimeException_2_classLit = createForClass('java.lang.', 'RuntimeException'), Lcom_google_gwt_core_client_JavaScriptException_2_classLit = createForClass('com.google.gwt.core.client.', 'JavaScriptException'), Lcom_google_gwt_core_client_JavaScriptObject_2_classLit = createForClass('com.google.gwt.core.client.', 'JavaScriptObject$'), Lcom_google_gwt_core_client_Scheduler_2_classLit = createForClass('com.google.gwt.core.client.', 'Scheduler'), _3I_classLit = createForArray('', '[I'), _3Ljava_lang_Object_2_classLit = createForArray('[Ljava.lang.', 'Object;'), Lcom_google_gwt_core_client_impl_SchedulerImpl_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'SchedulerImpl'), Lcom_google_gwt_core_client_impl_SchedulerImpl$Flusher_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'SchedulerImpl$Flusher'), Lcom_google_gwt_core_client_impl_SchedulerImpl$Rescuer_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'SchedulerImpl$Rescuer'), Ljava_lang_StackTraceElement_2_classLit = createForClass('java.lang.', 'StackTraceElement'), _3Ljava_lang_StackTraceElement_2_classLit = createForArray('[Ljava.lang.', 'StackTraceElement;'), Lcom_google_gwt_core_client_impl_StringBufferImpl_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StringBufferImpl'), Lcom_google_gwt_core_client_impl_StringBufferImplAppend_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StringBufferImplAppend'), Ljava_lang_String_2_classLit = createForClass('java.lang.', 'String'), _3Ljava_lang_String_2_classLit = createForArray('[Ljava.lang.', 'String;'), Lcom_google_gwt_dom_client_Style$BorderStyle_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$BorderStyle', values), _3Lcom_google_gwt_dom_client_Style$BorderStyle_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$BorderStyle;'), Lcom_google_gwt_dom_client_Style$BorderStyle$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$BorderStyle$1', null), Lcom_google_gwt_dom_client_Style$BorderStyle$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$BorderStyle$2', null), Lcom_google_gwt_dom_client_Style$BorderStyle$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$BorderStyle$3', null), Lcom_google_gwt_dom_client_Style$BorderStyle$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$BorderStyle$4', null), Lcom_google_gwt_dom_client_Style$BorderStyle$5_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$BorderStyle$5', null), Lcom_google_gwt_dom_client_Style$Display_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display', values_0), _3Lcom_google_gwt_dom_client_Style$Display_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Display;'), Lcom_google_gwt_dom_client_Style$Display$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display$1', null), Lcom_google_gwt_dom_client_Style$Display$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display$2', null), Lcom_google_gwt_dom_client_Style$Display$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display$3', null), Lcom_google_gwt_dom_client_Style$Display$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display$4', null), Lcom_google_gwt_dom_client_Style$Overflow_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow', values_1), _3Lcom_google_gwt_dom_client_Style$Overflow_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Overflow;'), Lcom_google_gwt_dom_client_Style$Overflow$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow$1', null), Lcom_google_gwt_dom_client_Style$Overflow$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow$2', null), Lcom_google_gwt_dom_client_Style$Overflow$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow$3', null), Lcom_google_gwt_dom_client_Style$Overflow$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow$4', null), Lcom_google_gwt_dom_client_Style$Position_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position', values_2), _3Lcom_google_gwt_dom_client_Style$Position_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Position;'), Lcom_google_gwt_dom_client_Style$Position$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position$1', null), Lcom_google_gwt_dom_client_Style$Position$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position$2', null), Lcom_google_gwt_dom_client_Style$Position$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position$3', null), Lcom_google_gwt_dom_client_Style$Position$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position$4', null), Lcom_google_gwt_dom_client_Style$Unit_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit', values_3), _3Lcom_google_gwt_dom_client_Style$Unit_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Unit;'), Lcom_google_gwt_dom_client_Style$Unit$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$1', null), Lcom_google_gwt_dom_client_Style$Unit$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$2', null), Lcom_google_gwt_dom_client_Style$Unit$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$3', null), Lcom_google_gwt_dom_client_Style$Unit$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$4', null), Lcom_google_gwt_dom_client_Style$Unit$5_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$5', null), Lcom_google_gwt_dom_client_Style$Unit$6_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$6', null), Lcom_google_gwt_dom_client_Style$Unit$7_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$7', null), Lcom_google_gwt_dom_client_Style$Unit$8_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$8', null), Lcom_google_gwt_dom_client_Style$Unit$9_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$9', null), Lcom_google_gwt_dom_client_StyleInjector$1_2_classLit = createForClass('com.google.gwt.dom.client.', 'StyleInjector$1'), Lcom_google_gwt_dom_client_StyleInjector$StyleInjectorImpl_2_classLit = createForClass('com.google.gwt.dom.client.', 'StyleInjector$StyleInjectorImpl'), Lcom_google_web_bindery_event_shared_Event_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'Event'), Lcom_google_gwt_event_shared_GwtEvent_2_classLit = createForClass('com.google.gwt.event.shared.', 'GwtEvent'), Lcom_google_gwt_event_dom_client_DomEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'DomEvent'), Lcom_google_gwt_event_dom_client_HumanInputEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'HumanInputEvent'), Lcom_google_gwt_event_dom_client_MouseEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseEvent'), Lcom_google_gwt_event_dom_client_ClickEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'ClickEvent'), Lcom_google_web_bindery_event_shared_Event$Type_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'Event$Type'), Lcom_google_gwt_event_shared_GwtEvent$Type_2_classLit = createForClass('com.google.gwt.event.shared.', 'GwtEvent$Type'), Lcom_google_gwt_event_dom_client_DomEvent$Type_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'DomEvent$Type'), Lcom_google_gwt_event_dom_client_MouseDownEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseDownEvent'), Lcom_google_gwt_event_dom_client_MouseMoveEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseMoveEvent'), Lcom_google_gwt_event_dom_client_MouseOutEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseOutEvent'), Lcom_google_gwt_event_dom_client_MouseOverEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseOverEvent'), Lcom_google_gwt_event_dom_client_MouseUpEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseUpEvent'), Lcom_google_gwt_event_dom_client_PrivateMap_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'PrivateMap'), Lcom_google_gwt_event_dom_client_TouchEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'TouchEvent'), Lcom_google_gwt_event_dom_client_TouchCancelEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'TouchCancelEvent'), Lcom_google_gwt_event_dom_client_TouchEndEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'TouchEndEvent'), Lcom_google_gwt_event_dom_client_TouchEvent$TouchSupportDetector_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'TouchEvent$TouchSupportDetector'), Lcom_google_gwt_event_dom_client_TouchMoveEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'TouchMoveEvent'), Lcom_google_gwt_event_dom_client_TouchStartEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'TouchStartEvent'), Lcom_google_gwt_event_logical_shared_AttachEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'AttachEvent'), Lcom_google_gwt_event_logical_shared_CloseEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'CloseEvent'), Lcom_google_gwt_event_logical_shared_ResizeEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'ResizeEvent'), Lcom_google_gwt_event_logical_shared_ValueChangeEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'ValueChangeEvent'), Lcom_google_gwt_event_shared_HandlerManager_2_classLit = createForClass('com.google.gwt.event.shared.', 'HandlerManager'), Lcom_google_web_bindery_event_shared_EventBus_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'EventBus'), Lcom_google_web_bindery_event_shared_SimpleEventBus_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus'), Lcom_google_gwt_event_shared_HandlerManager$Bus_2_classLit = createForClass('com.google.gwt.event.shared.', 'HandlerManager$Bus'), Lcom_google_gwt_event_shared_LegacyHandlerWrapper_2_classLit = createForClass('com.google.gwt.event.shared.', 'LegacyHandlerWrapper'), Lcom_google_web_bindery_event_shared_UmbrellaException_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'UmbrellaException'), Lcom_google_gwt_event_shared_UmbrellaException_2_classLit = createForClass('com.google.gwt.event.shared.', 'UmbrellaException'), Lcom_google_gwt_gadgets_client_Gadget_2_classLit = createForClass('com.google.gwt.gadgets.client.', 'Gadget'), Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit = createForEnum('com.google.gwt.i18n.client.', 'HasDirection$Direction', values_4), _3Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit = createForArray('[Lcom.google.gwt.i18n.client.', 'HasDirection$Direction;'), Lcom_google_gwt_lang_LongLibBase$LongEmul_2_classLit = createForClass('com.google.gwt.lang.', 'LongLibBase$LongEmul'), _3Lcom_google_gwt_lang_LongLibBase$LongEmul_2_classLit = createForArray('[Lcom.google.gwt.lang.', 'LongLibBase$LongEmul;'), Ljava_util_logging_Handler_2_classLit = createForClass('java.util.logging.', 'Handler'), Lcom_google_gwt_logging_client_ConsoleLogHandler_2_classLit = createForClass('com.google.gwt.logging.client.', 'ConsoleLogHandler'), Lcom_google_gwt_logging_client_DevelopmentModeLogHandler_2_classLit = createForClass('com.google.gwt.logging.client.', 'DevelopmentModeLogHandler'), Lcom_google_gwt_logging_client_FirebugLogHandler_2_classLit = createForClass('com.google.gwt.logging.client.', 'FirebugLogHandler'), Lcom_google_gwt_logging_client_HasWidgetsLogHandler_2_classLit = createForClass('com.google.gwt.logging.client.', 'HasWidgetsLogHandler'), Ljava_util_logging_Formatter_2_classLit = createForClass('java.util.logging.', 'Formatter'), Lcom_google_gwt_logging_impl_FormatterImpl_2_classLit = createForClass('com.google.gwt.logging.impl.', 'FormatterImpl'), Lcom_google_gwt_logging_client_HtmlLogFormatter_2_classLit = createForClass('com.google.gwt.logging.client.', 'HtmlLogFormatter'), Lcom_google_gwt_logging_client_LogConfiguration_2_classLit = createForClass('com.google.gwt.logging.client.', 'LogConfiguration'), Lcom_google_gwt_logging_client_LogConfiguration$1_2_classLit = createForClass('com.google.gwt.logging.client.', 'LogConfiguration$1'), Lcom_google_gwt_logging_client_LogConfiguration$LogConfigurationImplRegular_2_classLit = createForClass('com.google.gwt.logging.client.', 'LogConfiguration$LogConfigurationImplRegular'), Lcom_google_gwt_user_client_ui_UIObject_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'UIObject'), Lcom_google_gwt_user_client_ui_Widget_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Widget'), Lcom_google_gwt_user_client_ui_Panel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Panel'), Lcom_google_gwt_user_client_ui_SimplePanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'SimplePanel'), Lcom_google_gwt_user_client_ui_PopupPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel'), Lcom_google_gwt_logging_client_LoggingPopup_2_classLit = createForClass('com.google.gwt.logging.client.', 'LoggingPopup'), Lcom_google_gwt_logging_client_LoggingPopup$1_2_classLit = createForClass('com.google.gwt.logging.client.', 'LoggingPopup$1'), Lcom_google_gwt_logging_client_LoggingPopup$MouseDragHandler_2_classLit = createForClass('com.google.gwt.logging.client.', 'LoggingPopup$MouseDragHandler'), Lcom_google_gwt_user_client_ui_ScrollPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ScrollPanel'), Lcom_google_gwt_logging_client_LoggingPopup$ScrollPanelWithMinSize_2_classLit = createForClass('com.google.gwt.logging.client.', 'LoggingPopup$ScrollPanelWithMinSize'), Lcom_google_gwt_logging_client_LoggingPopup$WindowMoveHandler_2_classLit = createForClass('com.google.gwt.logging.client.', 'LoggingPopup$WindowMoveHandler'), Lcom_google_gwt_logging_client_LoggingPopup$WindowResizeHandler_2_classLit = createForClass('com.google.gwt.logging.client.', 'LoggingPopup$WindowResizeHandler'), Lcom_google_gwt_logging_client_NullLogHandler_2_classLit = createForClass('com.google.gwt.logging.client.', 'NullLogHandler'), Lcom_google_gwt_logging_client_SystemLogHandler_2_classLit = createForClass('com.google.gwt.logging.client.', 'SystemLogHandler'), Lcom_google_gwt_logging_client_TextLogFormatter_2_classLit = createForClass('com.google.gwt.logging.client.', 'TextLogFormatter'), Lcom_google_gwt_logging_impl_LevelImplRegular_2_classLit = createForClass('com.google.gwt.logging.impl.', 'LevelImplRegular'), Ljava_util_logging_Level_2_classLit = createForClass('java.util.logging.', 'Level'), Lcom_google_gwt_logging_impl_LevelImplRegular$LevelWithExposedConstructor_2_classLit = createForClass('com.google.gwt.logging.impl.', 'LevelImplRegular$LevelWithExposedConstructor'), Lcom_google_gwt_logging_impl_LoggerImplRegular_2_classLit = createForClass('com.google.gwt.logging.impl.', 'LoggerImplRegular'), Ljava_util_logging_Logger_2_classLit = createForClass('java.util.logging.', 'Logger'), Lcom_google_gwt_logging_impl_LoggerWithExposedConstructor_2_classLit = createForClass('com.google.gwt.logging.impl.', 'LoggerWithExposedConstructor'), Lcom_sciencegadgets_client_TopNodesNotFoundException_2_classLit = createForClass('com.sciencegadgets.client.', 'TopNodesNotFoundException'), Lcom_sciencegadgets_client_equationbrowser_ElementNotFoundExeption_2_classLit = createForClass('com.sciencegadgets.client.equationbrowser.', 'ElementNotFoundExeption'), Ljava_lang_IndexOutOfBoundsException_2_classLit = createForClass('java.lang.', 'IndexOutOfBoundsException'), Ljava_lang_ArrayStoreException_2_classLit = createForClass('java.lang.', 'ArrayStoreException'), Ljava_lang_Boolean_2_classLit = createForClass('java.lang.', 'Boolean'), Ljava_lang_ClassCastException_2_classLit = createForClass('java.lang.', 'ClassCastException'), Ljava_lang_IllegalArgumentException_2_classLit = createForClass('java.lang.', 'IllegalArgumentException'), Ljava_lang_IllegalStateException_2_classLit = createForClass('java.lang.', 'IllegalStateException'), Ljava_lang_NullPointerException_2_classLit = createForClass('java.lang.', 'NullPointerException'), Ljava_lang_NumberFormatException_2_classLit = createForClass('java.lang.', 'NumberFormatException'), Ljava_lang_UnsupportedOperationException_2_classLit = createForClass('java.lang.', 'UnsupportedOperationException'), Ljava_util_AbstractSet_2_classLit = createForClass('java.util.', 'AbstractSet'), Ljava_util_HashSet_2_classLit = createForClass('java.util.', 'HashSet'), Ljava_util_NoSuchElementException_2_classLit = createForClass('java.util.', 'NoSuchElementException'), Ljava_util_AbstractMap_2_classLit = createForClass('java.util.', 'AbstractMap'), Ljava_util_logging_LogRecord_2_classLit = createForClass('java.util.logging.', 'LogRecord'), Lcom_google_gwt_touch_client_DefaultMomentum_2_classLit = createForClass('com.google.gwt.touch.client.', 'DefaultMomentum'), Lcom_google_gwt_touch_client_Momentum$State_2_classLit = createForClass('com.google.gwt.touch.client.', 'Momentum$State'), Lcom_google_gwt_touch_client_Point_2_classLit = createForClass('com.google.gwt.touch.client.', 'Point'), Lcom_google_gwt_touch_client_TouchScroller_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller'), Lcom_google_gwt_touch_client_TouchScroller$1_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$1'), Lcom_google_gwt_touch_client_TouchScroller$2_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$2'), Lcom_google_gwt_touch_client_TouchScroller$3_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$3'), Lcom_google_gwt_touch_client_TouchScroller$4_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$4'), Lcom_google_gwt_touch_client_TouchScroller$5_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$5'), Lcom_google_gwt_touch_client_TouchScroller$6_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$6'), Lcom_google_gwt_touch_client_TouchScroller$MomentumCommand_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$MomentumCommand'), Lcom_google_gwt_touch_client_TouchScroller$MomentumCommand$1_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$MomentumCommand$1'), Lcom_google_gwt_touch_client_TouchScroller$MomentumTouchRemovalCommand_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$MomentumTouchRemovalCommand'), Lcom_google_gwt_touch_client_TouchScroller$TemporalPoint_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$TemporalPoint'), Lcom_google_gwt_user_client_CommandCanceledException_2_classLit = createForClass('com.google.gwt.user.client.', 'CommandCanceledException'), Lcom_google_gwt_user_client_CommandExecutor_2_classLit = createForClass('com.google.gwt.user.client.', 'CommandExecutor'), Lcom_google_gwt_user_client_CommandExecutor$1_2_classLit = createForClass('com.google.gwt.user.client.', 'CommandExecutor$1'), Lcom_google_gwt_user_client_CommandExecutor$2_2_classLit = createForClass('com.google.gwt.user.client.', 'CommandExecutor$2'), Lcom_google_gwt_user_client_CommandExecutor$CircularIterator_2_classLit = createForClass('com.google.gwt.user.client.', 'CommandExecutor$CircularIterator'), Lcom_google_gwt_user_client_Event$NativePreviewEvent_2_classLit = createForClass('com.google.gwt.user.client.', 'Event$NativePreviewEvent'), Lcom_google_gwt_user_client_Timer$1_2_classLit = createForClass('com.google.gwt.user.client.', 'Timer$1'), Lcom_google_gwt_user_client_Window$ClosingEvent_2_classLit = createForClass('com.google.gwt.user.client.', 'Window$ClosingEvent'), Lcom_google_gwt_user_client_Window$WindowHandlers_2_classLit = createForClass('com.google.gwt.user.client.', 'Window$WindowHandlers'), Lcom_google_gwt_user_client_impl_ElementMapperImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'ElementMapperImpl'), Lcom_google_gwt_user_client_impl_ElementMapperImpl$FreeNode_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'ElementMapperImpl$FreeNode'), Lcom_google_gwt_user_client_impl_HistoryImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'HistoryImpl'), Lcom_google_gwt_user_client_impl_HistoryImplTimer_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'HistoryImplTimer'), Lcom_google_gwt_user_client_ui_ComplexPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ComplexPanel'), Lcom_google_gwt_user_client_ui_AbsolutePanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AbsolutePanel'), Lcom_google_gwt_user_client_ui_AttachDetachException_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AttachDetachException'), Lcom_google_gwt_user_client_ui_AttachDetachException$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AttachDetachException$1'), Lcom_google_gwt_user_client_ui_AttachDetachException$2_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AttachDetachException$2'), Lcom_google_gwt_user_client_ui_FocusWidget_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FocusWidget'), Lcom_google_gwt_user_client_ui_ButtonBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ButtonBase'), Lcom_google_gwt_user_client_ui_Button_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Button'), Lcom_google_gwt_user_client_ui_CellPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'CellPanel'), Lcom_google_gwt_user_client_ui_CheckBox_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'CheckBox'), Lcom_google_gwt_user_client_ui_DirectionalTextHelper_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DirectionalTextHelper'), _3Lcom_google_gwt_user_client_ui_Widget_2_classLit = createForArray('[Lcom.google.gwt.user.client.ui.', 'Widget;'), Lcom_google_gwt_user_client_ui_FocusPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FocusPanel'), Lcom_google_gwt_user_client_ui_HTMLTable_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable'), Lcom_google_gwt_user_client_ui_Grid_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Grid'), Lcom_google_gwt_user_client_ui_LabelBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'LabelBase'), Lcom_google_gwt_user_client_ui_Label_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Label'), Lcom_google_gwt_user_client_ui_HTML_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTML'), Lcom_google_gwt_user_client_ui_HTMLTable$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable$1'), Lcom_google_gwt_user_client_ui_HTMLTable$Cell_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable$Cell'), Lcom_google_gwt_user_client_ui_HTMLTable$CellFormatter_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable$CellFormatter'), Lcom_google_gwt_user_client_ui_HTMLTable$ColumnFormatter_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable$ColumnFormatter'), Lcom_google_gwt_user_client_ui_HasHorizontalAlignment$AutoHorizontalAlignmentConstant_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HasHorizontalAlignment$AutoHorizontalAlignmentConstant'), Lcom_google_gwt_user_client_ui_HasHorizontalAlignment$HorizontalAlignmentConstant_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HasHorizontalAlignment$HorizontalAlignmentConstant'), Lcom_google_gwt_user_client_ui_HasVerticalAlignment$VerticalAlignmentConstant_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HasVerticalAlignment$VerticalAlignmentConstant'), Lcom_google_gwt_user_client_ui_HorizontalPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HorizontalPanel'), _3C_classLit = createForArray('', '[C'), Lcom_google_gwt_user_client_ui_PopupPanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel$1'), Lcom_google_gwt_user_client_ui_PopupPanel$3_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel$3'), Lcom_google_gwt_user_client_ui_PopupPanel$4_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel$4'), Lcom_google_gwt_user_client_ui_PopupPanel$ResizeAnimation_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel$ResizeAnimation'), Lcom_google_gwt_user_client_ui_RadioButton_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RadioButton'), Lcom_google_gwt_user_client_ui_RootPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel'), Lcom_google_gwt_user_client_ui_RootPanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$1'), Lcom_google_gwt_user_client_ui_RootPanel$2_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$2'), Lcom_google_gwt_user_client_ui_RootPanel$DefaultRootPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$DefaultRootPanel'), Lcom_google_gwt_user_client_ui_ScrollImpl_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ScrollImpl'), Lcom_google_gwt_user_client_ui_SimplePanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'SimplePanel$1'), Lcom_google_gwt_user_client_ui_VerticalPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'VerticalPanel'), Lcom_google_gwt_user_client_ui_WidgetCollection_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'WidgetCollection'), Lcom_google_gwt_user_client_ui_WidgetCollection$WidgetIterator_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'WidgetCollection$WidgetIterator'), Lcom_google_web_bindery_event_shared_SimpleEventBus$1_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus$1'), Lcom_google_web_bindery_event_shared_SimpleEventBus$2_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus$2'), Lcom_google_web_bindery_event_shared_SimpleEventBus$3_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus$3'), _3Ljava_lang_Throwable_2_classLit = createForArray('[Ljava.lang.', 'Throwable;'), Lcom_sciencegadgets_client_algebramanipulation_AlgebraManipulator_2_classLit = createForClass('com.sciencegadgets.client.algebramanipulation.', 'AlgebraManipulator'), Lcom_sciencegadgets_client_algebramanipulation_MLElementWrapper_2_classLit = createForClass('com.sciencegadgets.client.algebramanipulation.', 'MLElementWrapper'), Lcom_sciencegadgets_client_algebramanipulation_MLElementWrapper$ElementClickHandler_2_classLit = createForClass('com.sciencegadgets.client.algebramanipulation.', 'MLElementWrapper$ElementClickHandler'), Lcom_sciencegadgets_client_algebramanipulation_MLElementWrapper$ElementOutHandler_2_classLit = createForClass('com.sciencegadgets.client.algebramanipulation.', 'MLElementWrapper$ElementOutHandler'), Lcom_sciencegadgets_client_algebramanipulation_MLElementWrapper$ElementOverHandler_2_classLit = createForClass('com.sciencegadgets.client.algebramanipulation.', 'MLElementWrapper$ElementOverHandler'), Lcom_sciencegadgets_client_algebramanipulation_WrapDragController_2_classLit = createForClass('com.sciencegadgets.client.algebramanipulation.', 'WrapDragController'), Lcom_sciencegadgets_client_algebramanipulation_dropcontrollers_AbstractMathDropController_2_classLit = createForClass('com.sciencegadgets.client.algebramanipulation.dropcontrollers.', 'AbstractMathDropController'), Lcom_sciencegadgets_client_algebramanipulation_dropcontrollers_DropControllerAddition_2_classLit = createForClass('com.sciencegadgets.client.algebramanipulation.dropcontrollers.', 'DropControllerAddition'), Lcom_sciencegadgets_client_algebramanipulation_dropcontrollers_DropControllerBothSides_1Add_2_classLit = createForClass('com.sciencegadgets.client.algebramanipulation.dropcontrollers.', 'DropControllerBothSides_Add'), Lcom_sciencegadgets_client_algebramanipulation_dropcontrollers_DropControllerMultiplication_2_classLit = createForClass('com.sciencegadgets.client.algebramanipulation.dropcontrollers.', 'DropControllerMultiplication'), Lcom_sciencegadgets_client_equationbrowser_EquationBrowserEntry_2_classLit = createForClass('com.sciencegadgets.client.equationbrowser.', 'EquationBrowserEntry'), Lcom_sciencegadgets_client_equationbrowser_EquationBrowserEntry$EqClickHandler_2_classLit = createForClass('com.sciencegadgets.client.equationbrowser.', 'EquationBrowserEntry$EqClickHandler'), Lcom_sciencegadgets_client_equationbrowser_EquationBrowserEntry$ModeSelectHandler_2_classLit = createForClass('com.sciencegadgets.client.equationbrowser.', 'EquationBrowserEntry$ModeSelectHandler'), Lcom_sciencegadgets_client_equationbrowser_EquationBrowserEntry$MultiSwitchClickHandler_2_classLit = createForClass('com.sciencegadgets.client.equationbrowser.', 'EquationBrowserEntry$MultiSwitchClickHandler'), Lcom_sciencegadgets_client_equationbrowser_EquationBrowserEntry$VarClickHandler_2_classLit = createForClass('com.sciencegadgets.client.equationbrowser.', 'EquationBrowserEntry$VarClickHandler'), Lcom_sciencegadgets_client_equationbrowser_EquationBrowserEntryGadgetImpl_2_classLit = createForClass('com.sciencegadgets.client.equationbrowser.', 'EquationBrowserEntryGadgetImpl'), _3B_classLit = createForArray('', '[B'), _3_3Ljava_lang_String_2_classLit = createForArray('[[Ljava.lang.', 'String;'), _3S_classLit = createForArray('', '[S'), _3_3S_classLit = createForArray('', '[[S'), Lcom_sciencegadgets_client_equationbrowser_EquationDatabase_2_classLit = createForClass('com.sciencegadgets.client.equationbrowser.', 'EquationDatabase'), Lcom_sciencegadgets_client_equationbrowser_EquationDatabase$V_2_classLit = createForEnum('com.sciencegadgets.client.equationbrowser.', 'EquationDatabase$V', values_5), _3Lcom_sciencegadgets_client_equationbrowser_EquationDatabase$V_2_classLit = createForArray('[Lcom.sciencegadgets.client.equationbrowser.', 'EquationDatabase$V;'), Lcom_sciencegadgets_client_equationtree_DropControllAssigner$DropType_2_classLit = createForEnum('com.sciencegadgets.client.equationtree.', 'DropControllAssigner$DropType', values_6), _3Lcom_sciencegadgets_client_equationtree_DropControllAssigner$DropType_2_classLit = createForArray('[Lcom.sciencegadgets.client.equationtree.', 'DropControllAssigner$DropType;'), Lcom_sciencegadgets_client_equationtree_JohnTree_2_classLit = createForClass('com.sciencegadgets.client.equationtree.', 'JohnTree'), Lcom_sciencegadgets_client_equationtree_JohnTree$JohnNode_2_classLit = createForClass('com.sciencegadgets.client.equationtree.', 'JohnTree$JohnNode'), Lcom_sciencegadgets_client_equationtree_JohnTree$MLTreeToMathTree_2_classLit = createForClass('com.sciencegadgets.client.equationtree.', 'JohnTree$MLTreeToMathTree'), Lcom_sciencegadgets_client_equationtree_MathMLParser_2_classLit = createForClass('com.sciencegadgets.client.equationtree.', 'MathMLParser'), Lcom_sciencegadgets_client_equationtree_JohnTree$MLtoMLTree_2_classLit = createForClass('com.sciencegadgets.client.equationtree.', 'JohnTree$MLtoMLTree'), Lcom_sciencegadgets_client_equationtree_JohnTree$MathTreeToML_2_classLit = createForClass('com.sciencegadgets.client.equationtree.', 'JohnTree$MathTreeToML'), Lcom_sciencegadgets_client_equationtree_JohnTree$Type_2_classLit = createForEnum('com.sciencegadgets.client.equationtree.', 'JohnTree$Type', values_7), _3Lcom_sciencegadgets_client_equationtree_JohnTree$Type_2_classLit = createForArray('[Lcom.sciencegadgets.client.equationtree.', 'JohnTree$Type;'), Lorg_vaadin_gwtgraphics_client_DrawingArea_2_classLit = createForClass('org.vaadin.gwtgraphics.client.', 'DrawingArea'), Lcom_sciencegadgets_client_equationtree_TreeCanvas_2_classLit = createForClass('com.sciencegadgets.client.equationtree.', 'TreeCanvas'), Ljava_lang_Number_2_classLit = createForClass('java.lang.', 'Number'), Ljava_lang_Byte_2_classLit = createForClass('java.lang.', 'Byte'), _3Ljava_lang_Byte_2_classLit = createForArray('[Ljava.lang.', 'Byte;'), Ljava_lang_Class_2_classLit = createForClass('java.lang.', 'Class'), Ljava_lang_Short_2_classLit = createForClass('java.lang.', 'Short'), _3Ljava_lang_Short_2_classLit = createForArray('[Ljava.lang.', 'Short;'), Ljava_lang_StringBuffer_2_classLit = createForClass('java.lang.', 'StringBuffer'), Ljava_lang_StringBuilder_2_classLit = createForClass('java.lang.', 'StringBuilder'), Ljava_util_AbstractHashMap_2_classLit = createForClass('java.util.', 'AbstractHashMap'), Ljava_util_AbstractHashMap$EntrySet_2_classLit = createForClass('java.util.', 'AbstractHashMap$EntrySet'), Ljava_util_AbstractHashMap$EntrySetIterator_2_classLit = createForClass('java.util.', 'AbstractHashMap$EntrySetIterator'), Ljava_util_AbstractMapEntry_2_classLit = createForClass('java.util.', 'AbstractMapEntry'), Ljava_util_AbstractHashMap$MapEntryNull_2_classLit = createForClass('java.util.', 'AbstractHashMap$MapEntryNull'), Ljava_util_AbstractHashMap$MapEntryString_2_classLit = createForClass('java.util.', 'AbstractHashMap$MapEntryString'), Ljava_util_AbstractList$IteratorImpl_2_classLit = createForClass('java.util.', 'AbstractList$IteratorImpl'), Ljava_util_AbstractList$ListIteratorImpl_2_classLit = createForClass('java.util.', 'AbstractList$ListIteratorImpl'), Ljava_util_AbstractMap$1_2_classLit = createForClass('java.util.', 'AbstractMap$1'), Ljava_util_AbstractMap$1$1_2_classLit = createForClass('java.util.', 'AbstractMap$1$1'), Ljava_util_AbstractSequentialList_2_classLit = createForClass('java.util.', 'AbstractSequentialList'), Ljava_util_Collections$EmptyList_2_classLit = createForClass('java.util.', 'Collections$EmptyList'), Ljava_util_Date_2_classLit = createForClass('java.util.', 'Date'), Ljava_util_HashMap_2_classLit = createForClass('java.util.', 'HashMap'), Ljava_util_MapEntryImpl_2_classLit = createForClass('java.util.', 'MapEntryImpl'), Ljava_util_LinkedList_2_classLit = createForClass('java.util.', 'LinkedList'), Ljava_util_LinkedList$ListIteratorImpl_2_classLit = createForClass('java.util.', 'LinkedList$ListIteratorImpl'), Ljava_util_LinkedList$Node_2_classLit = createForClass('java.util.', 'LinkedList$Node'), Ljava_util_logging_LogManager_2_classLit = createForClass('java.util.logging.', 'LogManager'), Ljava_util_logging_LogManager$RootLogger_2_classLit = createForClass('java.util.logging.', 'LogManager$RootLogger'), Lorg_vaadin_gwtgraphics_client_VectorObject_2_classLit = createForClass('org.vaadin.gwtgraphics.client.', 'VectorObject'), Lorg_vaadin_gwtgraphics_client_Group_2_classLit = createForClass('org.vaadin.gwtgraphics.client.', 'Group'), Lorg_vaadin_gwtgraphics_client_Image_2_classLit = createForClass('org.vaadin.gwtgraphics.client.', 'Image'), Lorg_vaadin_gwtgraphics_client_Line_2_classLit = createForClass('org.vaadin.gwtgraphics.client.', 'Line'), Lorg_vaadin_gwtgraphics_client_Shape_2_classLit = createForClass('org.vaadin.gwtgraphics.client.', 'Shape'), Lorg_vaadin_gwtgraphics_client_shape_Rectangle_2_classLit = createForClass('org.vaadin.gwtgraphics.client.shape.', 'Rectangle'), Lorg_vaadin_gwtgraphics_client_shape_Circle_2_classLit = createForClass('org.vaadin.gwtgraphics.client.shape.', 'Circle'), Lorg_vaadin_gwtgraphics_client_shape_Ellipse_2_classLit = createForClass('org.vaadin.gwtgraphics.client.shape.', 'Ellipse'), Lorg_vaadin_gwtgraphics_client_shape_Path_2_classLit = createForClass('org.vaadin.gwtgraphics.client.shape.', 'Path'), Lorg_vaadin_gwtgraphics_client_shape_Text_2_classLit = createForClass('org.vaadin.gwtgraphics.client.shape.', 'Text'), Lorg_vaadin_gwtgraphics_client_impl_SVGImpl$1_2_classLit = createForClass('org.vaadin.gwtgraphics.client.impl.', 'SVGImpl$1');\n$sendStats('moduleStartup', 'moduleEvalEnd');\ngwtOnLoad(__gwtModuleFunction.__errFn, __gwtModuleFunction.__moduleName, __gwtModuleFunction.__moduleBase, __gwtModuleFunction.__softPermutationId,__gwtModuleFunction.__computePropValue);\n$sendStats('moduleStartup', 'end');")