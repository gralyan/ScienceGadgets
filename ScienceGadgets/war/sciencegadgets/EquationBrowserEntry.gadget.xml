<?xml version="1.0" encoding="UTF-8"?><Module><ModulePrefs author="John Gralyan" author_email="john.gralyan@gmail.com" title="ScienceGadgets"/><Content type="html"><![CDATA[<!DOCTYPE html><script>function sciencegadgets(){
  var $wnd_0 = window;
  var $doc_0 = document;
  sendStats('bootstrap', 'begin');
  function isHostedMode(){
    var query = $wnd_0.location.search;
    return query.indexOf('gwt.codesvr.sciencegadgets=') != -1 || query.indexOf('gwt.codesvr=') != -1;
  }

  function sendStats(evtGroupString, typeString){
    if ($wnd_0.__gwtStatsEvent) {
      $wnd_0.__gwtStatsEvent({moduleName:'sciencegadgets', sessionId:$wnd_0.__gwtStatsSessionId, subSystem:'startup', evtGroup:evtGroupString, millis:(new Date).getTime(), type:typeString});
    }
  }

  sciencegadgets.__sendStats = sendStats;
  sciencegadgets.__moduleName = 'sciencegadgets';
  sciencegadgets.__errFn = null;
  sciencegadgets.__moduleBase = 'DUMMY';
  sciencegadgets.__softPermutationId = 0;
  sciencegadgets.__computePropValue = null;
  var __gwt_isKnownPropertyValue = function(){
    return false;
  }
  ;
  var __gwt_getMetaProperty = function(){
    return null;
  }
  ;
  __propertyErrorFunction = null;
  function installScript(filename){
    var frameDoc;
    function getInstallLocationDoc(){
      setupInstallLocation();
      return frameDoc;
    }

    function getInstallLocation(){
      setupInstallLocation();
      return frameDoc.getElementsByTagName('body')[0];
    }

    function setupInstallLocation(){
      if (frameDoc) {
        return;
      }
      var scriptFrame = $doc_0.createElement('iframe');
      scriptFrame.src = 'javascript:""';
      scriptFrame.id = 'sciencegadgets';
      scriptFrame.style.cssText = 'position:absolute; width:0; height:0; border:none; left: -1000px; top: -1000px; !important';
      scriptFrame.tabIndex = -1;
      $doc_0.body.appendChild(scriptFrame);
      frameDoc = scriptFrame.contentDocument;
      if (!frameDoc) {
        frameDoc = scriptFrame.contentWindow.document;
      }
      frameDoc.open();
      frameDoc.write('<html><head><\/head><body><\/body><\/html>');
      frameDoc.close();
      var frameDocbody = frameDoc.getElementsByTagName('body')[0];
      var script = frameDoc.createElement('script');
      script.language = 'javascript';
      var temp = 'var $wnd = window.parent;';
      script.text = temp;
      frameDocbody.appendChild(script);
    }

    function setupWaitForBodyLoad(callback){
      function isBodyLoaded(){
        if (typeof $doc_0.readyState == 'undefined') {
          return typeof $doc_0.body != 'undefined' && $doc_0.body != null;
        }
        return /loaded|complete/.test($doc_0.readyState);
      }

      var bodyDone = false;
      if (isBodyLoaded()) {
        bodyDone = true;
        callback();
      }
      var onBodyDoneTimerId;
      function onBodyDone(){
        if (!bodyDone) {
          bodyDone = true;
          callback();
          if ($doc_0.removeEventListener) {
            $doc_0.removeEventListener('DOMContentLoaded', onBodyDone, false);
          }
          if (onBodyDoneTimerId) {
            clearInterval(onBodyDoneTimerId);
          }
        }
      }

      if ($doc_0.addEventListener) {
        $doc_0.addEventListener('DOMContentLoaded', function(){
          onBodyDone();
        }
        , false);
      }
      var onBodyDoneTimerId = setInterval(function(){
        if (isBodyLoaded()) {
          onBodyDone();
        }
      }
      , 50);
    }

    function installCode(code){
      var docbody = getInstallLocation();
      var script = getInstallLocationDoc().createElement('script');
      script.language = 'javascript';
      script.text = code;
      docbody.appendChild(script);
    }

    sciencegadgets.onScriptDownloaded = function(code){
      setupWaitForBodyLoad(function(){
        installCode(code);
      }
      );
    }
    ;
    sendStats('moduleStartup', 'moduleRequested');
    var script_0 = $doc_0.createElement('script');
    script_0.src = filename;
    $doc_0.getElementsByTagName('head')[0].appendChild(script_0);
  }

  function processMetas(){
    var metaProps = {};
    var propertyErrorFunc;
    var onLoadErrorFunc;
    var meta;
    var prefs = new $wnd_0.gadgets.Prefs;
    if (meta = prefs.getString('gwt:onLoadErrorFn')) {
      try {
        onLoadErrorFunc = eval(meta);
      }
       catch (e) {
        alert('Bad handler "' + content_0 + '" for "gwt:onLoadErrorFn"');
      }
    }
    if (meta = prefs.getString('gwt:onPropertyErrorFn')) {
      try {
        propertyErrorFunc = eval(meta);
      }
       catch (e) {
        alert('Bad handler "' + content_0 + '" for "gwt:onPropertyErrorFn"');
      }
    }
    if (meta = prefs.getArray('gwt:property')) {
      for (var i = 0; i < meta.length; i++) {
        var content_0 = meta[i];
        if (content_0) {
          var value_0, eq = content_0.indexOf('=');
          if (eq >= 0) {
            name = content_0.substring(0, eq);
            value_0 = content_0.substring(eq + 1);
          }
           else {
            name = content_0;
            value_0 = '';
          }
          metaProps[name] = value_0;
        }
      }
    }
    if (metaProps['locale'] == null) {
      var lang = $wnd_0.gadgets.util.getUrlParameters()['lang'];
      if (lang != null) {
        var country = $wnd_0.gadgets.util.getUrlParameters()['country'];
        if (country != null) {
          metaProps['locale'] = lang + '_' + country;
        }
         else {
          metaProps['locale'] = lang;
        }
      }
    }
    __gwt_getMetaProperty = function(name_0){
      var value = metaProps[name_0];
      return value == null?null:value;
    }
    ;
    __propertyErrorFunction = propertyErrorFunc;
    sciencegadgets.__errFn = onLoadErrorFunc;
  }

  function computeScriptBase(){
    var tmpBase = $wnd_0.gadgets.util.getUrlParameters()['url'];
    tmpBase = tmpBase.substring(0, tmpBase.lastIndexOf('/') + 1);
    return tmpBase;
  }

  function computeUrlForResource(resource){
    var cacheSpec;
    if (resource.match(/\.cache\.(js|html)$/)) {
      cacheSpec = {refreshInterval:31536000};
    }
    if (!resource.match(/^[a-zA-Z]+:\/\//)) {
      resource = sciencegadgets.__moduleBase + resource;
    }
    return $wnd_0.gadgets.io.getProxyUrl(resource, cacheSpec);
  }

  function getCompiledCodeFilename(){
    var answers = [];
    var softPermutationId;
    function unflattenKeylistIntoAnswers(propValArray, value){
      var answer = answers;
      for (var i = 0, n = propValArray.length - 1; i < n; ++i) {
        answer = answer[propValArray[i]] || (answer[propValArray[i]] = []);
      }
      answer[propValArray[n]] = value;
    }

    var values = [];
    var providers = [];
    function computePropValue(propName){
      var value = providers[propName](), allowedValuesMap = values[propName];
      if (value in allowedValuesMap) {
        return value;
      }
      var allowedValuesList = [];
      for (var k in allowedValuesMap) {
        allowedValuesList[allowedValuesMap[k]] = k;
      }
      if (__propertyErrorFunc) {
        __propertyErrorFunc(propName, allowedValuesList, value);
      }
      throw null;
    }

    providers['user.agent'] = function(){
      var ua = navigator.userAgent.toLowerCase();
      var makeVersion = function(result){
        return parseInt(result[1]) * 1000 + parseInt(result[2]);
      }
      ;
      if (function(){
        return ua.indexOf('opera') != -1;
      }
      ())
        return 'opera';
      if (function(){
        return ua.indexOf('webkit') != -1 || function(){
          if (ua.indexOf('chromeframe') != -1) {
            return true;
          }
          if (typeof window['ActiveXObject'] != 'undefined') {
            try {
              var obj = new ActiveXObject('ChromeTab.ChromeFrame');
              if (obj) {
                obj.registerBhoIfNeeded();
                return true;
              }
            }
             catch (e) {
            }
          }
          return false;
        }
        ();
      }
      ())
        return 'safari';
      if (function(){
        return ua.indexOf('msie') != -1 && $doc_0.documentMode >= 9;
      }
      ())
        return 'ie9';
      if (function(){
        return ua.indexOf('msie') != -1 && $doc_0.documentMode >= 8;
      }
      ())
        return 'ie8';
      if (function(){
        var result = /msie ([0-9]+)\.([0-9]+)/.exec(ua);
        if (result && result.length == 3)
          return makeVersion(result) >= 6000;
      }
      ())
        return 'ie6';
      if (function(){
        return ua.indexOf('gecko') != -1;
      }
      ())
        return 'gecko1_8';
      return 'unknown';
    }
    ;
    values['user.agent'] = {gecko1_8:0, ie6:1, ie8:2, ie9:3, opera:4, safari:5};
    __gwt_isKnownPropertyValue = function(propName, propValue){
      return propValue in values[propName];
    }
    ;
    sciencegadgets.__computePropValue = computePropValue;
    sendStats('bootstrap', 'selectingPermutation');
    if (isHostedMode()) {
      return computeUrlForResource('sciencegadgets.devmode.js');
    }
    var strongName;
    try {
      unflattenKeylistIntoAnswers(['opera'], '4BE64BFF3B6347E0965AC976BFF49234');
      unflattenKeylistIntoAnswers(['ie8'], '65B43A39523B15E6EC6CF101CA144C71');
      unflattenKeylistIntoAnswers(['ie6'], '7419D28E11DD26F3A7720AE5B273A606');
      unflattenKeylistIntoAnswers(['ie9'], 'BFCA32C1E871A29F2396CF356668C2AB');
      unflattenKeylistIntoAnswers(['gecko1_8'], 'D3851431047788AF38745261F813ABAE');
      unflattenKeylistIntoAnswers(['safari'], 'E19ED6D7313B46ACCE299F4171054562');
      strongName = answers[computePropValue('user.agent')];
      var idx = strongName.indexOf(':');
      if (idx != -1) {
        softPermutationId = strongName.substring(idx + 1);
        strongName = strongName.substring(0, idx);
      }
    }
     catch (e) {
    }
    sciencegadgets.__softPermutationId = softPermutationId;
    return computeUrlForResource(strongName + '.cache.js');
  }

  function loadExternalStylesheets(){
    if (!$wnd_0.__gwt_stylesLoaded) {
      $wnd_0.__gwt_stylesLoaded = {};
    }
    function installOneStylesheet(stylesheetUrl){
      if (!__gwt_stylesLoaded[stylesheetUrl]) {
        var l = $doc_0.createElement('link');
        l.setAttribute('rel', 'stylesheet');
        l.setAttribute('href', computeUrlForResource(stylesheetUrl));
        $doc_0.getElementsByTagName('head')[0].appendChild(l);
        __gwt_stylesLoaded[stylesheetUrl] = true;
      }
    }

    sendStats('loadExternalRefs', 'begin');
    installOneStylesheet('gwt/clean/clean.css');
    sendStats('loadExternalRefs', 'end');
  }

  processMetas();
  sciencegadgets.__moduleBase = computeScriptBase();
  var filename_0 = getCompiledCodeFilename();
  loadExternalStylesheets();
  sendStats('bootstrap', 'end');
  installScript(filename_0);
}

sciencegadgets();
</script>
<div id="__gwt_gadget_content_div"></div>]]></Content></Module>
